{"version":3,"file":"static/js/996.ed3ed18a.chunk.js","mappings":"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","sources":["utils.ts","components/Header.tsx","components/ColorSchemeToggle.tsx","components/SidebarNew.tsx","hooks/useLogout.ts","nav.js","views/dashboard/Dashboard.tsx","views/cases/CasesTable.tsx","lib/utils.tsx","views/cases/Cases.tsx","components/OrderList.tsx","views/assigned/AssignedAppointmentsTable.tsx","views/assigned/AssignedAppointments.tsx","components/CountrySelector.tsx","views/cases/CaseView/CaseView.tsx","views/addCase/AddCase.tsx","views/cases/CaseView/SurgeryDetails.tsx","views/cases/CaseView/ActivityLog.tsx","views/cases/CaseView/AddActivty.tsx","views/cases/CaseView/DetailView.tsx","views/calendar/WeekView.tsx","views/calendar/modules/BlockTimeModal.jsx","views/calendar/CalendarScreen.tsx","AppContent.tsx","AppLayout.tsx"],"sourcesContent":["export const openSidebar = () => {\n  if (typeof document !== 'undefined') {\n    document.body.style.overflow = 'hidden';\n    document.documentElement.style.setProperty('--SideNavigation-slideIn', '1');\n  }\n};\n\nexport const closeSidebar = () => {\n  if (typeof document !== 'undefined') {\n    document.documentElement.style.removeProperty('--SideNavigation-slideIn');\n    document.body.style.removeProperty('overflow');\n  }\n};\n\nexport const toggleSidebar = () => {\n  if (typeof window !== 'undefined' && typeof document !== 'undefined') {\n    const slideIn = window\n      .getComputedStyle(document.documentElement)\n      .getPropertyValue('--SideNavigation-slideIn');\n    if (slideIn) {\n      closeSidebar();\n    } else {\n      openSidebar();\n    }\n  }\n};\n","import * as React from 'react';\nimport GlobalStyles from '@mui/joy/GlobalStyles';\nimport Sheet from '@mui/joy/Sheet';\nimport IconButton from '@mui/joy/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\n\nimport { toggleSidebar } from '../utils';\n\nexport default function Header() {\n  return (\n    <Sheet\n      sx={{\n        display: { xs: 'flex', md: 'none' },\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        position: 'fixed',\n        top: 0,\n        width: '100vw',\n        height: 'var(--Header-height)',\n        zIndex: 9995,\n        p: 2,\n        gap: 1,\n        borderBottom: '1px solid',\n        borderColor: 'background.level1',\n        boxShadow: 'sm',\n      }}\n    >\n      <GlobalStyles\n        styles={(theme) => ({\n          ':root': {\n            '--Header-height': '52px',\n            [theme.breakpoints.up('md')]: {\n              '--Header-height': '0px',\n            },\n          },\n        })}\n      />\n      <IconButton\n        onClick={() => toggleSidebar()}\n        variant=\"outlined\"\n        color=\"neutral\"\n        size=\"sm\"\n      >\n        <MenuIcon />\n      </IconButton>\n    </Sheet>\n  );\n}\n","import * as React from 'react';\nimport { useColorScheme } from '@mui/joy/styles';\nimport IconButton, { IconButtonProps } from '@mui/joy/IconButton';\n\nimport DarkModeRoundedIcon from '@mui/icons-material/DarkModeRounded';\nimport LightModeIcon from '@mui/icons-material/LightMode';\n\nexport default function ColorSchemeToggle({\n  onClick,\n  sx,\n  ...props\n}: IconButtonProps) {\n  const { mode, setMode } = useColorScheme();\n  const [mounted, setMounted] = React.useState(false);\n  React.useEffect(() => {\n    setMounted(true);\n  }, []);\n  if (!mounted) {\n    return (\n      <IconButton\n        size=\"sm\"\n        variant=\"outlined\"\n        color=\"neutral\"\n        {...props}\n        sx={sx}\n        disabled\n      />\n    );\n  }\n  return (\n    <IconButton\n      id=\"toggle-mode\"\n      size=\"sm\"\n      variant=\"outlined\"\n      color=\"neutral\"\n      {...props}\n      onClick={(event) => {\n        if (mode === 'light') {\n          setMode('dark');\n        } else {\n          setMode('light');\n        }\n        onClick?.(event);\n      }}\n      sx={[\n        {\n          '& > *:first-child': {\n            display: mode === 'dark' ? 'none' : 'initial',\n          },\n          '& > *:last-child': {\n            display: mode === 'light' ? 'none' : 'initial',\n          },\n        },\n        ...(Array.isArray(sx) ? sx : [sx]),\n      ]}\n    >\n      <DarkModeRoundedIcon />\n      <LightModeIcon />\n    </IconButton>\n  );\n}\n","import * as React from \"react\";\nimport GlobalStyles from \"@mui/joy/GlobalStyles\";\nimport Avatar from \"@mui/joy/Avatar\";\nimport Box from \"@mui/joy/Box\";\nimport Button from \"@mui/joy/Button\";\nimport Card from \"@mui/joy/Card\";\nimport Chip from \"@mui/joy/Chip\";\nimport Divider from \"@mui/joy/Divider\";\nimport IconButton from \"@mui/joy/IconButton\";\nimport Input from \"@mui/joy/Input\";\nimport LinearProgress from \"@mui/joy/LinearProgress\";\nimport List from \"@mui/joy/List\";\nimport ListItem from \"@mui/joy/ListItem\";\nimport ListItemButton, { listItemButtonClasses } from \"@mui/joy/ListItemButton\";\nimport ListItemContent from \"@mui/joy/ListItemContent\";\nimport Typography from \"@mui/joy/Typography\";\nimport Sheet from \"@mui/joy/Sheet\";\nimport Stack from \"@mui/joy/Stack\";\nimport SearchRoundedIcon from \"@mui/icons-material/SearchRounded\";\nimport HomeRoundedIcon from \"@mui/icons-material/HomeRounded\";\nimport DashboardRoundedIcon from \"@mui/icons-material/DashboardRounded\";\nimport ShoppingCartRoundedIcon from \"@mui/icons-material/ShoppingCartRounded\";\nimport AssignmentRoundedIcon from \"@mui/icons-material/AssignmentRounded\";\nimport QuestionAnswerRoundedIcon from \"@mui/icons-material/QuestionAnswerRounded\";\nimport GroupRoundedIcon from \"@mui/icons-material/GroupRounded\";\nimport SupportRoundedIcon from \"@mui/icons-material/SupportRounded\";\nimport SettingsRoundedIcon from \"@mui/icons-material/SettingsRounded\";\nimport CloseRoundedIcon from \"@mui/icons-material/CloseRounded\";\nimport LogoutRoundedIcon from \"@mui/icons-material/LogoutRounded\";\nimport BrightnessAutoRoundedIcon from \"@mui/icons-material/BrightnessAutoRounded\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\n\nimport ColorSchemeToggle from \"./ColorSchemeToggle\";\nimport { closeSidebar } from \"../utils\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport useLogout from \"../hooks/useLogout\";\n\nfunction Toggler({\n  defaultExpanded = false,\n  renderToggle,\n  children,\n}: {\n  defaultExpanded?: boolean;\n  children: React.ReactNode;\n  renderToggle: (params: {\n    open: boolean;\n    setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  }) => React.ReactNode;\n}) {\n  const [open, setOpen] = React.useState(defaultExpanded);\n  return (\n    <React.Fragment>\n      {renderToggle({ open, setOpen })}\n      <Box\n        sx={{\n          display: \"grid\",\n          gridTemplateRows: open ? \"1fr\" : \"0fr\",\n          transition: \"0.2s ease\",\n          \"& > *\": {\n            overflow: \"hidden\",\n          },\n        }}\n      >\n        {children}\n      </Box>\n    </React.Fragment>\n  );\n}\ninterface MenuItem {\n  icon?: React.ReactElement;\n  label: string;\n  link: string;\n  submenu?: MenuItem[];\n  nested?: boolean;\n}\n\ninterface SidebarProps {\n  menuItems: MenuItem[];\n}\n\nexport default function Sidebar({ menuItems }: SidebarProps) {\n  const logout = useLogout();\n  return (\n    <Sheet\n      className=\"Sidebar\"\n      sx={{\n        position: \"fixed\",\n        // position: {\n        //   sm: \"fixed\",\n        //   md: \"sticky\",\n        // },\n        transform: {\n          xs: \"translateX(calc(100% * (var(--SideNavigation-slideIn, 0) - 1)))\",\n          md: \"none\",\n        },\n        transition: \"transform 0.4s, width 0.4s\",\n        zIndex: 10000,\n        height: \"100dvh\",\n        width: \"var(--Sidebar-width)\",\n        top: 0,\n        p: 2,\n        flexShrink: 0,\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: 2,\n        borderRight: \"1px solid\",\n        borderColor: \"divider\",\n      }}\n    >\n      <GlobalStyles\n        styles={(theme) => ({\n          \":root\": {\n            \"--Sidebar-width\": \"220px\",\n            [theme.breakpoints.up(\"lg\")]: {\n              \"--Sidebar-width\": \"240px\",\n            },\n          },\n        })}\n      />\n      <Box\n        className=\"Sidebar-overlay\"\n        sx={{\n          position: \"fixed\",\n          zIndex: 9998,\n          top: 0,\n          left: 0,\n          width: \"100vw\",\n          height: \"100vh\",\n          opacity: \"var(--SideNavigation-slideIn)\",\n          backgroundColor: \"var(--joy-palette-background-backdrop)\",\n          transition: \"opacity 0.4s\",\n          transform: {\n            xs: \"translateX(calc(100% * (var(--SideNavigation-slideIn, 0) - 1) + var(--SideNavigation-slideIn, 0) * var(--Sidebar-width, 0px)))\",\n            lg: \"translateX(-100%)\",\n          },\n        }}\n        onClick={() => closeSidebar()}\n      />\n\n<Box sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }}>\n        <IconButton variant=\"soft\" color=\"primary\" size=\"sm\">\n          <BrightnessAutoRoundedIcon />\n        </IconButton>\n        <Typography level=\"title-lg\">SurgeryX</Typography>\n        {/* Logout button */}\n        <IconButton variant=\"soft\" color=\"primary\" size=\"sm\" className=\"logout-button\" onClick={logout}>\n          <LogoutRoundedIcon />\n        </IconButton>\n        <ColorSchemeToggle sx={{ ml: \"auto\" }} />\n      </Box>\n      {/* ... (rest of your code) */}\n      <List size=\"sm\" sx={{ gap: 1 }}>\n        {menuItems.map((menuItem, index) => (\n          <ListItem key={index} nested={menuItem.nested}>\n            {menuItem.nested ? (\n              <Toggler\n                renderToggle={({ open, setOpen }) => (\n                  <ListItemButton onClick={() => setOpen(!open)}>\n                    {menuItem.icon}\n                    <ListItemContent>\n                      <Typography level=\"title-sm\">{menuItem.label}</Typography>\n                    </ListItemContent>\n                    <KeyboardArrowDownIcon\n                      sx={{ transform: open ? \"rotate(180deg)\" : \"none\" }}\n                    />\n                  </ListItemButton>\n                )}\n              >\n                {/* ... (nested list) */}\n                <List sx={{ gap: 0.5 }}>\n                  {menuItem.submenu &&\n                    menuItem.submenu.map((nestedItem, nestedIndex) => (\n                      <ListItem key={nestedIndex}>\n                        <ListItemButton\n                          role=\"menuitem\"\n                          component={RouterLink}\n                          to={nestedItem.link}\n                        >\n                          {nestedItem.icon}\n                          <ListItemContent>\n                            <Typography level=\"title-sm\">\n                              {nestedItem.label}\n                            </Typography>\n                          </ListItemContent>\n                        </ListItemButton>\n                      </ListItem>\n                    ))}\n                </List>\n              </Toggler>\n            ) : (\n              <ListItemButton\n                role=\"menuitem\"\n                component={RouterLink}\n                to={menuItem.link}\n              >\n                {menuItem.icon}\n                <ListItemContent>\n                  <Typography level=\"title-sm\">{menuItem.label}</Typography>\n                </ListItemContent>\n              </ListItemButton>\n            )}\n          </ListItem>\n        ))}\n      </List>\n    </Sheet>\n  );\n}\n","import React from \"react\"\nimport {pb} from \"../services/pocketbase\"\nimport { useNavigate } from 'react-router-dom';\n\n\nexport default function useLogout() {\n    const navigate = useNavigate();\n\n    async function logout() {\n        pb.authStore.clear();\n        navigate(\"/login\");\n    }\n    return logout\n}","import HomeRoundedIcon from \"@mui/icons-material/HomeRounded\";\nimport DashboardRoundedIcon from \"@mui/icons-material/DashboardRounded\";\nimport PersonAddIcon from \"@mui/icons-material/PersonAdd\";\nimport { ReactNode } from \"react\";\nimport {\n  AssignmentIndRounded,\n  CalendarMonthRounded,\n} from \"@mui/icons-material\";\n\nconst menuItems = [\n  {\n    icon: <AssignmentIndRounded />,\n    label: \"Assigned To Me\",\n    link: \"/assigned\",\n  },\n  {\n    icon: <HomeRoundedIcon />,\n    label: \"All Cases\",\n    link: \"/cases\",\n  },\n  {\n    icon: <CalendarMonthRounded />,\n    label: \"Calendar\",\n    link: \"/calendar\",\n  },\n  {\n    icon: <DashboardRoundedIcon />,\n    label: \"Stats\",\n    link: \"/stats\",\n  },\n  {\n    label: \"Add a Case\",\n    icon: <PersonAddIcon />,\n    link: \"/addCase\",\n  },\n];\n\nexport default menuItems;\n","// import React from \"react\";\n// import PocketBase from \"pocketbase\";\n// import { pb } from \"../../services/pocketbase\";\n\n// const Dashboard: React.FC = () => {\n\n\n//   const uploadFile = async () => {\n//     const fileInput = document.getElementById(\"fileInput\") as HTMLInputElement;\n\n//     if (fileInput && fileInput.files && fileInput.files.length > 0) {\n//       const formData = new FormData();\n//       formData.append(\"file\", fileInput.files[0]);\n\n//       try {\n//         const createdRecord = await pb.collection(\"waqar\").create(formData);\n//         console.log(\"createdRecord:\", createdRecord);\n//       } catch (error) {\n//         console.error(error);\n//       }\n//     }\n//   };\n\n//   const downloadFile = (recordId: string, fileName: string) => {\n//     // const fileUrl = `${apiURL}/api/files/waqar/${recordId}/${fileName}`;\n//     // window.open(fileUrl, \"_blank\");\n//     alert('Code was wrong for downloading')\n//   };\n\n//   return (\n//     <div>\n//       <input type=\"file\" id=\"fileInput\" accept=\".pdf,.csv\" />\n//       <button onClick={uploadFile}>Upload File</button>\n//       <button\n//         onClick={() => downloadFile(\"kc8og6u4sgujt3h\", \"minder_hyqVZX1GNP.pdf\")}\n//       >\n//         Download File\n//       </button>\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\n\nimport React from 'react';\n// import {\n//   Box,\n//   Typography,\n//   CircularProgress,\n//   Card,\n//   CardContent,\n//   Stack\n// } from '@mui/joy';\nimport Box from '@mui/joy/Box';\nimport Typography from '@mui/joy/Typography';\n// import CircularProgress from '@mui/joy/CircularProgress';\nimport Stack from '@mui/joy/Stack';\n\n\n\n// import { PieChart, Pie, Tooltip, Cell } from 'recharts';\n\n// Dummy data\nconst dashboardData = {\n  totalNewPatients: 25,\n  surgerySchedule: [\n    { name: 'Orthopedic', value: 10 },\n    { name: 'Podiatry', value: 8 },\n    { name: 'Others', value: 7 },\n  ],\n  totalSurgeriesCompleted: 15,\n  surgeonUtilization: {\n    freeTime: 30,\n    scheduledSurgeries: 60,\n    blockedTime: 10,\n  },\n  doctorUtilization: [\n    { name: 'Dr. Smith', utilization: 70 },\n    { name: 'Dr. Johnson', utilization: 85 },\n    // Add more doctors as needed\n  ],\n  // Add more dummy data as needed\n};\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28'];\n\nconst Dashboard = () => {\n  return (\n    <Box>\n      {/* <h1>Dashboard</h1> */}\n\n      <Typography level=\"h4\" mb={2}>\n        Surgery Software Dashboard\n      </Typography>\n\n      <Stack>\n        <Box>\n          <Typography level=\"h4\">Total New Patients</Typography>\n          <Typography level=\"h4\">{dashboardData.totalNewPatients}</Typography>\n        </Box>\n      </Stack>\n    </Box>\n\n\n  );\n};\n\nexport default Dashboard;\n","import React, { useState, useEffect } from \"react\";\nimport Box from \"@mui/joy/Box\";\nimport Button from \"@mui/joy/Button\";\nimport Divider from \"@mui/joy/Divider\";\nimport FormControl from \"@mui/joy/FormControl\";\nimport FormLabel from \"@mui/joy/FormLabel\";\nimport Link from \"@mui/joy/Link\";\nimport Input from \"@mui/joy/Input\";\nimport Modal from \"@mui/joy/Modal\";\nimport ModalDialog from \"@mui/joy/ModalDialog\";\nimport ModalClose from \"@mui/joy/ModalClose\";\nimport Select from \"@mui/joy/Select\";\nimport Option from \"@mui/joy/Option\";\nimport Table from \"@mui/joy/Table\";\nimport Sheet from \"@mui/joy/Sheet\";\nimport Checkbox from \"@mui/joy/Checkbox\";\nimport IconButton, { iconButtonClasses } from \"@mui/joy/IconButton\";\nimport Typography from \"@mui/joy/Typography\";\nimport Menu from \"@mui/joy/Menu\";\nimport MenuButton from \"@mui/joy/MenuButton\";\nimport MenuItem from \"@mui/joy/MenuItem\";\nimport Dropdown from \"@mui/joy/Dropdown\";\n// icons\nimport FilterAltIcon from \"@mui/icons-material/FilterAlt\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport ArrowDropDownIcon from \"@mui/icons-material/ArrowDropDown\";\nimport KeyboardArrowRightIcon from \"@mui/icons-material/KeyboardArrowRight\";\nimport KeyboardArrowLeftIcon from \"@mui/icons-material/KeyboardArrowLeft\";\nimport MoreHorizRoundedIcon from \"@mui/icons-material/MoreHorizRounded\";\nimport { downloadCSV } from \"../../lib/utils\";\nimport { useNavigate } from 'react-router-dom';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\ntype Patient = {\n  id: string;\n  name: string;\n  dob: string;\n  status: string;\n};\n\ntype OrderTableProps = {\n  patients: Patient[];\n};\n\nexport default function CasesTable({ patients }: OrderTableProps) {\n  const navigate = useNavigate();\n  // const [filteredPatients, setFilteredPatients] = useState<Patient[]>([]);\n  const [page, setPage] = useState(1);\n  const [patientsData, setPatientsData] = useState<Patient[]>([]);\n  const itemsPerPage = 10; // Adjust as needed\n\n  const navigateToCase = (id: string) => {\n    navigate(`/cases/details/${id}`);\n  }\n  const [pagePatients, setPagePatients] = useState<Patient[]>([]);\n\n  useEffect\n    (() => {\n      setPatientsData(patients);\n    }, [patients]);\n  useEffect(() => {\n\n\n    // Calculate the start and end indices based on the current page\n    const startIndex = (page - 1) * itemsPerPage;\n    const endIndex = page * itemsPerPage;\n\n    // Slice the patients array based on the indices\n    const slicedPatients = patientsData.slice(startIndex, endIndex);\n\n    // Update the filteredPatients state with the sliced patients\n    setPagePatients(slicedPatients);\n\n\n  }, [patientsData, page]);\n\n\n  const handleChangePage = (newPage: number) => {\n    setPage(newPage);\n  };\n\n\n  const handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.toLowerCase();\n    if (value.trim() === \"\") {\n      // If the search input is empty, show all patients\n      setPatientsData(patients);\n    } else {\n      // If there is a search input, filter patients based on the input\n      const filteredPatientsResult = patients.filter((patient) => {\n        return (\n          patient.name.toLowerCase().includes(value) ||\n          patient.dob.toLowerCase().includes(value) ||\n          patient.status.toLowerCase().includes(value)\n        );\n      });\n      setPatientsData(filteredPatientsResult);\n    }\n\n    // Reset the page to 1 when searching\n    setPage(1);\n  }\n\n\n  return (\n    <React.Fragment>\n\n      <Box\n        className=\"SearchAndFilters-tabletUp\"\n        sx={{\n          borderRadius: \"sm\",\n          py: 2,\n          display: {\n            xs: \"none\",\n            sm: \"flex\",\n          },\n          flexWrap: \"wrap\",\n          gap: 1.5,\n          \"& > *\": {\n            minWidth: {\n              xs: \"120px\",\n              md: \"160px\",\n            },\n          },\n        }}\n      >\n        <FormControl sx={{ flex: 1 }} size=\"sm\">\n          <FormLabel>Search for order</FormLabel>\n          <Input\n            size=\"sm\"\n            placeholder=\"Search\"\n            startDecorator={<SearchIcon />}\n            onChange={handleSearch}\n          />\n        </FormControl>\n\n      </Box>\n      <Sheet\n        className=\"OrderTableContainer\"\n        variant=\"outlined\"\n        sx={{\n          display: { xs: \"none\", sm: \"initial\" },\n          width: \"100%\",\n          borderRadius: \"sm\",\n          flexShrink: 1,\n          overflow: \"auto\",\n          minHeight: 0,\n        }}\n      >\n        <Table\n          aria-labelledby=\"tableTitle\"\n          stickyHeader\n          hoverRow\n          sx={{\n            \"--TableCell-headBackground\":\n              \"var(--joy-palette-background-level1)\",\n            \"--Table-headerUnderlineThickness\": \"1px\",\n            \"--TableRow-hoverBackground\":\n              \"var(--joy-palette-background-level1)\",\n            \"--TableCell-paddingY\": \"4px\",\n            \"--TableCell-paddingX\": \"8px\",\n          }}\n        >\n          <thead>\n            <tr>\n\n              <th style={{ width: 180, padding: \"12px 6px\" }}>\n                ID\n              </th>\n              <th style={{ width: 140, padding: \"12px 6px\" }}>Name</th>\n              <th style={{ width: 140, padding: \"12px 6px\" }}>Date of birth</th>\n              <th style={{ width: 140, padding: \"12px 6px\" }}>Status</th>\n              <th style={{ width: 140, padding: \"12px 6px\" }}>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {pagePatients && pagePatients.map((row) => (\n              <tr key={row.id}>\n\n                <td>\n                  <Typography level=\"body-xs\">{row.id}</Typography>\n                </td>\n\n                <td>\n                  <Typography level=\"body-xs\">{row.name}</Typography>\n                </td>\n                <td>\n                  <Typography level=\"body-xs\">{row.dob}</Typography>\n                </td>\n                <td>\n                  <Typography level=\"body-xs\">{row.status}</Typography>\n                </td>\n                <td>\n                  <Box sx={{ display: \"flex\", gap: 2, alignItems: \"center\" }}>\n                    <Link\n                      level=\"body-xs\"\n                      component=\"button\"\n                      onClick={() => navigateToCase(row.id)}\n                    >\n                      <IconButton title='Schedule' variant=\"soft\" color=\"primary\" size=\"sm\" >\n                        <VisibilityIcon />\n                      </IconButton >\n                    </Link>\n                    {/* <RowMenu row={row} navigate={navigateToCase}/> */}\n                  </Box>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </Sheet>\n      <Box\n        className=\"Pagination-laptopUp\"\n        sx={{\n          pt: 2,\n          gap: 1,\n          [`& .${iconButtonClasses.root}`]: { borderRadius: \"50%\" },\n          display: {\n            xs: \"none\",\n            md: \"flex\",\n          },\n        }}\n      >\n        <Button\n          size=\"sm\"\n          variant=\"outlined\"\n          color=\"neutral\"\n          startDecorator={<KeyboardArrowLeftIcon />}\n          disabled={page === 1}\n          onClick={() => handleChangePage(page - 1)}\n        >\n          Previous\n        </Button>\n        <Box sx={{ flex: 1 }} />\n        {Array.from({ length: Math.ceil(patientsData.length / itemsPerPage) }).map((_, index) => (\n          <IconButton\n            key={index + 1}  // Use index + 1 as the key\n            size=\"sm\"\n            variant={Number(index + 1) ? \"outlined\" : \"plain\"}  // Use index + 1 as the condition\n            color=\"neutral\"\n            onClick={() => handleChangePage(index + 1)}\n          >\n            {index + 1}\n          </IconButton>\n        ))}\n        <Box sx={{ flex: 1 }} />\n\n        <Button\n          size=\"sm\"\n          variant=\"outlined\"\n          color=\"neutral\"\n          endDecorator={<KeyboardArrowRightIcon />}\n          disabled={page === Math.ceil(patientsData.length / itemsPerPage)}\n          onClick={() => handleChangePage(page + 1)}\n        >\n          Next\n        </Button>\n      </Box>\n    </React.Fragment >\n  );\n}\n","export function downloadCSV(data: any[], filename: string) {\n  const csvRows = [];\n  const headers = Object.keys(data[0]);\n  csvRows.push(headers.join(\",\"));\n\n  for (const row of data) {\n    const values = headers.map((header) => {\n      const escaped = (\"\" + row[header]).replace(/\"/g, '\\\\\"');\n      return `\"${escaped}\"`;\n    });\n    csvRows.push(values.join(\",\"));\n  }\n\n  const blob = new Blob([csvRows.join(\"\\n\")], { type: \"text/csv\" });\n  const url = window.URL.createObjectURL(blob);\n  const a = document.createElement(\"a\");\n  a.setAttribute(\"hidden\", \"\");\n  a.setAttribute(\"href\", url);\n  a.setAttribute(\"download\", `${filename}.csv`);\n  document.body.appendChild(a);\n  a.click();\n  document.body.removeChild(a);\n}\n\n\n\n\nexport function formatDate(dateString: string) {\n  const date = new Date(dateString);\n  const now = new Date();\n\n  // Check if the date is today\n  if (date.toDateString() === now.toDateString()) {\n    const secondsAgo = Math.floor((now.getTime() - date.getTime()) / 1000);\n\n    if (secondsAgo < 60) {\n      return `${secondsAgo} seconds ago`;\n    }\n\n    const minutesAgo = Math.floor(secondsAgo / 60);\n    if (minutesAgo < 60) {\n      return `${minutesAgo} minutes ago`;\n    }\n\n    const hoursAgo = Math.floor(minutesAgo / 60);\n    return `${hoursAgo} hours ago`;\n  }\n\n  // If not today, use the previous formatting\n  const options: Intl.DateTimeFormatOptions = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric',\n  };\n\n  return date.toLocaleDateString(undefined, options);\n};\n\n\n\n// calculate age\nexport function calculateAge(birthday: string) {\n  var ageDifMs = Date.now() - new Date(birthday).getTime();\n  var ageDate = new Date(ageDifMs); // miliseconds from epoch\n  return Math.abs(ageDate.getUTCFullYear() - 1970);\n}","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport OrderTable from \"./CasesTable\";\nimport OrderList from \"../../components/OrderList\";\nimport { pb } from \"../../services/pocketbase\";\n\nimport {\n  Box,\n  Button,\n  Modal,\n  ModalClose,\n  ModalDialog,\n  Typography,\n} from \"@mui/joy\";\nimport DownloadRoundedIcon from \"@mui/icons-material/DownloadRounded\";\nimport { downloadCSV } from \"../../lib/utils\";\nimport NewPatient from \"./NewPatient\";\nimport { Link, Route, Routes } from \"react-router-dom\";\nimport { Patient } from \"../../lib/types\";\n\nexport default function Cases() {\n  const [patients, setPatients] = useState<Patient[]>([]);\n\n  // write a function to convert 2023-11-01 12:00:00.000Z to 2023-11-01\n  const convertDate = (date: string) => {\n    if (!date) return (\"\");\n    const dateArray = date.split(\" \");\n    return dateArray[0];\n  };\n\n  const getList = async () => {\n    const records = await pb.collection(\"cases\").getFullList({\n      sort: \"-created\", requestKey: \"null\",\n    });\n    // create an array of jsons of records using only id, name, dob, status\n    const patients = records.map((record) => {\n      return {\n        ...record,\n        id: record.id,\n        name: record.first_name + \" \" + record.last_name,\n        dob: convertDate(record.dob),\n        status: record.status,\n      };\n    });\n    // console.log(patients);\n\n    setPatients(patients);\n  };\n\n  useEffect(() => {\n    console.log(\"useEffect called\")\n    getList();\n  }, []);\n\n  const handleDownloadAll = () => {\n    downloadCSV(patients, \"all_patients\");\n  };\n  return (\n    <>\n      <Box\n        sx={{\n          display: \"flex\",\n          my: 1,\n          gap: 1,\n          flexDirection: { xs: \"column\", sm: \"row\" },\n          alignItems: { xs: \"start\", sm: \"center\" },\n          flexWrap: \"wrap\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Typography level=\"h2\">All Cases</Typography>\n\n      </Box>\n      <OrderTable patients={patients} />\n\n\n    </>\n  );\n}\n","import * as React from \"react\";\nimport { ColorPaletteProp } from \"@mui/joy/styles\";\nimport Box from \"@mui/joy/Box\";\nimport Avatar from \"@mui/joy/Avatar\";\nimport Chip from \"@mui/joy/Chip\";\nimport Link from \"@mui/joy/Link\";\nimport Divider from \"@mui/joy/Divider\";\nimport IconButton from \"@mui/joy/IconButton\";\nimport Typography from \"@mui/joy/Typography\";\nimport List from \"@mui/joy/List\";\nimport ListItem from \"@mui/joy/ListItem\";\nimport ListItemContent from \"@mui/joy/ListItemContent\";\nimport ListItemDecorator from \"@mui/joy/ListItemDecorator\";\nimport ListDivider from \"@mui/joy/ListDivider\";\nimport Menu from \"@mui/joy/Menu\";\nimport MenuButton from \"@mui/joy/MenuButton\";\nimport MenuItem from \"@mui/joy/MenuItem\";\nimport Dropdown from \"@mui/joy/Dropdown\";\n// icons\nimport MoreHorizRoundedIcon from \"@mui/icons-material/MoreHorizRounded\";\nimport CheckRoundedIcon from \"@mui/icons-material/CheckRounded\";\nimport BlockIcon from \"@mui/icons-material/Block\";\nimport AutorenewRoundedIcon from \"@mui/icons-material/AutorenewRounded\";\nimport KeyboardArrowRightIcon from \"@mui/icons-material/KeyboardArrowRight\";\nimport KeyboardArrowLeftIcon from \"@mui/icons-material/KeyboardArrowLeft\";\n\nconst listItems = [\n  {\n    id: \"INV-1234\",\n    date: \"Feb 3, 2023\",\n    status: \"Refunded\",\n    customer: {\n      initial: \"O\",\n      name: \"Olivia Ryhe\",\n      email: \"olivia@email.com\",\n    },\n  },\n  {\n    id: \"INV-1233\",\n    date: \"Feb 3, 2023\",\n    status: \"Paid\",\n    customer: {\n      initial: \"S\",\n      name: \"Steve Hampton\",\n      email: \"steve.hamp@email.com\",\n    },\n  },\n  {\n    id: \"INV-1232\",\n    date: \"Feb 3, 2023\",\n    status: \"Refunded\",\n    customer: {\n      initial: \"C\",\n      name: \"Ciaran Murray\",\n      email: \"ciaran.murray@email.com\",\n    },\n  },\n  {\n    id: \"INV-1231\",\n    date: \"Feb 3, 2023\",\n    status: \"Refunded\",\n    customer: {\n      initial: \"M\",\n      name: \"Maria Macdonald\",\n      email: \"maria.mc@email.com\",\n    },\n  },\n  {\n    id: \"INV-1230\",\n    date: \"Feb 3, 2023\",\n    status: \"Cancelled\",\n    customer: {\n      initial: \"C\",\n      name: \"Charles Fulton\",\n      email: \"fulton@email.com\",\n    },\n  },\n  {\n    id: \"INV-1229\",\n    date: \"Feb 3, 2023\",\n    status: \"Cancelled\",\n    customer: {\n      initial: \"J\",\n      name: \"Jay Hooper\",\n      email: \"hooper@email.com\",\n    },\n  },\n];\n\nfunction RowMenu() {\n  return (\n    <Dropdown>\n      <MenuButton\n        slots={{ root: IconButton }}\n        slotProps={{ root: { variant: \"plain\", color: \"neutral\", size: \"sm\" } }}\n      >\n        <MoreHorizRoundedIcon />\n      </MenuButton>\n      <Menu size=\"sm\" sx={{ minWidth: 140 }}>\n        <MenuItem>Edit</MenuItem>\n        <MenuItem>Rename</MenuItem>\n        <MenuItem>Move</MenuItem>\n        <Divider />\n        <MenuItem color=\"danger\">Delete</MenuItem>\n      </Menu>\n    </Dropdown>\n  );\n}\n\nexport default function OrderList() {\n  return (\n    <Box sx={{ display: { xs: \"block\", sm: \"none\" } }}>\n      {listItems.map((listItem) => (\n        <List\n          key={listItem.id}\n          size=\"sm\"\n          sx={{\n            \"--ListItem-paddingX\": 0,\n          }}\n        >\n          <ListItem\n            sx={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"start\",\n            }}\n          >\n            <ListItemContent\n              sx={{ display: \"flex\", gap: 2, alignItems: \"start\" }}\n            >\n              <ListItemDecorator>\n                <Avatar size=\"sm\">{listItem.customer.initial}</Avatar>\n              </ListItemDecorator>\n              <div>\n                <Typography fontWeight={600} gutterBottom>\n                  {listItem.customer.name}\n                </Typography>\n                <Typography level=\"body-xs\" gutterBottom>\n                  {listItem.customer.email}\n                </Typography>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"space-between\",\n                    gap: 0.5,\n                    mb: 1,\n                  }}\n                >\n                  <Typography level=\"body-xs\">{listItem.date}</Typography>\n                  <Typography level=\"body-xs\">&bull;</Typography>\n                  <Typography level=\"body-xs\">{listItem.id}</Typography>\n                </Box>\n                <Box\n                  sx={{ display: \"flex\", alignItems: \"center\", gap: 1, mb: 1 }}\n                >\n                  <Link level=\"body-sm\" component=\"button\">\n                    Download\n                  </Link>\n                  <RowMenu />\n                </Box>\n              </div>\n            </ListItemContent>\n            <Chip\n              variant=\"soft\"\n              size=\"sm\"\n              startDecorator={\n                {\n                  Paid: <CheckRoundedIcon />,\n                  Refunded: <AutorenewRoundedIcon />,\n                  Cancelled: <BlockIcon />,\n                }[listItem.status]\n              }\n              color={\n                {\n                  Paid: \"success\",\n                  Refunded: \"neutral\",\n                  Cancelled: \"danger\",\n                }[listItem.status] as ColorPaletteProp\n              }\n            >\n              {listItem.status}\n            </Chip>\n          </ListItem>\n          <ListDivider />\n        </List>\n      ))}\n      <Box\n        className=\"Pagination-mobile\"\n        sx={{\n          display: { xs: \"flex\", md: \"none\" },\n          alignItems: \"center\",\n          py: 2,\n        }}\n      >\n        <IconButton\n          aria-label=\"previous page\"\n          variant=\"outlined\"\n          color=\"neutral\"\n          size=\"sm\"\n        >\n          <KeyboardArrowLeftIcon />\n        </IconButton>\n        <Typography level=\"body-sm\" mx=\"auto\">\n          Page 1 of 10\n        </Typography>\n        <IconButton\n          aria-label=\"next page\"\n          variant=\"outlined\"\n          color=\"neutral\"\n          size=\"sm\"\n        >\n          <KeyboardArrowRightIcon />\n        </IconButton>\n      </Box>\n    </Box>\n  );\n}\n","import { Box, Card, Chip, List, ListItem, Stack, Typography } from '@mui/joy';\nimport React, { useMemo } from 'react';\nimport { format, formatDuration, intervalToDuration } from 'date-fns'\nimport { Vaccines } from '@mui/icons-material';\nimport { ProceduresRecord, ScheduleItemsRecord } from '../../pocketbase-types';\nimport { Link } from 'react-router-dom';\n\ntype Props = {\n  item: any\n}\nconst ScheduledItem = ({ item = [] }: Props) => {\n\n  // x hour y mins using start and end and date-fns\n  const durationFormatted = useMemo(() => {\n    if (!item.start || !item.end) {\n      return ''\n    }\n    const duration = intervalToDuration({\n      start: new Date(item.start),\n      end: new Date(item.end),\n    })\n\n    return formatDuration(duration, { format: ['hours', 'minutes'] })\n\n\n  }, [item])\n\n  const caseDetails = item?.expand?.case;\n\n\n  return (<Link to={`/cases/${caseDetails?.id}`} style={{\n    textDecoration: 'none',\n    color: 'inherit'\n  }}>\n    <Card>\n\n\n      <Stack direction='row' gap={1} justifyContent=\"space-between\" >\n        <Box>\n          <Typography level='h4'>\n            {caseDetails?.first_name} {caseDetails?.last_name}\n          </Typography>\n\n          <Box sx={{ display: 'flex', gap: 1 }} >\n            <Typography level='body-sm'>\n              {caseDetails.email}\n            </Typography>\n            <Typography level='body-sm'>\n              {caseDetails.phone}\n            </Typography>\n          </Box>\n\n\n        </Box>\n        <Box sx={{ textAlign: 'right' }}>\n          <Typography level=\"body-sm\">\n            {format(new Date(item.start), 'h:mm a')} - {format(new Date(item.end), 'h:mm a')}\n          </Typography>\n\n          {/* duration */}\n          <Typography level=\"body-sm\">\n            {durationFormatted}\n          </Typography>\n\n        </Box>\n      </Stack>\n\n\n      {/* Procedure details with icons */}\n\n      <Box>\n        <Typography level=\"body-md\">\n          {item.procedures.length} procedures\n        </Typography>\n\n        <>\n          {item.procedures.map((procedure: ProceduresRecord) => (\n            <Typography level='body-sm'>{procedure.name} {procedure.laterality} {procedure.site} {procedure.cpt_code} </Typography>\n          ))}\n        </>\n      </Box>\n\n\n\n      <Stack direction='row' gap={1} justifyContent=\"space-between\" >\n        <Box>\n          <Typography level='body-sm' sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            gap: 1,\n          }}>\n            <Vaccines /> Anesthesia: {item.anesthesia_type} {item.anesthesia_position}\n          </Typography>\n\n        </Box>\n        <Box>\n          <Chip color=\"primary\">\n            {item.specialty}\n          </Chip>\n        </Box>\n      </Stack>\n\n\n\n    </Card></Link>\n  );\n};\n\nexport default ScheduledItem;\n","import React, { useState, useEffect, useMemo } from \"react\";\nimport axios from \"axios\";\nimport OrderTable from \"../cases/CasesTable\";\nimport OrderList from \"../../components/OrderList\";\nimport { Box, Button, Stack, Typography } from \"@mui/joy\";\nimport DownloadRoundedIcon from \"@mui/icons-material/DownloadRounded\";\nimport { downloadCSV } from \"../../lib/utils\";\nimport AssignedAppointmentsTable from \"./AssignedAppointmentsTable\";\nimport { Close, DisabledByDefault } from \"@mui/icons-material\";\nimport { ListResult, RecordModel } from \"pocketbase\";\nimport { endOfWeek, startOfWeek } from \"date-fns\";\nimport { pb } from \"../../services/pocketbase\";\nimport { ScheduleItemsResponse } from \"../../pocketbase-types\";\nimport ScheduledItem from \"./AssignedAppointmentsTable\";\n\nexport default function AssignedAppointments() {\n\n\n  const [result, setResult] = React.useState<ListResult<ScheduleItemsResponse>>()\n  const [range, setRange] = React.useState({\n    start: startOfWeek(new Date()).toISOString(),\n    end: endOfWeek(new Date()).toISOString(),\n  })\n\n\n  useEffect(() => {\n\n    // find schedule items for this user\n    pb.collection('schedule_items').getList(1, 50, {\n      filter: `user.id = \"${pb.authStore.model?.id}\" && type = \"surgery\"`,\n      expand: `case,procedures`\n    })\n      .then((items) => {\n        setResult(items)\n      })\n      .catch((error) => {\n        console.error(error)\n      })\n\n  }, [])\n\n\n  const scheduledItems = useMemo(() => {\n    if (!result) {\n      return []\n    }\n    return Array.from(result.items)\n\n  }, [result])\n\n  return (\n    <>\n      <Stack\n        sx={{\n\n\n          gap: 2,\n          maxWidth: 600,\n          // mx: 'auto',\n          alignItems: { xs: \"stretch\", sm: \"stretch\" },\n        }}\n      >\n        <Stack direction='row' gap={1} justifyContent=\"space-between\" >\n          <Typography level=\"h2\">Assigned To You</Typography>\n\n        </Stack>\n\n        {\n          scheduledItems.map((item) => (\n            <ScheduledItem item={item} />\n          ))\n        }\n        <OrderList />\n      </Stack >\n    </>\n  );\n}\n","import * as React from \"react\";\nimport Autocomplete from \"@mui/joy/Autocomplete\";\nimport AutocompleteOption from \"@mui/joy/AutocompleteOption\";\nimport AspectRatio from \"@mui/joy/AspectRatio\";\nimport FormControl, { FormControlProps } from \"@mui/joy/FormControl\";\nimport FormLabel from \"@mui/joy/FormLabel\";\nimport ListItemDecorator from \"@mui/joy/ListItemDecorator\";\nimport Typography from \"@mui/joy/Typography\";\n\nexport default function CountrySelector({ sx, ...props }: FormControlProps) {\n  return (\n    <FormControl\n      {...props}\n      sx={[{ display: { sm: \"contents\" } }, ...(Array.isArray(sx) ? sx : [sx])]}\n    >\n      <FormLabel>Country</FormLabel>\n      <Autocomplete\n        size=\"sm\"\n        autoHighlight\n        isOptionEqualToValue={(option, value) => option.code === value.code}\n        defaultValue={{ code: \"TH\", label: \"Thailand\", phone: \"66\" }}\n        options={countries}\n        renderOption={(optionProps, option) => (\n          <AutocompleteOption {...optionProps}>\n            <ListItemDecorator>\n              <AspectRatio ratio=\"1\" sx={{ minWidth: 20, borderRadius: \"50%\" }}>\n                <img\n                  loading=\"lazy\"\n                  width=\"20\"\n                  srcSet={`https://flagcdn.com/w40/${option.code.toLowerCase()}.png 2x`}\n                  src={`https://flagcdn.com/w20/${option.code.toLowerCase()}.png`}\n                  alt=\"\"\n                />\n              </AspectRatio>\n            </ListItemDecorator>\n            {option.label}\n            <Typography component=\"span\" textColor=\"text.tertiary\" ml={0.5}>\n              (+{option.phone})\n            </Typography>\n          </AutocompleteOption>\n        )}\n        slotProps={{\n          input: {\n            autoComplete: \"new-password\", // disable autocomplete and autofill\n          },\n        }}\n      />\n    </FormControl>\n  );\n}\n\ninterface CountryType {\n  code: string;\n  label: string;\n  phone: string;\n  suggested?: boolean;\n}\n\n// From https://bitbucket.org/atlassian/atlaskit-mk-2/raw/4ad0e56649c3e6c973e226b7efaeb28cb240ccb0/packages/core/select/src/data/countries.js\nconst countries: readonly CountryType[] = [\n  { code: \"AD\", label: \"Andorra\", phone: \"376\" },\n  {\n    code: \"AE\",\n    label: \"United Arab Emirates\",\n    phone: \"971\",\n  },\n  { code: \"AF\", label: \"Afghanistan\", phone: \"93\" },\n  {\n    code: \"AG\",\n    label: \"Antigua and Barbuda\",\n    phone: \"1-268\",\n  },\n  { code: \"AI\", label: \"Anguilla\", phone: \"1-264\" },\n  { code: \"AL\", label: \"Albania\", phone: \"355\" },\n  { code: \"AM\", label: \"Armenia\", phone: \"374\" },\n  { code: \"AO\", label: \"Angola\", phone: \"244\" },\n  { code: \"AQ\", label: \"Antarctica\", phone: \"672\" },\n  { code: \"AR\", label: \"Argentina\", phone: \"54\" },\n  { code: \"AS\", label: \"American Samoa\", phone: \"1-684\" },\n  { code: \"AT\", label: \"Austria\", phone: \"43\" },\n  {\n    code: \"AU\",\n    label: \"Australia\",\n    phone: \"61\",\n    suggested: true,\n  },\n  { code: \"AW\", label: \"Aruba\", phone: \"297\" },\n  { code: \"AX\", label: \"Alland Islands\", phone: \"358\" },\n  { code: \"AZ\", label: \"Azerbaijan\", phone: \"994\" },\n  {\n    code: \"BA\",\n    label: \"Bosnia and Herzegovina\",\n    phone: \"387\",\n  },\n  { code: \"BB\", label: \"Barbados\", phone: \"1-246\" },\n  { code: \"BD\", label: \"Bangladesh\", phone: \"880\" },\n  { code: \"BE\", label: \"Belgium\", phone: \"32\" },\n  { code: \"BF\", label: \"Burkina Faso\", phone: \"226\" },\n  { code: \"BG\", label: \"Bulgaria\", phone: \"359\" },\n  { code: \"BH\", label: \"Bahrain\", phone: \"973\" },\n  { code: \"BI\", label: \"Burundi\", phone: \"257\" },\n  { code: \"BJ\", label: \"Benin\", phone: \"229\" },\n  { code: \"BL\", label: \"Saint Barthelemy\", phone: \"590\" },\n  { code: \"BM\", label: \"Bermuda\", phone: \"1-441\" },\n  { code: \"BN\", label: \"Brunei Darussalam\", phone: \"673\" },\n  { code: \"BO\", label: \"Bolivia\", phone: \"591\" },\n  { code: \"BR\", label: \"Brazil\", phone: \"55\" },\n  { code: \"BS\", label: \"Bahamas\", phone: \"1-242\" },\n  { code: \"BT\", label: \"Bhutan\", phone: \"975\" },\n  { code: \"BV\", label: \"Bouvet Island\", phone: \"47\" },\n  { code: \"BW\", label: \"Botswana\", phone: \"267\" },\n  { code: \"BY\", label: \"Belarus\", phone: \"375\" },\n  { code: \"BZ\", label: \"Belize\", phone: \"501\" },\n  {\n    code: \"CA\",\n    label: \"Canada\",\n    phone: \"1\",\n    suggested: true,\n  },\n  {\n    code: \"CC\",\n    label: \"Cocos (Keeling) Islands\",\n    phone: \"61\",\n  },\n  {\n    code: \"CD\",\n    label: \"Congo, Democratic Republic of the\",\n    phone: \"243\",\n  },\n  {\n    code: \"CF\",\n    label: \"Central African Republic\",\n    phone: \"236\",\n  },\n  {\n    code: \"CG\",\n    label: \"Congo, Republic of the\",\n    phone: \"242\",\n  },\n  { code: \"CH\", label: \"Switzerland\", phone: \"41\" },\n  { code: \"CI\", label: \"Cote d'Ivoire\", phone: \"225\" },\n  { code: \"CK\", label: \"Cook Islands\", phone: \"682\" },\n  { code: \"CL\", label: \"Chile\", phone: \"56\" },\n  { code: \"CM\", label: \"Cameroon\", phone: \"237\" },\n  { code: \"CN\", label: \"China\", phone: \"86\" },\n  { code: \"CO\", label: \"Colombia\", phone: \"57\" },\n  { code: \"CR\", label: \"Costa Rica\", phone: \"506\" },\n  { code: \"CU\", label: \"Cuba\", phone: \"53\" },\n  { code: \"CV\", label: \"Cape Verde\", phone: \"238\" },\n  { code: \"CW\", label: \"Curacao\", phone: \"599\" },\n  { code: \"CX\", label: \"Christmas Island\", phone: \"61\" },\n  { code: \"CY\", label: \"Cyprus\", phone: \"357\" },\n  { code: \"CZ\", label: \"Czech Republic\", phone: \"420\" },\n  {\n    code: \"DE\",\n    label: \"Germany\",\n    phone: \"49\",\n    suggested: true,\n  },\n  { code: \"DJ\", label: \"Djibouti\", phone: \"253\" },\n  { code: \"DK\", label: \"Denmark\", phone: \"45\" },\n  { code: \"DM\", label: \"Dominica\", phone: \"1-767\" },\n  {\n    code: \"DO\",\n    label: \"Dominican Republic\",\n    phone: \"1-809\",\n  },\n  { code: \"DZ\", label: \"Algeria\", phone: \"213\" },\n  { code: \"EC\", label: \"Ecuador\", phone: \"593\" },\n  { code: \"EE\", label: \"Estonia\", phone: \"372\" },\n  { code: \"EG\", label: \"Egypt\", phone: \"20\" },\n  { code: \"EH\", label: \"Western Sahara\", phone: \"212\" },\n  { code: \"ER\", label: \"Eritrea\", phone: \"291\" },\n  { code: \"ES\", label: \"Spain\", phone: \"34\" },\n  { code: \"ET\", label: \"Ethiopia\", phone: \"251\" },\n  { code: \"FI\", label: \"Finland\", phone: \"358\" },\n  { code: \"FJ\", label: \"Fiji\", phone: \"679\" },\n  {\n    code: \"FK\",\n    label: \"Falkland Islands (Malvinas)\",\n    phone: \"500\",\n  },\n  {\n    code: \"FM\",\n    label: \"Micronesia, Federated States of\",\n    phone: \"691\",\n  },\n  { code: \"FO\", label: \"Faroe Islands\", phone: \"298\" },\n  {\n    code: \"FR\",\n    label: \"France\",\n    phone: \"33\",\n    suggested: true,\n  },\n  { code: \"GA\", label: \"Gabon\", phone: \"241\" },\n  { code: \"GB\", label: \"United Kingdom\", phone: \"44\" },\n  { code: \"GD\", label: \"Grenada\", phone: \"1-473\" },\n  { code: \"GE\", label: \"Georgia\", phone: \"995\" },\n  { code: \"GF\", label: \"French Guiana\", phone: \"594\" },\n  { code: \"GG\", label: \"Guernsey\", phone: \"44\" },\n  { code: \"GH\", label: \"Ghana\", phone: \"233\" },\n  { code: \"GI\", label: \"Gibraltar\", phone: \"350\" },\n  { code: \"GL\", label: \"Greenland\", phone: \"299\" },\n  { code: \"GM\", label: \"Gambia\", phone: \"220\" },\n  { code: \"GN\", label: \"Guinea\", phone: \"224\" },\n  { code: \"GP\", label: \"Guadeloupe\", phone: \"590\" },\n  { code: \"GQ\", label: \"Equatorial Guinea\", phone: \"240\" },\n  { code: \"GR\", label: \"Greece\", phone: \"30\" },\n  {\n    code: \"GS\",\n    label: \"South Georgia and the South Sandwich Islands\",\n    phone: \"500\",\n  },\n  { code: \"GT\", label: \"Guatemala\", phone: \"502\" },\n  { code: \"GU\", label: \"Guam\", phone: \"1-671\" },\n  { code: \"GW\", label: \"Guinea-Bissau\", phone: \"245\" },\n  { code: \"GY\", label: \"Guyana\", phone: \"592\" },\n  { code: \"HK\", label: \"Hong Kong\", phone: \"852\" },\n  {\n    code: \"HM\",\n    label: \"Heard Island and McDonald Islands\",\n    phone: \"672\",\n  },\n  { code: \"HN\", label: \"Honduras\", phone: \"504\" },\n  { code: \"HR\", label: \"Croatia\", phone: \"385\" },\n  { code: \"HT\", label: \"Haiti\", phone: \"509\" },\n  { code: \"HU\", label: \"Hungary\", phone: \"36\" },\n  { code: \"ID\", label: \"Indonesia\", phone: \"62\" },\n  { code: \"IE\", label: \"Ireland\", phone: \"353\" },\n  { code: \"IL\", label: \"Israel\", phone: \"972\" },\n  { code: \"IM\", label: \"Isle of Man\", phone: \"44\" },\n  { code: \"IN\", label: \"India\", phone: \"91\" },\n  {\n    code: \"IO\",\n    label: \"British Indian Ocean Territory\",\n    phone: \"246\",\n  },\n  { code: \"IQ\", label: \"Iraq\", phone: \"964\" },\n  {\n    code: \"IR\",\n    label: \"Iran, Islamic Republic of\",\n    phone: \"98\",\n  },\n  { code: \"IS\", label: \"Iceland\", phone: \"354\" },\n  { code: \"IT\", label: \"Italy\", phone: \"39\" },\n  { code: \"JE\", label: \"Jersey\", phone: \"44\" },\n  { code: \"JM\", label: \"Jamaica\", phone: \"1-876\" },\n  { code: \"JO\", label: \"Jordan\", phone: \"962\" },\n  {\n    code: \"JP\",\n    label: \"Japan\",\n    phone: \"81\",\n    suggested: true,\n  },\n  { code: \"KE\", label: \"Kenya\", phone: \"254\" },\n  { code: \"KG\", label: \"Kyrgyzstan\", phone: \"996\" },\n  { code: \"KH\", label: \"Cambodia\", phone: \"855\" },\n  { code: \"KI\", label: \"Kiribati\", phone: \"686\" },\n  { code: \"KM\", label: \"Comoros\", phone: \"269\" },\n  {\n    code: \"KN\",\n    label: \"Saint Kitts and Nevis\",\n    phone: \"1-869\",\n  },\n  {\n    code: \"KP\",\n    label: \"Korea, Democratic People's Republic of\",\n    phone: \"850\",\n  },\n  { code: \"KR\", label: \"Korea, Republic of\", phone: \"82\" },\n  { code: \"KW\", label: \"Kuwait\", phone: \"965\" },\n  { code: \"KY\", label: \"Cayman Islands\", phone: \"1-345\" },\n  { code: \"KZ\", label: \"Kazakhstan\", phone: \"7\" },\n  {\n    code: \"LA\",\n    label: \"Lao People's Democratic Republic\",\n    phone: \"856\",\n  },\n  { code: \"LB\", label: \"Lebanon\", phone: \"961\" },\n  { code: \"LC\", label: \"Saint Lucia\", phone: \"1-758\" },\n  { code: \"LI\", label: \"Liechtenstein\", phone: \"423\" },\n  { code: \"LK\", label: \"Sri Lanka\", phone: \"94\" },\n  { code: \"LR\", label: \"Liberia\", phone: \"231\" },\n  { code: \"LS\", label: \"Lesotho\", phone: \"266\" },\n  { code: \"LT\", label: \"Lithuania\", phone: \"370\" },\n  { code: \"LU\", label: \"Luxembourg\", phone: \"352\" },\n  { code: \"LV\", label: \"Latvia\", phone: \"371\" },\n  { code: \"LY\", label: \"Libya\", phone: \"218\" },\n  { code: \"MA\", label: \"Morocco\", phone: \"212\" },\n  { code: \"MC\", label: \"Monaco\", phone: \"377\" },\n  {\n    code: \"MD\",\n    label: \"Moldova, Republic of\",\n    phone: \"373\",\n  },\n  { code: \"ME\", label: \"Montenegro\", phone: \"382\" },\n  {\n    code: \"MF\",\n    label: \"Saint Martin (French part)\",\n    phone: \"590\",\n  },\n  { code: \"MG\", label: \"Madagascar\", phone: \"261\" },\n  { code: \"MH\", label: \"Marshall Islands\", phone: \"692\" },\n  {\n    code: \"MK\",\n    label: \"Macedonia, the Former Yugoslav Republic of\",\n    phone: \"389\",\n  },\n  { code: \"ML\", label: \"Mali\", phone: \"223\" },\n  { code: \"MM\", label: \"Myanmar\", phone: \"95\" },\n  { code: \"MN\", label: \"Mongolia\", phone: \"976\" },\n  { code: \"MO\", label: \"Macao\", phone: \"853\" },\n  {\n    code: \"MP\",\n    label: \"Northern Mariana Islands\",\n    phone: \"1-670\",\n  },\n  { code: \"MQ\", label: \"Martinique\", phone: \"596\" },\n  { code: \"MR\", label: \"Mauritania\", phone: \"222\" },\n  { code: \"MS\", label: \"Montserrat\", phone: \"1-664\" },\n  { code: \"MT\", label: \"Malta\", phone: \"356\" },\n  { code: \"MU\", label: \"Mauritius\", phone: \"230\" },\n  { code: \"MV\", label: \"Maldives\", phone: \"960\" },\n  { code: \"MW\", label: \"Malawi\", phone: \"265\" },\n  { code: \"MX\", label: \"Mexico\", phone: \"52\" },\n  { code: \"MY\", label: \"Malaysia\", phone: \"60\" },\n  { code: \"MZ\", label: \"Mozambique\", phone: \"258\" },\n  { code: \"NA\", label: \"Namibia\", phone: \"264\" },\n  { code: \"NC\", label: \"New Caledonia\", phone: \"687\" },\n  { code: \"NE\", label: \"Niger\", phone: \"227\" },\n  { code: \"NF\", label: \"Norfolk Island\", phone: \"672\" },\n  { code: \"NG\", label: \"Nigeria\", phone: \"234\" },\n  { code: \"NI\", label: \"Nicaragua\", phone: \"505\" },\n  { code: \"NL\", label: \"Netherlands\", phone: \"31\" },\n  { code: \"NO\", label: \"Norway\", phone: \"47\" },\n  { code: \"NP\", label: \"Nepal\", phone: \"977\" },\n  { code: \"NR\", label: \"Nauru\", phone: \"674\" },\n  { code: \"NU\", label: \"Niue\", phone: \"683\" },\n  { code: \"NZ\", label: \"New Zealand\", phone: \"64\" },\n  { code: \"OM\", label: \"Oman\", phone: \"968\" },\n  { code: \"PA\", label: \"Panama\", phone: \"507\" },\n  { code: \"PE\", label: \"Peru\", phone: \"51\" },\n  { code: \"PF\", label: \"French Polynesia\", phone: \"689\" },\n  { code: \"PG\", label: \"Papua New Guinea\", phone: \"675\" },\n  { code: \"PH\", label: \"Philippines\", phone: \"63\" },\n  { code: \"PK\", label: \"Pakistan\", phone: \"92\" },\n  { code: \"PL\", label: \"Poland\", phone: \"48\" },\n  {\n    code: \"PM\",\n    label: \"Saint Pierre and Miquelon\",\n    phone: \"508\",\n  },\n  { code: \"PN\", label: \"Pitcairn\", phone: \"870\" },\n  { code: \"PR\", label: \"Puerto Rico\", phone: \"1\" },\n  {\n    code: \"PS\",\n    label: \"Palestine, State of\",\n    phone: \"970\",\n  },\n  { code: \"PT\", label: \"Portugal\", phone: \"351\" },\n  { code: \"PW\", label: \"Palau\", phone: \"680\" },\n  { code: \"PY\", label: \"Paraguay\", phone: \"595\" },\n  { code: \"QA\", label: \"Qatar\", phone: \"974\" },\n  { code: \"RE\", label: \"Reunion\", phone: \"262\" },\n  { code: \"RO\", label: \"Romania\", phone: \"40\" },\n  { code: \"RS\", label: \"Serbia\", phone: \"381\" },\n  { code: \"RU\", label: \"Russian Federation\", phone: \"7\" },\n  { code: \"RW\", label: \"Rwanda\", phone: \"250\" },\n  { code: \"SA\", label: \"Saudi Arabia\", phone: \"966\" },\n  { code: \"SB\", label: \"Solomon Islands\", phone: \"677\" },\n  { code: \"SC\", label: \"Seychelles\", phone: \"248\" },\n  { code: \"SD\", label: \"Sudan\", phone: \"249\" },\n  { code: \"SE\", label: \"Sweden\", phone: \"46\" },\n  { code: \"SG\", label: \"Singapore\", phone: \"65\" },\n  { code: \"SH\", label: \"Saint Helena\", phone: \"290\" },\n  { code: \"SI\", label: \"Slovenia\", phone: \"386\" },\n  {\n    code: \"SJ\",\n    label: \"Svalbard and Jan Mayen\",\n    phone: \"47\",\n  },\n  { code: \"SK\", label: \"Slovakia\", phone: \"421\" },\n  { code: \"SL\", label: \"Sierra Leone\", phone: \"232\" },\n  { code: \"SM\", label: \"San Marino\", phone: \"378\" },\n  { code: \"SN\", label: \"Senegal\", phone: \"221\" },\n  { code: \"SO\", label: \"Somalia\", phone: \"252\" },\n  { code: \"SR\", label: \"Suriname\", phone: \"597\" },\n  { code: \"SS\", label: \"South Sudan\", phone: \"211\" },\n  {\n    code: \"ST\",\n    label: \"Sao Tome and Principe\",\n    phone: \"239\",\n  },\n  { code: \"SV\", label: \"El Salvador\", phone: \"503\" },\n  {\n    code: \"SX\",\n    label: \"Sint Maarten (Dutch part)\",\n    phone: \"1-721\",\n  },\n  {\n    code: \"SY\",\n    label: \"Syrian Arab Republic\",\n    phone: \"963\",\n  },\n  { code: \"SZ\", label: \"Swaziland\", phone: \"268\" },\n  {\n    code: \"TC\",\n    label: \"Turks and Caicos Islands\",\n    phone: \"1-649\",\n  },\n  { code: \"TD\", label: \"Chad\", phone: \"235\" },\n  {\n    code: \"TF\",\n    label: \"French Southern Territories\",\n    phone: \"262\",\n  },\n  { code: \"TG\", label: \"Togo\", phone: \"228\" },\n  { code: \"TH\", label: \"Thailand\", phone: \"66\" },\n  { code: \"TJ\", label: \"Tajikistan\", phone: \"992\" },\n  { code: \"TK\", label: \"Tokelau\", phone: \"690\" },\n  { code: \"TL\", label: \"Timor-Leste\", phone: \"670\" },\n  { code: \"TM\", label: \"Turkmenistan\", phone: \"993\" },\n  { code: \"TN\", label: \"Tunisia\", phone: \"216\" },\n  { code: \"TO\", label: \"Tonga\", phone: \"676\" },\n  { code: \"TR\", label: \"Turkey\", phone: \"90\" },\n  {\n    code: \"TT\",\n    label: \"Trinidad and Tobago\",\n    phone: \"1-868\",\n  },\n  { code: \"TV\", label: \"Tuvalu\", phone: \"688\" },\n  {\n    code: \"TW\",\n    label: \"Taiwan\",\n    phone: \"886\",\n  },\n  {\n    code: \"TZ\",\n    label: \"United Republic of Tanzania\",\n    phone: \"255\",\n  },\n  { code: \"UA\", label: \"Ukraine\", phone: \"380\" },\n  { code: \"UG\", label: \"Uganda\", phone: \"256\" },\n  {\n    code: \"US\",\n    label: \"United States\",\n    phone: \"1\",\n    suggested: true,\n  },\n  { code: \"UY\", label: \"Uruguay\", phone: \"598\" },\n  { code: \"UZ\", label: \"Uzbekistan\", phone: \"998\" },\n  {\n    code: \"VA\",\n    label: \"Holy See (Vatican City State)\",\n    phone: \"379\",\n  },\n  {\n    code: \"VC\",\n    label: \"Saint Vincent and the Grenadines\",\n    phone: \"1-784\",\n  },\n  { code: \"VE\", label: \"Venezuela\", phone: \"58\" },\n  {\n    code: \"VG\",\n    label: \"British Virgin Islands\",\n    phone: \"1-284\",\n  },\n  {\n    code: \"VI\",\n    label: \"US Virgin Islands\",\n    phone: \"1-340\",\n  },\n  { code: \"VN\", label: \"Vietnam\", phone: \"84\" },\n  { code: \"VU\", label: \"Vanuatu\", phone: \"678\" },\n  { code: \"WF\", label: \"Wallis and Futuna\", phone: \"681\" },\n  { code: \"WS\", label: \"Samoa\", phone: \"685\" },\n  { code: \"XK\", label: \"Kosovo\", phone: \"383\" },\n  { code: \"YE\", label: \"Yemen\", phone: \"967\" },\n  { code: \"YT\", label: \"Mayotte\", phone: \"262\" },\n  { code: \"ZA\", label: \"South Africa\", phone: \"27\" },\n  { code: \"ZM\", label: \"Zambia\", phone: \"260\" },\n  { code: \"ZW\", label: \"Zimbabwe\", phone: \"263\" },\n];\n","import * as React from \"react\";\nimport AspectRatio from \"@mui/joy/AspectRatio\";\nimport { useParams } from \"react-router-dom\";\nimport Box from \"@mui/joy/Box\";\nimport Button from \"@mui/joy/Button\";\nimport Divider from \"@mui/joy/Divider\";\nimport FormControl from \"@mui/joy/FormControl\";\nimport FormLabel from \"@mui/joy/FormLabel\";\nimport FormHelperText from \"@mui/joy/FormHelperText\";\nimport Input from \"@mui/joy/Input\";\nimport IconButton from \"@mui/joy/IconButton\";\nimport Textarea from \"@mui/joy/Textarea\";\nimport Stack from \"@mui/joy/Stack\";\nimport Select from \"@mui/joy/Select\";\n// import Select, { SelectChangeEvent } from \"@mui/material/Select\";\nimport Option from \"@mui/joy/Option\";\nimport Typography from \"@mui/joy/Typography\";\nimport Tabs from \"@mui/joy/Tabs\";\nimport TabList from \"@mui/joy/TabList\";\nimport Tab, { tabClasses } from \"@mui/joy/Tab\";\nimport Breadcrumbs from \"@mui/joy/Breadcrumbs\";\nimport Link from \"@mui/joy/Link\";\nimport Card from \"@mui/joy/Card\";\nimport CardActions from \"@mui/joy/CardActions\";\nimport CardOverflow from \"@mui/joy/CardOverflow\";\nimport HomeIcon from \"@mui/icons-material/Home\";\nimport HomeRoundedIcon from \"@mui/icons-material/HomeRounded\";\nimport ChevronRightRoundedIcon from \"@mui/icons-material/ChevronRightRounded\";\nimport EmailRoundedIcon from \"@mui/icons-material/EmailRounded\";\nimport AccessTimeFilledRoundedIcon from \"@mui/icons-material/AccessTimeFilledRounded\";\nimport VideocamRoundedIcon from \"@mui/icons-material/VideocamRounded\";\nimport InsertDriveFileRoundedIcon from \"@mui/icons-material/InsertDriveFileRounded\";\nimport EditRoundedIcon from \"@mui/icons-material/EditRounded\";\n\nimport DropZone from \"../../../components/DropZone\";\nimport FileUpload from \"../../../components/FileUpload\";\nimport CountrySelector from \"../../../components/CountrySelector\";\nimport EditorToolbar from \"../../../components/EditorToolbar\";\nimport LocalPhoneIcon from \"@mui/icons-material/LocalPhone\";\nimport Grid3x3Icon from \"@mui/icons-material/Grid3x3\";\nimport { pb } from \"../../../services/pocketbase\";\nimport Checkbox from \"@mui/joy/Checkbox\";\nimport BusinessIcon from \"@mui/icons-material/Business\";\nimport LocalHospitalIcon from \"@mui/icons-material/LocalHospital\";\nimport ArticleIcon from '@mui/icons-material/Article';\nimport DefaultPic from '../../../assets/default-pic.jpg'\nimport { useState } from \"react\";\n\ninterface CaseData {\n  first_name: string;\n  last_name: string;\n  // Add other properties as needed\n}\n\nexport default function Caseview() {\n  const params = useParams();\n  const caseId = params.id;\n  const [data, setData] = React.useState<any>({});\n  const [editMode, setEditMode] = React.useState(false);\n  const [Surgery, setSurgery] = useState(false);\n\n  React.useEffect(() => {\n    const fetchCaseData = async (caseId: any) => {\n      try {\n        const record = await pb.collection(\"cases\").getOne(caseId);\n        setData(record);\n      } catch (error) {\n        console.error(\"Error fetching case data:\", error);\n      }\n    };\n\n    fetchCaseData(caseId);\n  }, [caseId]);\n\n  const handleChange = (e: any) => {\n    const { name, value } = e.target;\n    setData((prevData: any) => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n\n  React.useEffect(() => {\n    console.log(data);\n  }, [data]);\n\n  const handleEditModeToggle = () => {\n    setEditMode((prevEditMode) => !prevEditMode);\n  };\n\n  const updateData = async (caseId: any) => {\n    try {\n      const record = await pb.collection(\"cases\").update(caseId, data);\n\n      console.log(\"Case updated successfully!\");\n    } catch (error) {\n      console.error(\"Error updating case:\", error);\n    }\n  };\n\n  const handleSubmit = async (e: any) => {\n    e.preventDefault();\n    console.log(data);\n    updateData(caseId);\n  };\n\n  return (\n    <Box\n      sx={{\n        flex: 1,\n        width: \"100%\",\n      }}\n    >\n      <Box\n        sx={{\n          position: \"sticky\",\n          top: {\n            sm: -100,\n            md: -110,\n          },\n          bgcolor: \"background.body\",\n          zIndex: 9995,\n        }}\n      >\n        <Box\n          sx={{\n            px: {\n              xs: 2,\n              md: 6,\n            },\n          }}\n        >\n          {/* <Breadcrumbs\n            size=\"sm\"\n            aria-label=\"breadcrumbs\"\n            separator={<ChevronRightRoundedIcon />}\n            sx={{ pl: 0 }}\n          >\n            <Link\n              underline=\"none\"\n              color=\"neutral\"\n              href=\"#some-link\"\n              aria-label=\"Home\"\n            >\n              <HomeRoundedIcon />\n            </Link>\n            <Typography color=\"primary\" fontWeight={500} fontSize={12}>\n              view/edit\n            </Typography>\n\n          </Breadcrumbs> */}\n          <Typography\n            level=\"h2\"\n            sx={{\n              mt: 1,\n              mb: 2,\n            }}\n          >\n            Case Details\n          </Typography>\n        </Box>\n      </Box>\n\n      <Stack\n        spacing={4}\n        sx={{\n          display: \"flex\",\n          maxWidth: \"800px\",\n          mx: \"auto\",\n          px: {\n            xs: 2,\n            md: 6,\n          },\n          py: {\n            xs: 2,\n            md: 3,\n          },\n        }}\n      >\n        <Card>\n          <Box sx={{ mb: 1, display: \"flex\", justifyContent: \"space-between\" }}>\n            <Box>\n              <Typography level=\"title-md\">Case Information</Typography>\n              <Typography level=\"body-sm\">\n                Enter details about the case in the fields below.\n              </Typography>\n            </Box>\n            <Button\n              size=\"sm\"\n              variant=\"outlined\"\n              color=\"primary\"\n              onClick={handleEditModeToggle}\n            >\n              {/* {editMode ? \"Switch to View Mode\" : \"Switch to Edit Mode\"} */}\n              {editMode ? <ArticleIcon /> : <EditRoundedIcon />}\n\n            </Button>\n          </Box>\n          <Divider />\n          <Stack\n            direction=\"row\"\n            spacing={3}\n            sx={{ display: { xs: \"none\", md: \"flex\" }, my: 1 }}\n          >\n            <Stack direction=\"column\" spacing={1}>\n              <AspectRatio\n                ratio=\"1\"\n                maxHeight={200}\n                sx={{ flex: 1, minWidth: 120, borderRadius: \"100%\" }}\n              >\n                <img\n                  //if data.avatar is null, use default pic\n                  src={DefaultPic}\n                  // srcSet=\"https://images.unsplash.com/photo-1535713875002-d1d0cf377fde?auto=format&fit=crop&w=286&dpr=2 2x\"\n                  // loading=\"lazy\"\n                  alt=\"\"\n                />\n              </AspectRatio>\n              {/* {editMode ?\n                <IconButton\n                  aria-label=\"upload new picture\"\n                  size=\"sm\"\n                  variant=\"outlined\"\n                  color=\"neutral\"\n                  sx={{\n                    bgcolor: \"background.body\",\n                    position: \"absolute\",\n                    zIndex: 2,\n                    borderRadius: \"50%\",\n                    left: 100,\n                    top: 170,\n                    boxShadow: \"sm\",\n                  }}\n                >\n                  <EditRoundedIcon />\n                </IconButton>\n                : <></>} */}\n            </Stack>\n            <Stack spacing={2} sx={{ flexGrow: 1 }}>\n              <Stack spacing={1}>\n                <FormLabel>Name</FormLabel>\n                <FormControl\n                  sx={{\n                    display: {\n                      sm: \"flex-column\",\n                      md: \"flex-row\",\n                    },\n                    gap: 2,\n                  }}\n                >\n                  <Input\n                    size=\"sm\"\n                    name=\"first_name\"\n                    placeholder=\"First name\"\n                    value={data.first_name}\n                    disabled={!editMode}\n                    onChange={(e) => {\n                      handleChange(e);\n                    }}\n                  />\n                  <Input\n                    size=\"sm\"\n                    name=\"last_name\"\n                    disabled={!editMode}\n                    placeholder=\"Last name\"\n                    value={data.last_name}\n                    sx={{ flexGrow: 1 }}\n                    onChange={(e) => {\n                      handleChange(e);\n                    }}\n                  />\n                </FormControl>\n              </Stack>\n              <Stack direction=\"row\" spacing={2}>\n                <FormControl>\n                  <FormLabel>Phone</FormLabel>\n                  <Input\n                    name=\"phone_number\"\n                    disabled={!editMode}\n                    onChange={(e) => {\n                      handleChange(e);\n                    }}\n                    value={data.phone_number}\n                    startDecorator={<LocalPhoneIcon />}\n                    size=\"sm\"\n                    placeholder=\"+1234234234\"\n                  />\n                </FormControl>\n                <FormControl sx={{ flexGrow: 1 }}>\n                  <FormLabel>Email</FormLabel>\n                  <Input\n                    size=\"sm\"\n                    type=\"email\"\n                    disabled={!editMode}\n                    value={data.email}\n                    startDecorator={<EmailRoundedIcon />}\n                    name=\"email\"\n                    onChange={(e) => {\n                      handleChange(e);\n                    }}\n                    placeholder=\"johndoe@test.com\"\n                    sx={{ flexGrow: 1 }}\n                  />\n                </FormControl>\n              </Stack>\n              <Stack direction=\"row\" spacing={2}>\n                <FormControl>\n                  <FormLabel>SSN</FormLabel>\n                  <Input\n                    name=\"ssn\"\n                    startDecorator={<Grid3x3Icon />}\n                    value={data.ssn}\n                    disabled={!editMode}\n                    size=\"sm\"\n                    placeholder=\"1234234234\"\n                    onChange={(e) => {\n                      handleChange(e);\n                    }}\n                  />\n                </FormControl>\n                <FormControl sx={{ flexGrow: 1 }}>\n                  <FormLabel>Address</FormLabel>\n                  <Input\n                    size=\"sm\"\n                    type=\"email\"\n                    disabled={!editMode}\n                    startDecorator={<HomeIcon />}\n                    placeholder=\"St. Address, City, State, Zip Code\"\n                    sx={{ flexGrow: 1 }}\n                  />\n                </FormControl>\n              </Stack>\n              <Stack direction=\"row\" spacing={2}>\n                <FormControl>\n                  <FormLabel>Sex</FormLabel>\n                  <Select\n                    name=\"sex\"\n                    value={data.sex}\n                    disabled={!editMode}\n                    onChange={(e) => {\n                      handleChange(e);\n                    }}\n                    placeholder=\"Male/Female\"\n                    required\n                    size=\"sm\"\n                    sx={{ minWidth: 200 }}\n                  >\n                    <Option value=\"male\">Male</Option>\n                    <Option value=\"female\">Female</Option>\n                    <Option value=\"other\">Other</Option>\n                  </Select>\n                </FormControl>\n                <FormControl sx={{ flexGrow: 1 }}>\n                  <FormLabel>Facility</FormLabel>\n                  <Input\n                    size=\"sm\"\n                    type=\"email\"\n                    disabled={!editMode}\n                    startDecorator={<BusinessIcon />}\n                    placeholder=\"St. Address, City, State, Zip Code\"\n                  />\n                </FormControl>\n              </Stack>\n              <Stack direction=\"row\" spacing={5}>\n                <FormControl size={\"md\"}>\n                  <FormLabel>Date of Birth</FormLabel>\n                  <Input\n                    size=\"sm\"\n                    type=\"date\"\n                    // value is coming like this \"2023-11-07 00:00:00.000Z\" how to show it\n\n\n                    disabled={!editMode}\n                    value={data.dob instanceof Date ? data.dob.toISOString().split(\"T\")[0] : \"\"}\n                    name=\"dob\"\n                    onChange={(e) => {\n                      handleChange(e);\n                    }}\n                    slotProps={{\n                      input: {\n                        max: new Date().toISOString().split(\"T\")[0],\n                      },\n\n                    }}\n                  />\n                </FormControl>\n                {/* <FormControl>\n                  <FormLabel>Time</FormLabel>\n                  <Input disabled={!editMode} type=\"time\" size=\"sm\" />\n                </FormControl> */}\n              </Stack>\n              {/* <Stack direction=\"row\" spacing={5}>\n                <Checkbox\n                  label=\"Surgery required\"\n                  disabled={!editMode}\n                  variant=\"outlined\"\n                  size=\"sm\"\n                  onChange={(e) => {\n                    setSurgery(e.target.checked);\n                  }}\n                  sx={{ position: \"relative\", top: 30 }}\n                />\n                <FormControl>\n                  <FormLabel>Surgeon Assigned</FormLabel>\n                  <Input\n                    //   disabled={!Surgery}\n                    disabled={!editMode || !Surgery}\n                    size=\"sm\"\n                    type=\"email\"\n                    startDecorator={<LocalHospitalIcon />}\n                    placeholder=\"Dr.John Doe\"\n                  />\n                </FormControl>\n              </Stack> */}\n\n            </Stack>\n          </Stack>\n          <Stack\n            direction=\"column\"\n            spacing={2}\n            sx={{ display: { xs: \"flex\", md: \"none\" }, my: 1 }}\n          >\n            <Stack direction=\"row\" spacing={2}>\n              <Stack direction=\"column\" spacing={1}>\n                <AspectRatio\n                  ratio=\"1\"\n                  maxHeight={108}\n                  sx={{ flex: 1, minWidth: 108, borderRadius: \"100%\" }}\n                >\n                  <img\n                    src=\"https://images.unsplash.com/photo-1535713875002-d1d0cf377fde?auto=format&fit=crop&w=286\"\n                    srcSet=\"https://images.unsplash.com/photo-1535713875002-d1d0cf377fde?auto=format&fit=crop&w=286&dpr=2 2x\"\n                    loading=\"lazy\"\n                    alt=\"\"\n                  />\n                </AspectRatio>\n                <IconButton\n                  aria-label=\"upload new picture\"\n                  size=\"sm\"\n                  variant=\"outlined\"\n                  color=\"neutral\"\n                  sx={{\n                    bgcolor: \"background.body\",\n                    position: \"absolute\",\n                    zIndex: 2,\n                    borderRadius: \"50%\",\n                    left: 85,\n                    top: 180,\n                    boxShadow: \"sm\",\n                  }}\n                >\n                  <EditRoundedIcon />\n                </IconButton>\n              </Stack>\n              <Stack spacing={1} sx={{ flexGrow: 1 }}>\n                <FormLabel>Name</FormLabel>\n                <FormControl\n                  sx={{\n                    display: {\n                      sm: \"flex-column\",\n                      md: \"flex-row\",\n                    },\n                    gap: 2,\n                  }}\n                >\n                  <Input size=\"sm\" placeholder=\"First name\" />\n                  <Input size=\"sm\" placeholder=\"Last name\" />\n                </FormControl>\n              </Stack>\n            </Stack>\n            <FormControl>\n              <FormLabel>Role</FormLabel>\n              <Input size=\"sm\" defaultValue=\"UI Developer\" />\n            </FormControl>\n            <FormControl sx={{ flexGrow: 1 }}>\n              <FormLabel>Email</FormLabel>\n              <Input\n                size=\"sm\"\n                type=\"email\"\n                startDecorator={<EmailRoundedIcon />}\n                placeholder=\"email\"\n                defaultValue=\"siriwatk@test.com\"\n                sx={{ flexGrow: 1 }}\n              />\n            </FormControl>\n            <div>\n              <CountrySelector />\n            </div>\n            <div>\n              <FormControl sx={{ display: { sm: \"contents\" } }}>\n                <FormLabel>Timezone</FormLabel>\n                <Select\n                  size=\"sm\"\n                  startDecorator={<AccessTimeFilledRoundedIcon />}\n                  defaultValue=\"1\"\n                >\n                  <Option value=\"1\">\n                    Indochina Time (Bangkok){\" \"}\n                    <Typography textColor=\"text.tertiary\" ml={0.5}>\n                      — GMT+07:00\n                    </Typography>\n                  </Option>\n                  <Option value=\"2\">\n                    Indochina Time (Ho Chi Minh City){\" \"}\n                    <Typography textColor=\"text.tertiary\" ml={0.5}>\n                      — GMT+07:00\n                    </Typography>\n                  </Option>\n                </Select>\n              </FormControl>\n            </div>\n          </Stack>\n          <Box sx={{ mb: 1, mt: 3 }}>\n            <Typography level=\"title-md\">Procedure Description</Typography>\n            <Typography level=\"body-sm\">\n              Write description about the procedure in the field below.\n            </Typography>\n          </Box>\n          <Stack spacing={2} sx={{ my: 1 }}>\n            <Textarea\n              disabled={!editMode}\n              size=\"sm\"\n              minRows={4}\n              sx={{ mt: 1.5 }}\n              placeholder=\"Left 1st metatarsal- cuneiform fusion, modified McBride, Akin osteotomy, left 2nd digit hammer toe correction\"\n            />\n            <FormHelperText sx={{ mt: 0.75, fontSize: \"xs\" }}>\n              275 characters left\n            </FormHelperText>\n          </Stack>\n          <Box sx={{ mb: 1, mt: 3 }}>\n            <Typography level=\"title-md\">Insurance Details</Typography>\n            <Typography level=\"body-sm\">\n              Write description about the procedure in the field below.\n            </Typography>\n          </Box>\n          <Stack spacing={2} sx={{ my: 1 }}>\n            <Textarea\n              disabled={!editMode}\n              size=\"sm\"\n              minRows={4}\n              sx={{ mt: 1.5 }}\n              placeholder=\"Insurance company name, policy number, etc.\"\n            />\n            <FormHelperText sx={{ mt: 0.75, fontSize: \"xs\" }}>\n              275 characters left\n            </FormHelperText>\n          </Stack>\n          <CardOverflow sx={{ borderTop: \"1px solid\", borderColor: \"divider\" }}>\n            <CardActions sx={{ alignSelf: \"flex-end\", pt: 2 }}>\n              {editMode ? (\n                <>\n                  <Button size=\"sm\" variant=\"outlined\" color=\"neutral\">\n                    Cancel\n                  </Button>\n                  <Button\n                    size=\"sm\"\n                    variant=\"solid\"\n                    onClick={handleSubmit}\n                  >\n                    Save\n                  </Button>\n                </>\n              ) : (\n                <Box sx={{ display: 'none' }}>\n                  {/* Hidden when not in edit mode */}\n                  <Button size=\"sm\" variant=\"outlined\" color=\"neutral\">\n                    Cancel\n                  </Button>\n                  <Button\n                    size=\"sm\"\n                    variant=\"solid\"\n                  >\n                    Save\n                  </Button>\n                </Box>\n              )}\n            </CardActions>\n          </CardOverflow>\n        </Card>\n      </Stack>\n    </Box>\n  );\n}","import * as React from \"react\";\nimport AspectRatio from \"@mui/joy/AspectRatio\";\nimport Box from \"@mui/joy/Box\";\nimport Button from \"@mui/joy/Button\";\nimport Divider from \"@mui/joy/Divider\";\nimport FormControl from \"@mui/joy/FormControl\";\nimport FormLabel from \"@mui/joy/FormLabel\";\nimport FormHelperText from \"@mui/joy/FormHelperText\";\nimport Input from \"@mui/joy/Input\";\nimport IconButton from \"@mui/joy/IconButton\";\nimport Textarea from \"@mui/joy/Textarea\";\nimport Stack from \"@mui/joy/Stack\";\nimport Select from \"@mui/joy/Select\";\n// import Select, { SelectChangeEvent } from \"@mui/material/Select\";\nimport Option from \"@mui/joy/Option\";\nimport Typography from \"@mui/joy/Typography\";\nimport Tabs from \"@mui/joy/Tabs\";\nimport TabList from \"@mui/joy/TabList\";\nimport Tab, { tabClasses } from \"@mui/joy/Tab\";\nimport Breadcrumbs from \"@mui/joy/Breadcrumbs\";\nimport Link from \"@mui/joy/Link\";\nimport Card from \"@mui/joy/Card\";\nimport CardActions from \"@mui/joy/CardActions\";\nimport CardOverflow from \"@mui/joy/CardOverflow\";\nimport HomeIcon from \"@mui/icons-material/Home\";\nimport HomeRoundedIcon from \"@mui/icons-material/HomeRounded\";\nimport ChevronRightRoundedIcon from \"@mui/icons-material/ChevronRightRounded\";\nimport EmailRoundedIcon from \"@mui/icons-material/EmailRounded\";\nimport AccessTimeFilledRoundedIcon from \"@mui/icons-material/AccessTimeFilledRounded\";\nimport VideocamRoundedIcon from \"@mui/icons-material/VideocamRounded\";\nimport InsertDriveFileRoundedIcon from \"@mui/icons-material/InsertDriveFileRounded\";\nimport EditRoundedIcon from \"@mui/icons-material/EditRounded\";\n\nimport DropZone from \"../../components/DropZone\";\nimport FileUpload from \"../../components/FileUpload\";\nimport CountrySelector from \"../../components/CountrySelector\";\nimport EditorToolbar from \"../../components/EditorToolbar\";\nimport LocalPhoneIcon from \"@mui/icons-material/LocalPhone\";\nimport Grid3x3Icon from \"@mui/icons-material/Grid3x3\";\nimport { pb } from \"../../services/pocketbase\";\nimport Checkbox from \"@mui/joy/Checkbox\";\nimport BusinessIcon from \"@mui/icons-material/Business\";\nimport LocalHospitalIcon from \"@mui/icons-material/LocalHospital\";\n// fix this issue\nimport DefaultPic from '../../assets/default-pic.jpg';\n\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { useState } from \"react\";\nimport { ProceduresRecord } from \"../../pocketbase-types\";\nimport { useNavigate } from \"react-router-dom\";\n\n\n\nexport default function MyProfile() {\n  const navigate = useNavigate();\n  const [data, setdata] = useState<{\n    procedure_details: any[]; // TODO: Replace with ProceduresRecord[]\n    status: string;\n  }>({\n    procedure_details: [],\n    status: \"new\",\n  });\n  //Write on change function\n  const handleChange = (e: any) => {\n    console.log(e)\n    // if date of birth make it a date string for database\n    if (e.target.name === \"dob\") {\n      const date = new Date(e.target.value);\n\n      setdata({ ...data, [e.target.name]: date });\n      // console.log(date, d)\n    }\n    else\n\n      setdata({ ...data, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e: any) => {\n    e.preventDefault();\n    console.log(data);\n    try {\n      const record = await pb.collection(\"cases\").create(data);\n      // naviaget to cases\n      navigate(\"/cases\");\n\n    }\n    catch (err) {\n      console.log(err);\n\n    }\n  }\n\n  const [Surgery, setSurgery] = useState(false);\n\n  const [procedure, setProcedure] = useState(\"\");\n  const [cptCode, setCptCode] = useState(\"\");\n\n  const handleAddProcedure = () => {\n    // Only add if both procedure and cptCode are present\n    if (procedure && cptCode) {\n      const updatedProcedures = [...data.procedure_details, { procedure, cptCode }];\n      setdata({ ...data, procedure_details: updatedProcedures });\n      setProcedure(\"\"); // Clear procedure input\n      setCptCode(\"\"); // Clear CPT code input\n    }\n  };\n\n  // Function to handle removing a procedure from the data\n  const handleRemoveProcedure = (index: any) => {\n    const updatedProcedures = [...data.procedure_details];\n    updatedProcedures.splice(index, 1);\n    setdata({ ...data, procedure_details: updatedProcedures });\n  };\n\n  return (\n    <Box\n      sx={{\n        flex: 1,\n        width: \"100%\",\n      }}\n    >\n      <Box\n        sx={{\n          position: \"sticky\",\n          top: {\n            sm: -100,\n            md: -110,\n          },\n          bgcolor: \"background.body\",\n          zIndex: 9995,\n        }}\n      >\n        <Box\n          sx={{\n            px: {\n              xs: 2,\n              md: 6,\n            },\n          }}\n        >\n          {/* <Breadcrumbs\n            size=\"sm\"\n            aria-label=\"breadcrumbs\"\n            separator={<ChevronRightRoundedIcon />}\n            sx={{ pl: 0 }}\n          >\n            <Link\n              underline=\"none\"\n              color=\"neutral\"\n              href=\"#some-link\"\n              aria-label=\"Home\"\n            >\n              <HomeRoundedIcon />\n            </Link>\n            <Typography color=\"primary\" fontWeight={500} fontSize={12}>\n              Add a case\n            </Typography>\n          </Breadcrumbs> */}\n          <Typography\n            level=\"h2\"\n            sx={{\n              mt: 1,\n              mb: 2,\n            }}\n          >\n            Add a new case\n          </Typography>\n        </Box>\n      </Box>\n\n      <Stack\n        spacing={4}\n        sx={{\n          display: \"flex\",\n          maxWidth: \"800px\",\n          mx: \"auto\",\n          px: {\n            xs: 2,\n            md: 6,\n          },\n          py: {\n            xs: 2,\n            md: 3,\n          },\n        }}\n      >\n        <Card>\n          <Box sx={{ mb: 1 }}>\n            <Typography level=\"title-md\">Case Information</Typography>\n            <Typography level=\"body-sm\">\n              Enter details about the case in the fields below.\n            </Typography>\n          </Box>\n          <Divider />\n          <Stack\n            direction=\"row\"\n            spacing={3}\n            sx={{ display: { xs: \"none\", md: \"flex\" }, my: 1 }}\n          >\n            <Stack direction=\"column\" spacing={1}>\n              <AspectRatio\n                ratio=\"1\"\n                maxHeight={200}\n                sx={{ flex: 1, minWidth: 120, borderRadius: \"100%\" }}\n              >\n                <img\n                  src={DefaultPic}\n                  // srcSet=\"https://images.unsplash.com/photo-1535713875002-d1d0cf377fde?auto=format&fit=crop&w=286&dpr=2 2x\"\n                  loading=\"lazy\"\n                  alt=\"\"\n                />\n              </AspectRatio>\n              {/* <IconButton\n                aria-label=\"upload new picture\"\n                size=\"sm\"\n                variant=\"outlined\"\n                color=\"neutral\"\n                sx={{\n                  bgcolor: \"background.body\",\n                  position: \"absolute\",\n                  zIndex: 2,\n                  borderRadius: \"50%\",\n                  left: 100,\n                  top: 170,\n                  boxShadow: \"sm\",\n                }}\n              >\n                <EditRoundedIcon />\n              </IconButton> */}\n            </Stack>\n            <Stack spacing={2} sx={{ flexGrow: 1 }}>\n              <Stack spacing={1}>\n                <FormLabel>Name</FormLabel>\n                <FormControl\n                  sx={{\n                    width: \"90%\",\n                    display: {\n                      sm: \"flex-column\",\n                      md: \"flex-row\",\n                    },\n                    gap: 2,\n                  }}\n                >\n                  <Input\n                    size=\"sm\"\n                    name=\"first_name\"\n                    placeholder=\"First name\"\n                    onChange={(e) => {\n                      handleChange(e);\n                    }}\n                  />\n                  <Input\n                    size=\"sm\"\n                    name=\"last_name\"\n                    placeholder=\"Last name\"\n                    sx={{ flexGrow: 1 }}\n                    onChange={(e) => {\n                      handleChange(e);\n                    }}\n                  />\n                </FormControl>\n              </Stack>\n              <Stack sx={{ width: \"90%\" }} direction=\"row\" spacing={2}>\n                <FormControl>\n                  <FormLabel>Phone</FormLabel>\n                  <Input\n                    name=\"phone_number\"\n                    onChange={(e) => {\n                      handleChange(e);\n                    }}\n                    startDecorator={<LocalPhoneIcon />}\n                    size=\"sm\"\n                    placeholder=\"+1234234234\"\n                  />\n                </FormControl>\n                <FormControl sx={{ flexGrow: 1 }}>\n                  <FormLabel>Email</FormLabel>\n                  <Input\n                    size=\"sm\"\n                    type=\"email\"\n                    startDecorator={<EmailRoundedIcon />}\n                    name=\"email\"\n                    onChange={(e) => {\n                      handleChange(e);\n                    }}\n                    placeholder=\"johndoe@test.com\"\n                    sx={{ flexGrow: 1 }}\n                  />\n                </FormControl>\n              </Stack>\n              <Stack sx={{ width: \"90%\" }} direction=\"row\" spacing={2}>\n                <FormControl>\n                  <FormLabel>SSN</FormLabel>\n                  <Input\n                    name=\"ssn\"\n                    startDecorator={<Grid3x3Icon />}\n                    size=\"sm\"\n                    placeholder=\"1234234234\"\n                    onChange={(e) => {\n                      handleChange(e);\n                    }}\n                  />\n                </FormControl>\n                <FormControl sx={{ flexGrow: 1 }}>\n                  <FormLabel>Address</FormLabel>\n                  <Input\n                    size=\"sm\"\n                    type=\"text\"\n                    startDecorator={<HomeIcon />}\n                    placeholder=\"St. Address, City, State, Zip Code\"\n                    sx={{ flexGrow: 1 }}\n                  />\n                </FormControl>\n              </Stack>\n              <Stack sx={{ width: \"95%\" }} direction=\"row\" spacing={2}>\n                <FormControl>\n                  <FormLabel>Sex</FormLabel>\n                  <Select\n                    name=\"sex\"\n                    onChange={(e) => {\n                      handleChange(e);\n                    }}\n                    placeholder=\"Male/Female\"\n                    required\n                    size=\"sm\"\n                    sx={{ minWidth: 200 }}\n                  >\n                    <Option value=\"male\">Male</Option>\n                    <Option value=\"female\">Female</Option>\n                    <Option value=\"other\">Other</Option>\n                  </Select>\n                </FormControl>\n                <FormControl sx={{ flexGrow: 1 }}>\n                  <FormLabel>Facility</FormLabel>\n                  <Input\n                    size=\"sm\"\n                    type=\"text\"\n                    startDecorator={<BusinessIcon />}\n                    placeholder=\"St. Address, City, State, Zip Code\"\n                  />\n                </FormControl>\n              </Stack>\n              <Stack direction=\"row\" spacing={5}>\n                <FormControl size={\"md\"}>\n                  <FormLabel>Date of Birth</FormLabel>\n                  <Input\n                    size=\"sm\"\n                    type=\"date\"\n                    name=\"dob\"\n                    onChange={(e) => {\n                      handleChange(e);\n                    }}\n                    slotProps={{\n                      input: {\n                        min: \"2018-06-07T00:00\",\n                        max: \"2018-06-14T00:00\",\n                      },\n                    }}\n                  />\n                </FormControl>\n              </Stack>\n              {/* <Stack direction=\"row\" spacing={5}>\n                <Checkbox\n                  label=\"Surgery required\"\n                  variant=\"outlined\"\n                  size=\"sm\"\n                  onChange={(e) => {\n                    setSurgery(e.target.checked);\n                  }}\n                  sx={{ position: \"relative\", top: 30 }}\n                />\n                <FormControl>\n                  <FormLabel>Surgeon Assigned</FormLabel>\n                  <Input\n                    disabled={!Surgery}\n                    size=\"sm\"\n                    type=\"text\"\n                    startDecorator={<LocalHospitalIcon />}\n                    placeholder=\"Dr.John Doe\"\n                  />\n                </FormControl>\n              </Stack>\n\n              <Stack direction=\"row\" spacing={4}>\n                <FormControl>\n                  <FormLabel>Procedure</FormLabel>\n                  <Input\n                    sx={{ width: \"12rem\" }}\n                    disabled={!Surgery}\n                    size=\"sm\"\n                    type=\"text\"\n                    value={procedure}\n                    onChange={(e) => setProcedure(e.target.value)}\n                    startDecorator={<LocalHospitalIcon />}\n                    placeholder=\"Skin Plasty\"\n                  />\n                </FormControl>\n                <FormControl>\n                  <FormLabel>CPT</FormLabel>\n                  <Input\n                    sx={{ width: \"10rem\" }}\n                    disabled={!Surgery}\n                    size=\"sm\"\n                    type=\"text\"\n                    value={cptCode}\n                    onChange={(e) => setCptCode(e.target.value)}\n                    startDecorator={<LocalHospitalIcon />}\n                    placeholder=\"12345\"\n                  />\n                </FormControl>\n                <Button\n                  sx={{\n                    height: \"2rem\",\n                    width: \"3.5rem\",\n                    position: \"relative\",\n                    top: \"1.6rem\",\n                  }}\n                  size=\"sm\"\n                  variant=\"solid\"\n                  onClick={handleAddProcedure}\n                >\n                  add\n                </Button>\n              </Stack>\n\n              \n              {data.procedure_details.map((item: any, index: number) => (\n                <Stack\n                  key={index}\n                  direction=\"row\"\n                  alignItems=\"center\"\n                  justifyContent=\"space-between\"\n                  sx={{\n                    border: \"1px solid\",\n                    borderColor: \"primary.main\",\n                    borderRadius: \"4px\",\n                    padding: \"8px\",\n                    marginTop: \"8px\",\n                  }}\n                >\n\n                  <Typography>{item.procedure} - {item.cptCode}</Typography>\n                  <IconButton\n                    size=\"sm\"\n                    onClick={() => handleRemoveProcedure(index)}\n                  >\n                    <CloseIcon />\n                  </IconButton>\n                </Stack>\n              ))\n              } */}\n\n            </Stack >\n          </Stack >\n          <Stack\n            direction=\"column\"\n            spacing={2}\n            sx={{ display: { xs: \"flex\", md: \"none\" }, my: 1 }}\n          >\n            <Stack direction=\"row\" spacing={2}>\n              <Stack direction=\"column\" spacing={1}>\n                <AspectRatio\n                  ratio=\"1\"\n                  maxHeight={108}\n                  sx={{ flex: 1, minWidth: 108, borderRadius: \"100%\" }}\n                >\n                  <img\n                    src={DefaultPic}\n                    srcSet=\"https://images.unsplash.com/photo-1535713875002-d1d0cf377fde?auto=format&fit=crop&w=286&dpr=2 2x\"\n                    loading=\"lazy\"\n                    alt=\"\"\n                  />\n                </AspectRatio>\n                <IconButton\n                  aria-label=\"upload new picture\"\n                  size=\"sm\"\n                  variant=\"outlined\"\n                  color=\"neutral\"\n                  sx={{\n                    bgcolor: \"background.body\",\n                    position: \"absolute\",\n                    zIndex: 2,\n                    borderRadius: \"50%\",\n                    left: 85,\n                    top: 180,\n                    boxShadow: \"sm\",\n                  }}\n                >\n                  <EditRoundedIcon />\n                </IconButton>\n              </Stack>\n\n              <Stack spacing={2} sx={{ flexGrow: 1 }}>\n                <Stack spacing={1}>\n                  <FormLabel>Name</FormLabel>\n                  <FormControl\n                    sx={{\n                      width: \"90%\",\n                      display: {\n                        sm: \"flex-column\",\n                        md: \"flex-row\",\n                      },\n                      gap: 2,\n                    }}\n                  >\n                    <Input\n                      size=\"sm\"\n                      name=\"first_name\"\n                      placeholder=\"First name\"\n                      onChange={(e) => {\n                        handleChange(e);\n                      }}\n                    />\n                    <Input\n                      size=\"sm\"\n                      name=\"last_name\"\n                      placeholder=\"Last name\"\n                      sx={{ flexGrow: 1 }}\n                      onChange={(e) => {\n                        handleChange(e);\n                      }}\n                    />\n                  </FormControl>\n                </Stack>\n                <Stack sx={{ width: \"90%\" }} direction=\"row\" spacing={2}>\n                  <FormControl>\n                    <FormLabel>Phone</FormLabel>\n                    <Input\n                      name=\"phone_number\"\n                      onChange={(e) => {\n                        handleChange(e);\n                      }}\n                      startDecorator={<LocalPhoneIcon />}\n                      size=\"sm\"\n                      placeholder=\"+1234234234\"\n                    />\n                  </FormControl>\n                  <FormControl sx={{ flexGrow: 1 }}>\n                    <FormLabel>Email</FormLabel>\n                    <Input\n                      size=\"sm\"\n                      type=\"email\"\n                      startDecorator={<EmailRoundedIcon />}\n                      name=\"email\"\n                      onChange={(e) => {\n                        handleChange(e);\n                      }}\n                      placeholder=\"johndoe@test.com\"\n                      sx={{ flexGrow: 1 }}\n                    />\n                  </FormControl>\n                </Stack>\n                <Stack sx={{ width: \"90%\" }} direction=\"row\" spacing={2}>\n                  <FormControl>\n                    <FormLabel>SSN</FormLabel>\n                    <Input\n                      name=\"ssn\"\n                      startDecorator={<Grid3x3Icon />}\n                      size=\"sm\"\n                      placeholder=\"1234234234\"\n                      onChange={(e) => {\n                        handleChange(e);\n                      }}\n                    />\n                  </FormControl>\n                  <FormControl sx={{ flexGrow: 1 }}>\n                    <FormLabel>Address</FormLabel>\n                    <Input\n                      size=\"sm\"\n                      type=\"text\"\n                      startDecorator={<HomeIcon />}\n                      placeholder=\"St. Address, City, State, Zip Code\"\n                      sx={{ flexGrow: 1 }}\n                    />\n                  </FormControl>\n                </Stack>\n                <Stack sx={{ width: \"95%\" }} direction=\"row\" spacing={2}>\n                  <FormControl>\n                    <FormLabel>Sex</FormLabel>\n                    <Select\n                      name=\"sex\"\n                      onChange={(e) => {\n                        handleChange(e);\n                      }}\n                      placeholder=\"Male/Female\"\n                      required\n                      size=\"sm\"\n                      sx={{ minWidth: 200 }}\n                    >\n                      <Option value=\"male\">Male</Option>\n                      <Option value=\"female\">Female</Option>\n                      <Option value=\"other\">Other</Option>\n                    </Select>\n                  </FormControl>\n                  <FormControl sx={{ flexGrow: 1 }}>\n                    <FormLabel>Facility</FormLabel>\n                    <Input\n                      size=\"sm\"\n                      type=\"text\"\n                      startDecorator={<BusinessIcon />}\n                      placeholder=\"St. Address, City, State, Zip Code\"\n                    />\n                  </FormControl>\n                </Stack>\n                <Stack direction=\"row\" spacing={5}>\n                  <FormControl size={\"md\"}>\n                    <FormLabel>Date of Birth</FormLabel>\n                    <Input\n                      size=\"sm\"\n                      type=\"date\"\n                      slotProps={{\n                        input: {\n                          min: \"2018-06-07T00:00\",\n                          max: \"2018-06-14T00:00\",\n                        },\n                      }}\n                    />\n                  </FormControl>\n                </Stack>\n                <Stack direction=\"row\" spacing={5}>\n                  <Checkbox\n                    label=\"Surgery required\"\n                    variant=\"outlined\"\n                    size=\"sm\"\n                    onChange={(e) => {\n                      setSurgery(e.target.checked);\n                    }}\n                    sx={{ position: \"relative\", top: 30 }}\n                  />\n                  <FormControl>\n                    <FormLabel>Surgeon Assigned</FormLabel>\n                    <Input\n                      disabled={!Surgery}\n                      size=\"sm\"\n                      type=\"text\"\n                      startDecorator={<LocalHospitalIcon />}\n                      placeholder=\"Dr.John Doe\"\n                    />\n                  </FormControl>\n                </Stack>\n\n                <Stack direction=\"row\" spacing={4}>\n                  <FormControl>\n                    <FormLabel>Procedure</FormLabel>\n                    <Input\n                      sx={{ width: \"12rem\" }}\n                      disabled={!Surgery}\n                      size=\"sm\"\n                      type=\"text\"\n                      value={procedure}\n                      onChange={(e) => setProcedure(e.target.value)}\n                      startDecorator={<LocalHospitalIcon />}\n                      placeholder=\"Skin Plasty\"\n                    />\n                  </FormControl>\n                  <FormControl>\n                    <FormLabel>CPT</FormLabel>\n                    <Input\n                      sx={{ width: \"10rem\" }}\n                      disabled={!Surgery}\n                      size=\"sm\"\n                      type=\"text\"\n                      value={cptCode}\n                      onChange={(e) => setCptCode(e.target.value)}\n                      startDecorator={<LocalHospitalIcon />}\n                      placeholder=\"12345\"\n                    />\n                  </FormControl>\n                  <Button\n                    sx={{\n                      height: \"2rem\",\n                      width: \"3.5rem\",\n                      position: \"relative\",\n                      top: \"1.6rem\",\n                    }}\n                    size=\"sm\"\n                    variant=\"solid\"\n                    onClick={handleAddProcedure}\n                  >\n                    add\n                  </Button>\n                </Stack>\n\n                {/* Display added procedures with remove button */}\n                {data.procedure_details.map((item: any, index: number) => (\n                  <Stack\n                    key={index}\n                    direction=\"row\"\n                    alignItems=\"center\"\n                    justifyContent=\"space-between\"\n                    sx={{\n                      border: \"1px solid\",\n                      borderColor: \"primary.main\",\n                      borderRadius: \"4px\",\n                      padding: \"8px\",\n                      marginTop: \"8px\",\n                    }}\n                  >\n                    {/* <Typography>{item.procedure} - {item.cptCode}</Typography> */}\n                    <IconButton\n                      size=\"sm\"\n                      onClick={() => handleRemoveProcedure(index)}\n                    >\n                      <CloseIcon />\n                    </IconButton>\n                  </Stack >\n                ))\n                }\n                {/* <Box\n              sx={{display:\"flex\",justifyContent:\"end\"}}\n              >\n              <Button\n              sx={{mr:\"4rem\"}}\n                size=\"sm\"\n                variant=\"solid\"\n                \n              >\n                Save\n              </Button>\n              </Box> */}\n              </Stack >\n\n\n            </Stack >\n\n          </Stack >\n          <Box sx={{ mb: 1, mt: 3 }}>\n            <Typography level=\"title-md\">Initial Notes</Typography>\n            <Typography level=\"body-sm\">\n              Write description about the diagnosis in the field below.\n            </Typography>\n          </Box>\n          <Stack spacing={2} sx={{ my: 1 }}>\n            <Textarea\n              size=\"sm\"\n              minRows={4}\n              sx={{ mt: 1.5 }}\n\n              name=\"initial_note\"\n              onChange={(e) => {\n                handleChange(e);\n              }}\n              placeholder=\"Left 1st metatarsal- cuneiform fusion, modified McBride, Akin osteotomy, left 2nd digit hammer toe correction\"\n            />\n            <FormHelperText sx={{ mt: 0.75, fontSize: \"xs\" }}>\n              275 characters left\n            </FormHelperText>\n          </Stack>\n          <CardOverflow sx={{ borderTop: \"1px solid\", borderColor: \"divider\" }}>\n            <CardActions sx={{ alignSelf: \"flex-end\", pt: 2 }}>\n              {/* <Button size=\"sm\" variant=\"outlined\" color=\"neutral\">\n                Cancel\n              </Button> */}\n              <Button\n                size=\"sm\"\n                variant=\"solid\"\n                onClick={(e) => {\n                  handleSubmit(e);\n                }}\n              >\n                Save\n              </Button>\n            </CardActions>\n          </CardOverflow>\n        </Card >\n      </Stack >\n    </Box >\n  );\n}\n","import React from 'react';\nimport Stack from '@mui/joy/Stack';\nimport Typography from '@mui/joy/Typography';\nimport Card from '@mui/joy/Card';\nimport CardContent from '@mui/joy/CardContent';\nimport { CardHeader } from '@mui/material';\nimport { formatDate } from '../../../lib/utils';\n\n// import CardHeader from '@mui/joy/CardHeader';\n\ninterface SurgeryDetailsProps {\n    surgeryDetails: {\n        start: string;\n        end: string;\n\n        type: string;\n        duration: number;\n        anesthesia_type: string;\n        anesthesia_position: string;\n        specialty: string;\n        procedures: {\n            name: string;\n            site: string;\n            laterality: string;\n            cpt_code: string;\n        }[];\n    };\n}\n\nconst SurgeryDetails: React.FC<SurgeryDetailsProps> = ({ surgeryDetails }) => {\n    return (\n\n        // improve styling\n\n\n\n\n\n\n        <Stack spacing={2}>\n            <Typography>\n                <strong>Start Time:</strong> {formatDate(surgeryDetails.start)}\n            </Typography>\n            <Typography>\n                <strong>End Time:</strong> {formatDate(surgeryDetails.end)}\n            </Typography>\n            <Typography>\n                <strong>Type:</strong> {surgeryDetails.type}\n            </Typography>\n            <Typography>\n                <strong>Duration:</strong> {surgeryDetails.duration} minutes\n            </Typography>\n            <Typography>\n                <strong>Anesthesia Type:</strong> {surgeryDetails.anesthesia_type}\n            </Typography>\n            <Typography>\n                <strong>Anesthesia Position:</strong> {surgeryDetails.anesthesia_position}\n            </Typography>\n            <Typography>\n                <strong>Specialty:</strong> {surgeryDetails.specialty}\n            </Typography>\n            <Typography>\n                <strong>Procedures:</strong>\n            </Typography>\n            <Stack spacing={1} sx={{ marginLeft: '1.5em' }}>\n                {surgeryDetails.procedures.map((procedure, index) => (\n                    <Typography key={index}>\n                        {procedure.name} ({procedure.site}, {procedure.laterality}) - CPT Code: {procedure.cpt_code}\n                    </Typography>\n                ))}\n            </Stack>\n        </Stack>\n\n    );\n};\n\nexport default SurgeryDetails;\n","import React from 'react';\nimport AccordionGroup from '@mui/joy/AccordionGroup';\nimport Accordion from '@mui/joy/Accordion';\nimport AccordionDetails, {\n    accordionDetailsClasses,\n} from '@mui/joy/AccordionDetails';\nimport AccordionSummary, {\n    accordionSummaryClasses,\n} from '@mui/joy/AccordionSummary';\nimport FormatListBulletedIcon from '@mui/icons-material/FormatListBulleted';\nimport ListItemContent from '@mui/joy/ListItemContent';\n\nimport TapAndPlayRoundedIcon from '@mui/icons-material/TapAndPlayRounded';\nimport Avatar from '@mui/joy/Avatar';\nimport Typography from '@mui/joy/Typography';\n// Import your custom component\nimport SurgeryDetails from './SurgeryDetails';\nimport HistoryToggleOffIcon from '@mui/icons-material/HistoryToggleOff';\nimport { formatDate } from '../../../lib/utils';\nimport { ca } from 'date-fns/locale';\n\ninterface CaseActivityItem {\n    type: string;\n    note?: string;\n    attachments?: any;\n    user?: any;\n    meta?: any;\n    created: string; // Assuming 'created' is a string property\n}\n\ninterface ActivityLogProps {\n    case_activity_item: CaseActivityItem[];\n    // Add other properties as needed\n}\n// Utility function to format date in a human-readable form\n\n\nconst ActivityLogComponent: React.FC<ActivityLogProps> = ({ case_activity_item }) => {\n\n\n    //  METHOD TO GET FIRST LINE OF NOTE\n    const getFirstLine = (note: string) => {\n        // first 5 words\n        const firstLine = note.split(' ').slice(0, 5).join(' ');\n\n        return firstLine;\n\n    }\n\n    return (\n        <>\n\n            {case_activity_item ? case_activity_item.map((activityItem, index) => (\n                <Accordion key={index}>\n                    <AccordionSummary>\n                        <Avatar color=\"primary\">\n                            {activityItem.type === 'note' && <FormatListBulletedIcon />}\n                            {activityItem.type === 'attachment' && <TapAndPlayRoundedIcon />}\n                            {activityItem.type === 'surgery_scheduled_added' && <HistoryToggleOffIcon />}\n                        </Avatar>\n                        <ListItemContent>\n                            <Typography level=\"title-md\">{activityItem.type === 'surgery_scheduled_added' ? 'Surgery Details' : 'Note'}</Typography>\n                            <Typography level=\"body-sm\">\n                                {activityItem.type === 'surgery_scheduled_added'\n                                    && 'Activate or deactivate your connections'\n                                }\n\n                                {activityItem.type === 'note'\n                                    && getFirstLine(activityItem?.meta?.note) + '...'\n                                }\n                            </Typography>\n                        </ListItemContent>\n                        <Typography level=\"body-sm\">\n                            {`  ${formatDate(activityItem.created)}`} {/* Display formatted date */}\n                        </Typography>\n                    </AccordionSummary>\n                    <AccordionDetails>\n\n                        {activityItem.type === 'note' && (\n                            <Typography level=\"body-sm\">{activityItem?.meta?.note}</Typography>\n                        )}\n                        {/* {activityItem.type === 'surgery_scheduled_added' && (\n                            <SurgeryDetails surgeryDetails={activityItem.meta} />\n                        )} */}\n                        {/* Include other details based on the type */}\n                    </AccordionDetails>\n                </Accordion>\n            )) : <Typography level=\"body-sm\">No Activity</Typography>}\n        </>\n\n\n\n    );\n};\n\nexport default ActivityLogComponent;\n","import {\n    Box,\n    Button,\n    Divider,\n    FormControl,\n    FormLabel,\n    Select,\n    Option,\n    Modal,\n    ModalClose,\n    ModalDialog,\n    Stack,\n    Typography,\n    Textarea,\n} from \"@mui/joy\";\nimport UploadIcon from \"@mui/icons-material/Upload\";\n\nimport { pb } from \"../../../services/pocketbase\";\nimport * as React from \"react\";\nimport { useState } from \"react\";\n// ... (existing imports)\n\n// AddActivityProps type definition\ninterface AddActivityProps {\n    open: boolean;\n    setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n    caseId?: string; // Assuming caseId is a string, adjust accordingly\n    type: string; // Assuming type is a string, adjust accordingly\n}\n\nconst AddActivity: React.FC<AddActivityProps> = (\n    { open, setOpen, caseId, type }) => {\n    // const [open, setOpen] = useState(false);\n\n\n    // const handleChange = (\n    //     event: React.SyntheticEvent | null,\n    //     newValue: string | null,\n    // ) => {\n    //     setSelectedType(newValue!);\n    // };\n\n    const [data, setdata] = useState({\n        note: \"\",\n    });\n    const handleChange = (e: any) => {\n        setdata({ ...data, [e.target.name]: e.target.value });\n    };\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n    // const [note, setNote] = useState('');\n\n    const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        //  const formData = new FormData(event.currentTarget);\n\n        try {\n            if (caseId && type === 'note') {\n                const acitivity_item = await pb.collection('case_activity_item').create({\n                    type: 'note',\n                    meta: {\n                        note: data.note,\n                    },\n                    case: caseId,\n                });\n\n            }\n            handleClose();\n\n        } catch (error) {\n            handleClose()\n            console.error(error);\n        }\n    };\n\n    return (\n        <>\n\n            <Box sx={{ width: '100%', overflowY: 'auto' }}>\n                <Modal open={open} onClose={handleClose}>\n                    <ModalDialog\n                        sx={{\n                            width: \"50%\",\n                        }}\n                    >\n                        <ModalClose onClick={handleClose} />\n                        <Typography level=\"title-md\" sx={{ mt: 2 }}>\n                            Case Activity Item\n                        </Typography>\n                        <Divider />\n                        <form onSubmit={handleSubmit} encType=\"multipart/form-data\">\n                            <Box sx={{ p: 2 }}>\n                                <Stack spacing={2}>\n                                    {/* <FormControl>\n                                        <FormLabel>Type</FormLabel>\n                                      \n\n                                        <Select\n\n                                            name=\"type\"\n                                            placeholder=\"Choose Type\"\n                                            size=\"sm\"\n                                            value={selectedType}\n                                            onChange={handleChange}\n                                        >\n\n\n                                            <Option value=\"surgery_scheduled_added\">\n                                                Surgery scheduled added\n                                            </Option>\n                                            <Option value=\"surgery_scheduled_removed\">\n                                                Surgery scheduled removed\n                                            </Option>\n                                            <Option value=\"surgery_scheduled_updated\">\n                                                Surgery scheduled updated\n                                            </Option>\n                                            <Option value=\"note\">Note</Option>\n                                        </Select>\n                                    </FormControl> */}\n                                    {type && type === 'note' && (\n                                        <FormControl>\n                                            <FormLabel>Note</FormLabel>\n                                            <Textarea\n                                                name=\"note\"\n                                                placeholder=\"Enter Note\"\n                                                minRows='3'\n                                                value={data.note}\n\n                                                onChange={(e) => {\n                                                    handleChange(e);\n                                                }}\n                                            />\n                                        </FormControl>\n                                    )}\n                                    <FormControl>\n                                        {/* <FormLabel>Case</FormLabel>\n                                        <Select name=\"case\" placeholder=\"Choose Case\" size=\"sm\">\n                                            <Option value=\"xbmarqiuhged0wf\">Case 1</Option>\n                                            <Option value=\"sb6eyuw267tfjge\">Case 2</Option>\n                                            <Option value=\"mw9op44a1xn92dv\">Case 3</Option>\n                                        </Select> */}\n                                    </FormControl>\n                                    {/* <FormControl>\n                                        <FormLabel>Attachments</FormLabel>\n                                        <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 2 }}>\n                                            <Button\n                                                size=\"sm\"\n                                                variant=\"outlined\"\n                                                component=\"label\"\n                                                startDecorator={<UploadIcon />}\n                                            >\n                                                Upload\n                                                <input type=\"file\" name=\"attachments\" hidden />\n                                            </Button>\n                                        </Box>\n                                    </FormControl> */}\n                                    <Stack direction=\"row\" justifyContent=\"flex-end\" spacing={2}>\n                                        <Button color=\"primary\" size=\"sm\" type=\"submit\">\n                                            Submit\n                                        </Button>\n                                    </Stack>\n                                </Stack>\n                            </Box>\n                        </form>\n                    </ModalDialog>\n                </Modal >\n            </Box>\n        </>\n    );\n};\n\nexport default AddActivity;\n","import React, { useEffect, useState } from 'react'\nimport AspectRatio from '@mui/joy/AspectRatio';\nimport Box from '@mui/joy/Box';\nimport Button from '@mui/joy/Button';\nimport Divider from '@mui/joy/Divider';\nimport FormControl from '@mui/joy/FormControl';\nimport FormLabel from '@mui/joy/FormLabel';\nimport FormHelperText from '@mui/joy/FormHelperText';\nimport Input from '@mui/joy/Input';\nimport IconButton from '@mui/joy/IconButton';\nimport Textarea from '@mui/joy/Textarea';\nimport Stack from '@mui/joy/Stack';\nimport Select from '@mui/joy/Select';\nimport Option from '@mui/joy/Option';\nimport Typography from '@mui/joy/Typography';\nimport Tabs from '@mui/joy/Tabs';\nimport TabList from '@mui/joy/TabList';\nimport Tab, { tabClasses } from '@mui/joy/Tab';\nimport Breadcrumbs from '@mui/joy/Breadcrumbs';\nimport Link from '@mui/joy/Link';\nimport Card from '@mui/joy/Card';\nimport CardActions from '@mui/joy/CardActions';\nimport CardOverflow from '@mui/joy/CardOverflow';\n\nimport HomeRoundedIcon from '@mui/icons-material/HomeRounded';\nimport ChevronRightRoundedIcon from '@mui/icons-material/ChevronRightRounded';\nimport EmailRoundedIcon from '@mui/icons-material/EmailRounded';\nimport AccessTimeFilledRoundedIcon from '@mui/icons-material/AccessTimeFilledRounded';\nimport VideocamRoundedIcon from '@mui/icons-material/VideocamRounded';\nimport InsertDriveFileRoundedIcon from '@mui/icons-material/InsertDriveFileRounded';\nimport EditRoundedIcon from '@mui/icons-material/EditRounded';\n// import three icons for notes, attachments and schedule\n\nimport EditNoteIcon from '@mui/icons-material/EditNote';\nimport { Chip, TabPanel } from '@mui/joy';\nimport SurgeryDetails from './SurgeryDetails';\nimport DataSaverOnIcon from '@mui/icons-material/DataSaverOn';\n\nimport AccordionGroup from '@mui/joy/AccordionGroup';\nimport Accordion from '@mui/joy/Accordion';\nimport AccordionDetails, {\n    accordionDetailsClasses,\n} from '@mui/joy/AccordionDetails';\nimport AccordionSummary, {\n    accordionSummaryClasses,\n} from '@mui/joy/AccordionSummary';\nimport Switch from '@mui/joy/Switch';\n\nimport Avatar from '@mui/joy/Avatar';\n\nimport ListItemContent from '@mui/joy/ListItemContent';\n\nimport AirplanemodeActiveRoundedIcon from '@mui/icons-material/AirplanemodeActiveRounded';\nimport WifiRoundedIcon from '@mui/icons-material/WifiRounded';\nimport BluetoothRoundedIcon from '@mui/icons-material/BluetoothRounded';\nimport TapAndPlayRoundedIcon from '@mui/icons-material/TapAndPlayRounded';\nimport EditNotificationsRoundedIcon from '@mui/icons-material/EditNotificationsRounded';\nimport AdUnitsRoundedIcon from '@mui/icons-material/AdUnitsRounded';\nimport MessageRoundedIcon from '@mui/icons-material/MessageRounded';\nimport AccessibilityNewRoundedIcon from '@mui/icons-material/AccessibilityNewRounded';\nimport ZoomInRoundedIcon from '@mui/icons-material/ZoomInRounded';\nimport SpatialTrackingRoundedIcon from '@mui/icons-material/SpatialTrackingRounded';\nimport SettingsVoiceRoundedIcon from '@mui/icons-material/SettingsVoiceRounded';\nimport ActivityLogComponent from './ActivityLog';\nimport AddActivity from './AddActivty';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { pb } from '../../../services/pocketbase';\nimport { calculateAge } from '../../../lib/utils';\nimport { ca } from 'date-fns/locale';\nimport DefaultPic from '../../../assets/default-pic.jpg';\nimport ManageAccountsIcon from '@mui/icons-material/ManageAccounts';\nexport default function DetailView() {\n    const navigate = useNavigate();\n    const { id } = useParams();\n    const [caseDetailsNew, setCaseDetailsNew] = useState({} as any);\n    const [caseDetails, setCaseDetails] = useState({\n        first_name: 'John',\n        last_name: 'Doe',\n        email: 'dd@kdk.com',\n        phone: '123-456-7890',\n        status: 'scheduled',\n        age: 19,\n        gender: \"Male\",\n        case_activity_item: [\n            {\n                type: 'note',\n                user: 33,\n                attachments: [],\n                note: 'This patient is a good candidate for surgery because of his age and health. He is a non-smoker and has no other health issues. He is also very active and has a good support system at home. He is a good candidate for surgery because of his age and health. He is a non-smoker and has no other health issues. He is also very active and has a good support system at home.',\n                created: '2023-12-03T13:56:00-04:00'\n            },\n            {\n                type: 'note',\n                user: 33,\n                attachments: [],\n                note: 'This patient is a good  a candidate for surgery because of his age and health. He is a non-smoker and has no other health issues. He is also very active and has a good support system at home. He is a good candidate for surgery because of his age and health. He is a non-smoker and has no other health issues. He is also very active and has a good support system at home.',\n                created: '2023-12-03T13:56:00-04:00'\n            }, {\n                type: 'note',\n                user: 33,\n                attachments: [],\n                note: 'This patient is a good as candidate for surgery because of his age and health. He is a non-smoker and has no other health issues. He is also very active and has a good support system at home. He is a good candidate for surgery because of his age and health. He is a non-smoker and has no other health issues. He is also very active and has a good support system at home.',\n                created: '2023-12-03T13:56:00-04:00'\n            }, {\n                type: 'note',\n                user: 33,\n                attachments: [],\n                note: 'This patient is a good  3 candidate for surgery because of his age and health. He is a non-smoker and has no other health issues. He is also very active and has a good support system at home. He is a good candidate for surgery because of his age and health. He is a non-smoker and has no other health issues. He is also very active and has a good support system at home.',\n                created: '2023-12-03T13:56:00-04:00'\n            },\n            {\n                type: 'surgery_scheduled_added',\n                user: 33,\n                meta: {\n                    surgery_scheduled_id: 90,\n                }\n                ,\n                created: '2023-12-03T09:00:00-04:00'\n            }\n        ],\n        surgery_scheduled: [\n            {\n\n                start: \"2021-10-01T09:00:00-04:00\",\n                end: \"2021-10-01T09:30:00-04:00\",\n                type: 'surgery',\n                duration: 30,\n                anesthesia_type: 'choice',\n                anesthesia_position: 'surpine',\n                specialty: 'podiatry',\n                procedures: [\n                    {\n                        name: \"Right Akin\",\n                        site: 'foot',\n                        laterality: 'right',\n                        cpt_code: '28285',\n                    },\n                    {\n                        name: 'Weil osteotomy',\n                        site: 'foot',\n                        laterality: 'right',\n                        cpt_code: '28285',\n                    }\n                ],\n            }\n        ]\n    });\n    const [open, setOpen] = React.useState(false);\n\n\n    // make async await\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                if (id) {\n                    const caseDetailsResponse = await pb.collection('cases').getOne(id, { expand: \"case_activity_item(case)\" });\n                    // Process caseDetailsResponse as needed]\n                    if (caseDetailsResponse) {\n                        // calculate age using util method calculateAge\n                        let age = calculateAge(caseDetailsResponse.dob);\n                        let activity_items = [];\n                        if (caseDetailsResponse.expand) {\n                            activity_items = (caseDetailsResponse as any).expand['case_activity_item(case)'] || [];\n                            // sort by created date\n                            activity_items.sort((a: any, b: any) => {\n                                return new Date(b.created).getTime() - new Date(a.created).getTime();\n                            });\n                        }\n                        setCaseDetailsNew({\n                            ...caseDetailsResponse,\n                            age: age,\n                            activity_items\n                        });\n                    }\n                }\n            } catch (error) {\n                console.error('Error fetching case details:', error);\n            }\n        };\n\n        fetchData();\n    }, [id, open]);\n\n\n\n    const handleOpen = () => setOpen(true);\n    const navigateToCases = () => {\n        navigate('/cases/' + id, { replace: true });\n    }\n\n    return <Stack>\n        <Box\n            sx={{\n                flex: 1,\n                width: '100%',\n            }}\n        >\n            <Box\n                sx={{\n                    bgcolor: 'background.body',\n                }}\n            >\n                <Box\n                    sx={{\n                        px: {\n                            xs: 2,\n                            md: 6,\n                        },\n                    }}\n                >\n                    <Card>\n                        <Stack>\n                            <Stack direction=\"row\" alignItems=\"baseline\" justifyContent=\"space-between\" spacing={3}\n                            >\n                                <Stack direction={{ md: 'row', sm: 'column' }} alignItems={{ md: \"flex-start\", sm: 'center' }} justifyContent={\"center\"} spacing={3}>\n                                    <AspectRatio\n                                        ratio=\"1\"\n                                        maxHeight={200}\n                                        sx={{ flex: 1, minWidth: 120, borderRadius: \"100%\" }}\n                                    >\n                                        <img\n                                            //if data.avatar is null, use default pic\n                                            src={DefaultPic}\n                                            // srcSet=\"https://images.unsplash.com/photo-1535713875002-d1d0cf377fde?auto=format&fit=crop&w=286&dpr=2 2x\"\n                                            // loading=\"lazy\"\n                                            alt=\"\"\n                                        />\n                                    </AspectRatio>\n                                    <Stack direction={\"column\"} justifyContent=\"space-between\"  >\n                                        <Typography\n                                            level=\"h2\"\n                                            sx={{\n                                                mt: 1,\n                                                mx: 2,\n\n                                            }}\n                                        >\n                                            {/* every place add null checks */}\n                                            {caseDetailsNew?.first_name} {caseDetailsNew?.last_name}\n                                        </Typography>\n                                        <Stack direction=\"row\" justifyContent=\"flex-start\" alignItems=\"center\" >\n\n                                            <Stack direction=\"column\" justifyContent=\"flex-start \" >\n                                                <Typography\n                                                    level=\"title-sm\"\n                                                    sx={{\n                                                        mt: 1,\n                                                        mb: 2,\n\n                                                        mx: 2,\n                                                    }}\n                                                >\n                                                    Age {caseDetailsNew?.age}\n                                                </Typography>\n                                                <Typography\n                                                    level=\"title-sm\"\n                                                    sx={{\n                                                        mt: 1,\n                                                        mb: 2,\n                                                        mx: 2,\n\n                                                    }}\n                                                >\n                                                    Gender {caseDetails.gender}\n                                                </Typography>\n                                            </Stack>\n                                            <Stack direction=\"column\" justifyContent=\"flex-start\">\n\n                                                <Typography\n                                                    level=\"title-sm\"\n                                                    sx={{\n                                                        mt: 1,\n                                                        mb: 2,\n                                                        mx: 2,\n                                                    }}\n                                                >\n                                                    Status\n\n                                                    <Chip\n                                                        sx={{ ml: 3 }}\n                                                        color=\"primary\"\n                                                    >\n                                                        {caseDetailsNew?.status}\n                                                    </Chip>\n\n                                                </Typography>\n                                                <Typography\n                                                    level=\"title-sm\"\n                                                    sx={{\n                                                        mt: 1,\n                                                        mb: 2,\n                                                        mx: 2,\n                                                    }}\n                                                >\n                                                    Email {caseDetailsNew?.email}\n                                                </Typography>\n                                            </Stack>\n                                        </Stack>\n\n\n                                    </Stack>\n                                </Stack>\n\n                            </Stack>\n                            <Stack direction=\"row\" alignItems=\"flex-end\" justifyContent=\"flex-end\" spacing={3}>\n                                <IconButton title='Add Note' variant=\"soft\" color=\"primary\" size=\"sm\" onClick={handleOpen}>\n                                    <EditNoteIcon />\n                                </IconButton >\n                                {/* // add tool tip to icon */}\n\n\n                                <IconButton title='Schedule' variant=\"soft\" color=\"primary\" size=\"sm\" onClick={handleOpen}>\n                                    <DataSaverOnIcon />\n                                </IconButton >\n\n                                <IconButton title='Patient Profile' variant=\"soft\" color=\"primary\" size=\"sm\" onClick={navigateToCases}>\n                                    <ManageAccountsIcon />\n\n                                </IconButton >\n\n                            </Stack>\n                        </Stack>\n                    </Card>\n                </Box>\n            </Box>\n            <Tabs\n                defaultValue={0}\n                sx={{\n                    bgcolor: 'transparent',\n                }}\n            >\n                <TabList\n                    tabFlex={1}\n                    size=\"sm\"\n                    sx={{\n                        zIndex: 1000,\n                        position: 'sticky',\n                        top: {\n                            sm: 3000,\n                            md: 0,\n                        },\n                        bgcolor: 'background.body',\n                        pl: {\n                            xs: 0,\n                            md: 4,\n                        },\n                        justifyContent: 'left',\n                        [`&& .${tabClasses.root}`]: {\n                            flex: 'initial',\n                            bgcolor: 'transparent',\n                            [`&.${tabClasses.selected}`]: {\n                                fontWeight: '600',\n                                '&::after': {\n                                    height: '2px',\n                                    bgcolor: 'primary.500',\n                                },\n                            },\n                        },\n                    }}\n                >\n                    <Tab sx={{ borderRadius: '6px 6px 0 0' }} indicatorInset value={0}>\n                        Primary Details\n                    </Tab>\n                    <Tab sx={{ borderRadius: '6px 6px 0 0' }} indicatorInset value={1}>\n                        Activity Log\n                    </Tab>\n                    <Tab sx={{ borderRadius: '6px 6px 0 0' }} indicatorInset value={2}>\n                        Documents\n                    </Tab>\n                </TabList>\n                <TabPanel value={0}>\n                    <AccordionGroup\n                        variant=\"plain\"\n                        transition=\"0.2s\"\n                        sx={{\n                            maxWidth: '800px',\n                            mx: 'auto',\n                            px: {\n                                xs: 2,\n                                md: 6,\n                            },\n                            py: {\n                                xs: 2,\n                                md: 3,\n                            },\n                            borderRadius: 'md',\n                            [`& .${accordionDetailsClasses.content}.${accordionDetailsClasses.expanded}`]:\n                            {\n                                paddingBlock: '1rem',\n                            },\n                            [`& .${accordionSummaryClasses.button}`]: {\n                                paddingBlock: '1rem',\n                            },\n                        }}\n                    >\n                        <Accordion>\n                            <AccordionSummary>\n                                <Avatar color=\"primary\">\n                                    <TapAndPlayRoundedIcon />\n                                </Avatar>\n                                <ListItemContent>\n                                    <Typography level=\"title-md\">Sugery Details</Typography>\n                                    <Typography level=\"body-sm\">\n                                        Activate or deactivate your connections\n                                    </Typography>\n                                </ListItemContent>\n                            </AccordionSummary>\n                            <AccordionDetails>\n                                <SurgeryDetails surgeryDetails={caseDetails.surgery_scheduled[0]} />\n                            </AccordionDetails>\n                        </Accordion>\n                    </AccordionGroup>\n                </TabPanel>\n                <TabPanel value={1}>\n                    <AccordionGroup\n                        variant=\"plain\"\n                        transition=\"0.2s\"\n                        sx={{\n                            maxWidth: '800px',\n                            mx: 'auto',\n                            px: {\n                                xs: 2,\n                                md: 6,\n                            },\n                            py: {\n                                xs: 2,\n                                md: 3,\n                            },\n                            borderRadius: 'md',\n                            [`& .${accordionDetailsClasses.content}.${accordionDetailsClasses.expanded}`]:\n                            {\n                                paddingBlock: '1rem',\n                            },\n                            [`& .${accordionSummaryClasses.button}`]: {\n                                paddingBlock: '1rem',\n                            },\n                        }}\n                    >\n\n                        <ActivityLogComponent case_activity_item={caseDetailsNew?.activity_items || []} />\n\n                    </AccordionGroup>\n                </TabPanel>\n                <TabPanel value={2}>\n                    {/* responsive grid to show documents\n                */}\n                </TabPanel>\n            </Tabs>\n            {/* below is example code from mui which can be used for responsive ness and other stuctrure settig */}\n        </Box>\n        {open &&\n            <AddActivity open={open} setOpen={setOpen} caseId={id} type={\"note\"} />\n        }\n\n    </Stack >\n}","import React, { useMemo } from 'react';\nimport styled from '@emotion/styled';\nimport { isSameDay, startOfWeek } from 'date-fns';\n\n\nconst CELL_HEIGHT = 50; // Fixed height for each cell\n\nconst Scroller = styled.div`\n    overflow: auto;\n    height: 100%;\n    width: 100%;\n`;\n\nconst WeekViewCalendarContainer = styled.div`\n  display: flex;\n`;\n\nconst TimeColumn = styled.div`\n  border-right: 1px solid #ddd;\n  padding: 0px 10px;\n  text-align: center;\n  position: sticky;\n  left: 0;\n  background-color: #f0f0f0;\n  z-index: 1;\n\n  height: ${CELL_HEIGHT * 25}px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst DayColumn = styled.div`\n  flex: 1;\n  position: relative;\n  height: ${CELL_HEIGHT * 25}px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst DayCell = styled.div`\n  border-bottom: 1px solid #ddd;\n  padding: 10px;\n  text-align: center;\n  font-weight: bold;\n  position: sticky;\n  top: 0;\n  background-color: #f0f0f0;\n  z-index: 1;\n  flex:1;\n\n`;\n\nconst HourCell = styled.div`\n  border-right: 1px solid #ddd;\n  border-bottom: 1px solid #ddd;\n  padding: 10px;\n  text-align: center;\n  flex:1;\n  \n  :hover {\n    background-color: #f0f0f0;\n    cursor: pointer;\n  }\n\n`;\n\nconst Event = styled.div`\n  position: absolute;\n  padding: 5px;\n  border-radius: 4px;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n\n  transition: box-shadow 0.2s ease-in-out;\n\n  &:hover {\n    cursor: pointer;\n    box-shadow: 0 0 0 2px rgba(0, 0, 0, 0.2);\n  }\n`;\n\nconst LunchEvent = styled(Event)`\n  background-color: #4caf50;\n`;\n\nexport type WeekViewEventType = {\n    title: string;\n    startTime: string;\n    endTime: string;\n    type: 'surgery' | 'block';\n    id: string;\n    case: any;\n}\ntype Props = {\n    events: WeekViewEventType[], range: { start: string, end: string }, onSelectRange: (start: Date, end: Date) => void,\n    onEventClick: (event: WeekViewEventType) => void\n};\n\nconst WeekView = ({ events, range = {\n    start: startOfWeek(new Date()).toDateString(),\n    end: startOfWeek(new Date()).toDateString(),\n}, onSelectRange, onEventClick }: Props) => {\n    const hoursOfDay = Array.from({ length: 24 }, (_, i) => i);\n\n    const getEventsForDate = (date: string) => {\n        const dateObj = new Date(date);\n        return events.filter((event) => {\n            const eventDate = new Date(event.startTime);\n            return isSameDay(eventDate, dateObj)\n        });\n    }\n\n\n    const dates = useMemo(() => {\n        // YYYY-MM-DD\n        return Array.from({ length: 7 }, (_, i) => {\n            const date = new Date(range.start);\n            date.setDate(date.getDate() + i);\n            return date.toISOString().split('T')[0];\n        }\n        );\n    }, [range])\n\n\n    const handleHourClick = (date: string, hour: number) => {\n        const dateObj = new Date(date);\n        dateObj.setHours(hour);\n        onSelectRange(dateObj, new Date(dateObj.getTime() + 60 * 60 * 1000));\n    }\n\n    return (\n        <Scroller>\n            <WeekViewCalendarContainer>\n                <TimeColumn>\n                    <div style={{ height: CELL_HEIGHT }}></div>\n                    {hoursOfDay.map((hour) => (\n                        <div key={hour} style={{ height: CELL_HEIGHT }}>{`${hour % 12 === 0 ? 12 : hour % 12} ${hour < 12 ? 'AM' : 'PM'}`}</div>\n                    ))}\n                </TimeColumn>\n                {dates.map((date, index) => {\n                    const dateObj = new Date(date);\n                    const dayEvents = getEventsForDate(date);\n\n                    return (\n                        <DayColumn key={index}>\n                            <DayCell>{\n                                dateObj.toLocaleDateString([], {\n                                    weekday: 'short',\n                                    month: 'short',\n                                    day: 'numeric',\n                                })\n                            }</DayCell>\n                            {hoursOfDay.map((hour) => (\n                                <HourCell key={`${index}-${hour}`} style={{ height: CELL_HEIGHT }} onClick={e => {\n                                    handleHourClick(date, hour);\n                                }} />\n                            ))}\n                            {dayEvents\n                                .map((event, eventIndex) => {\n                                    const secondsInDay = 25 * 60 * 60;\n                                    const start = new Date(event.startTime);\n                                    const end = new Date(event.endTime);\n                                    const startSeconds = start.getHours() * 60 * 60 + start.getMinutes() * 60 + start.getSeconds();\n                                    const endSeconds = end.getHours() * 60 * 60 + end.getMinutes() * 60 + end.getSeconds();\n\n\n                                    const topPercent = startSeconds * 100 / secondsInDay;\n                                    const heightPercent = (endSeconds - startSeconds) * 100 / secondsInDay;\n                                    console.log('event', event, { startSeconds, endSeconds, secondsInDay, topPercent });\n\n\n                                    return (\n                                        <Event\n                                            key={eventIndex}\n                                            style={{\n                                                top: `${topPercent}%`,\n                                                height: `${heightPercent}%`,\n\n                                                transform: `translateY(${CELL_HEIGHT}px)`,\n                                                backgroundColor: event.type === 'surgery' ? '#4caf50' : '#a44336',\n                                                color: '#fff',\n                                            }}\n                                            onClick={() => {\n                                                onEventClick(event)\n                                            }}\n                                        >\n                                            <div>{event.title}</div>\n                                            <div>\n                                                {`${new Date(event.startTime).toLocaleTimeString([], {\n                                                    hour: '2-digit',\n                                                    minute: '2-digit',\n                                                })} - ${new Date(event.endTime).toLocaleTimeString([], {\n                                                    hour: '2-digit',\n                                                    minute: '2-digit',\n                                                })}`}\n                                            </div>\n                                        </Event>\n                                    )\n                                })}\n                        </DayColumn>\n                    );\n                })}\n            </WeekViewCalendarContainer>\n        </Scroller>\n    );\n};\n\nexport default WeekView;\n","import { Box, Button, DialogTitle, FormControl, FormLabel, Input, Modal, ModalClose, ModalDialog, Typography } from '@mui/joy';\nimport { Stack } from '@mui/material';\nimport { format, parse } from 'date-fns';\nimport React, { useEffect } from 'react';\nimport { Form } from 'react-router-dom';\nimport { pb } from '../../../services/pocketbase';\n\n\n\nexport default function BlockTimeModal({ onClose, onBlockTimeCreated, open, start: startP, end: endP }) {\n\n\n\n    const [start, setStart] = React.useState(new Date());\n    const [end, setEnd] = React.useState(new Date());\n\n\n    useEffect(() => {\n        if (startP) {\n            setStart(new Date(startP))\n        }\n        if (endP) {\n            setEnd(new Date(endP))\n        }\n    }, [startP, endP])\n\n\n    console.log(start, end)\n\n\n\n    const handleClose = () => {\n        onClose()\n    }\n\n\n    const handleSubmit = () => {\n        // create a new scheduled_event pocketbase of type block\n        pb.collection('schedule_items').create({\n            type: 'block',\n            start: start,\n            end: end,\n            user: pb.authStore.model.id\n        })\n            .then((res) => {\n                console.log(res)\n                handleClose()\n                onBlockTimeCreated(res)\n            })\n    }\n\n    return <Modal onClose={handleClose} open={open}>\n\n        <ModalDialog>\n            <ModalClose />\n\n            <DialogTitle >\n                Block Time\n            </DialogTitle>\n            <Typography variant='p'>\n                Block your calendar and let your team know you're busy.\n            </Typography>\n\n\n            <Stack spacing={2} >\n                <FormControl  >\n                    <FormLabel>Date</FormLabel>\n                    <Input\n\n                        type=\"date\"\n                        slotProps={{\n                            input: {\n                                min: \"2018-06-07T00:00\",\n                                max: \"2018-06-14T00:00\",\n                            },\n                        }}\n                        value={format(start, 'yyyy-MM-dd')}\n                        onChange={(e) => {\n                            const date = new Date(e.target.value)\n                            date.setHours(start.getHours())\n                            date.setMinutes(start.getMinutes())\n                            setStart(date)\n                        }}\n                    />\n                </FormControl>\n\n\n                <Stack direction=\"row\" spacing={2}>\n\n                    <FormControl sx={{ flex: 1 }}>\n                        <FormLabel>\n                            From\n                        </FormLabel>\n                        <Input\n\n                            type=\"time\"\n                            slotProps={{\n                                input: {\n                                    min: \"2018-06-07T00:00\",\n                                    max: \"2018-06-14T00:00\",\n                                },\n                            }}\n                            value={format(start, 'HH:mm')}\n                            onChange={(e) => {\n                                // parse the time and set the date\n                                const time = parse(e.target.value, 'HH:mm', new Date());\n                                const newStart = new Date(start)\n                                newStart.setHours(time.getHours())\n                                newStart.setMinutes(time.getMinutes())\n                                setStart(newStart)\n                            }}\n                        />\n                    </FormControl>\n\n\n                    <FormControl\n                        sx={{ flex: 1 }}\n\n                    >\n                        <FormLabel>Until</FormLabel>\n                        <Input\n\n                            type=\"time\"\n                            slotProps={{\n                                input: {\n                                    min: \"2018-06-07T00:00\",\n                                    max: \"2018-06-14T00:00\",\n                                },\n                            }}\n                            value={format(end, 'HH:mm')}\n                            onChange={(e) => {\n                                // parse the time and set the date\n                                const time = parse(e.target.value, 'HH:mm', new Date());\n                                const newEnd = new Date(end)\n                                newEnd.setHours(time.getHours())\n                                newEnd.setMinutes(time.getMinutes())\n                                setEnd(newEnd)\n                            }}\n                        />\n                    </FormControl>\n\n\n                </Stack>\n                <Box\n                    sx={{\n                        mt: 1,\n                        display: 'flex',\n                        gap: 1,\n                        flexDirection: { xs: 'column', sm: 'row-reverse' },\n                    }}\n                >\n\n                    <Button variant=\"solid\" color=\"primary\" onClick={\n                        handleSubmit\n                    }>\n                        Save\n                    </Button>\n                    <Button\n                        variant=\"outlined\"\n                        color=\"neutral\"\n                        onClick={handleClose}\n                    >\n                        Cancel\n                    </Button>\n\n                </Box>\n            </Stack>\n        </ModalDialog>\n\n    </Modal>\n\n}","import React, { useEffect, useMemo } from 'react';\nimport { pb } from '../../services/pocketbase';\nimport { addHours, endOfWeek, startOfDay, startOfHour, startOfWeek, subDays } from 'date-fns';\nimport { ListResult, RecordModel } from 'pocketbase';\nimport WeekView, { WeekViewEventType } from './WeekView';\nimport { Stack } from '@mui/material';\nimport { Button, Typography } from '@mui/joy';\nimport { Close } from '@mui/icons-material';\nimport BlockTimeModal from './modules/BlockTimeModal';\nimport { useNavigate } from 'react-router-dom';\n\n\n\nexport default function CalendarScreen() {\n\n    const navigate = useNavigate();\n    const [scheduledItems, setScheduledItems] = React.useState<ListResult<RecordModel>>()\n    const [range, setRange] = React.useState({\n        start: startOfWeek(new Date()).toISOString(),\n        end: endOfWeek(new Date()).toISOString(),\n    })\n\n    const [blockTimeModalProps, setBlockTimeModalProps] = React.useState<any>({\n        open: false,\n        start: new Date(),\n        end: new Date(),\n    })\n\n    const handleBlockTime = ({ start = new Date(), end = addHours(new Date(), 1) } = {}) => {\n        setBlockTimeModalProps({\n            open: true,\n            start,\n            end,\n        })\n    }\n\n    const events: WeekViewEventType[] = useMemo(() => {\n        if (!scheduledItems) {\n            return []\n        }\n        return scheduledItems.items.map((item) => {\n            return {\n                id: item.id,\n                title: item.title,\n                startTime: item.start,\n                endTime: item.end,\n                type: item.type as any,\n                case: item.case,\n            }\n        })\n\n    }, [scheduledItems])\n\n    const fetchScheduledItems = async () => {\n        // find schedule items for this user\n        pb.collection('schedule_items').getList(1, 50, {\n            filter: `user.id = \"${pb.authStore.model?.id}\"`,\n            expand: `case`\n        })\n            .then((items) => {\n                setScheduledItems(items as any)\n            })\n            .catch((error) => {\n                console.error(error)\n            })\n    }\n    useEffect(() => {\n        fetchScheduledItems()\n    }, [])\n\n\n    const handleSelectRange = (start: Date, end: Date) => {\n        handleBlockTime({\n            start,\n            end,\n        })\n    }\n\n\n\n    return <div>\n\n        <Stack direction='row' gap={1} justifyContent=\"space-between\" mb={2}>\n            <Typography level=\"h2\">Assigned To You</Typography>\n            <Button\n                color=\"primary\"\n                startDecorator={<Close />}\n                size=\"sm\"\n                onClick={() => handleBlockTime()}\n            >\n                Block Time\n            </Button>\n        </Stack>\n\n        <WeekView events={events} range={range} onSelectRange={handleSelectRange} onEventClick={\n            (event) => {\n                if (event.type === 'block') {\n                    return\n                }\n\n                navigate(`/cases/${event.case.id}`)\n\n            }\n        } />\n\n        {blockTimeModalProps &&\n            <BlockTimeModal\n                open={blockTimeModalProps.open}\n                start={blockTimeModalProps.start}\n                end={blockTimeModalProps.end}\n                onClose={() => setBlockTimeModalProps(null)}\n                onBlockTimeCreated={\n                    fetchScheduledItems\n                }\n            />}\n    </div>\n}","import React, { Suspense } from \"react\";\nimport OrderTable from \"./views/cases/CasesTable\";\nimport OrderList from \"./components/OrderList\";\nimport menuItems from \"./nav\";\nimport Box from \"@mui/joy/Box\";\n\nimport Breadcrumbs from \"@mui/joy/Breadcrumbs\";\nimport Link from \"@mui/joy/Link\";\nimport Typography from \"@mui/joy/Typography\";\n// icons\nimport HomeRoundedIcon from \"@mui/icons-material/HomeRounded\";\nimport ChevronRightRoundedIcon from \"@mui/icons-material/ChevronRightRounded\";\nimport DownloadRoundedIcon from \"@mui/icons-material/DownloadRounded\";\nimport Button from \"@mui/joy/Button\";\nimport { CircularProgress } from \"@mui/joy\";\nimport { Navigate, Route, Routes, BrowserRouter } from \"react-router-dom\";\nimport Dashboard from \"./views/dashboard/Dashboard\";\nimport Cases from \"./views/cases/Cases\";\nimport AssignedAppointments from \"./views/assigned/AssignedAppointments\";\nimport CaseView from \"./views/cases/CaseView/CaseView\";\nimport AddCase from \"./views/addCase/AddCase\";\nimport DetailView from \"./views/cases/CaseView/DetailView\";\nimport CalendarScreen from \"./views/calendar/CalendarScreen\";\n\nexport default function AppContent() {\n  return (\n    <>\n      <Box\n        component=\"main\"\n        className=\"MainContent\"\n        sx={{\n          marginLeft: {\n            md: \"var(--Sidebar-width)\"\n          }\n          ,\n\n          px: {\n            xs: 2,\n            md: 6,\n          },\n          pt: {\n            xs: \"calc(12px + var(--Header-height))\",\n            sm: \"calc(12px + var(--Header-height))\",\n            md: 3,\n          },\n          pb: {\n            xs: 2,\n            sm: 2,\n            md: 3,\n          },\n          flex: 1,\n          display: \"flex\",\n          flexDirection: \"column\",\n          minWidth: 0,\n          height: \"100dvh\",\n          gap: 1,\n        }}\n      >\n        <Suspense fallback={<CircularProgress color=\"primary\" />}>\n          <Routes>\n            <Route key={\"cases\"} path={\"/cases/details/:id\"} element={<DetailView />} />\n            <Route key={\"cases\"} path={\"/cases/:id\"} element={<CaseView />} />\n\n            {/* <Route key={\"cases\"} path={\"/cases*\"} element={<Cases />} /> */}\n            <Route key={\"cases\"} path={\"/cases/*\"} element={<Cases />} />\n\n            <Route\n              key={\"Calendar\"}\n              path={\"/calendar\"}\n              element={<CalendarScreen />}\n            />\n            <Route key={\"stats\"} path={\"/stats\"} element={<Dashboard />} />\n            <Route\n              key={\"assigned\"}\n              path={\"/assigned\"}\n              element={<AssignedAppointments />}\n            />\n            <Route key={\"addCase\"} path={\"/addCase\"} element={<AddCase />} />\n          </Routes>\n        </Suspense>\n      </Box>\n    </>\n  );\n}\n","import React from \"react\";\nimport Header from \"./components/Header\";\n\nimport SidebarNew from \"./components/SidebarNew\";\nimport OrderTable from \"./views/cases/CasesTable\";\nimport OrderList from \"./components/OrderList\";\nimport menuItems from \"./nav\";\nimport Box from \"@mui/joy/Box\";\n\nimport Breadcrumbs from \"@mui/joy/Breadcrumbs\";\nimport Link from \"@mui/joy/Link\";\nimport Typography from \"@mui/joy/Typography\";\n// icons\nimport HomeRoundedIcon from \"@mui/icons-material/HomeRounded\";\nimport ChevronRightRoundedIcon from \"@mui/icons-material/ChevronRightRounded\";\nimport DownloadRoundedIcon from \"@mui/icons-material/DownloadRounded\";\nimport Button from \"@mui/joy/Button\";\nimport AppContent from \"./AppContent\";\nimport { pb } from \"./services/pocketbase\";\nimport { Navigate } from \"react-router-dom\";\n\nexport default function AppLayout() {\n\n  if (pb.authStore.isValid == false) {\n    return <Navigate replace to=\"/login\" />;\n  }\n  return (\n    <>\n      <Header />\n      <SidebarNew menuItems={menuItems} />\n      <AppContent />\n    </>\n  );\n}\n"],"names":["closeSidebar","document","documentElement","style","removeProperty","body","toggleSidebar","window","getComputedStyle","getPropertyValue","overflow","setProperty","Header","_jsxs","Sheet","sx","display","xs","md","alignItems","justifyContent","position","top","width","height","zIndex","p","gap","borderBottom","borderColor","boxShadow","children","_jsx","GlobalStyles","styles","theme","breakpoints","up","IconButton","onClick","variant","color","size","MenuIcon","ColorSchemeToggle","_ref","props","mode","setMode","useColorScheme","mounted","setMounted","React","id","event","Array","isArray","DarkModeRoundedIcon","LightModeIcon","disabled","Toggler","defaultExpanded","renderToggle","open","setOpen","Box","gridTemplateRows","transition","Sidebar","_ref2","menuItems","logout","navigate","useNavigate","async","pb","authStore","clear","useLogout","className","transform","flexShrink","flexDirection","borderRight","left","opacity","backgroundColor","lg","BrightnessAutoRoundedIcon","Typography","level","LogoutRoundedIcon","ml","List","map","menuItem","index","ListItem","nested","_ref3","ListItemButton","icon","ListItemContent","label","KeyboardArrowDownIcon","submenu","nestedItem","nestedIndex","role","component","RouterLink","to","link","AssignmentIndRounded","HomeRoundedIcon","CalendarMonthRounded","DashboardRoundedIcon","PersonAddIcon","dashboardData","Dashboard","mb","Stack","CasesTable","patients","page","setPage","useState","patientsData","setPatientsData","pagePatients","setPagePatients","useEffect","startIndex","endIndex","slicedPatients","slice","handleChangePage","newPage","borderRadius","py","sm","flexWrap","minWidth","FormControl","flex","FormLabel","Input","placeholder","startDecorator","SearchIcon","onChange","e","value","target","toLowerCase","trim","filteredPatientsResult","filter","patient","name","includes","dob","status","minHeight","Table","stickyHeader","hoverRow","padding","row","Link","navigateToCase","concat","title","VisibilityIcon","pt","iconButtonClasses","root","Button","KeyboardArrowLeftIcon","from","length","Math","ceil","_","Number","endDecorator","KeyboardArrowRightIcon","formatDate","dateString","date","Date","now","toDateString","secondsAgo","floor","getTime","minutesAgo","hoursAgo","toLocaleDateString","undefined","year","month","day","hour","minute","second","Cases","setPatients","convertDate","split","console","log","collection","getFullList","sort","requestKey","record","first_name","last_name","getList","_Fragment","my","OrderTable","listItems","customer","initial","email","RowMenu","Dropdown","MenuButton","slots","slotProps","MoreHorizRoundedIcon","Menu","MenuItem","Divider","OrderList","listItem","ListItemDecorator","Avatar","fontWeight","gutterBottom","Chip","Paid","CheckRoundedIcon","Refunded","AutorenewRoundedIcon","Cancelled","BlockIcon","ListDivider","mx","_item$expand","item","durationFormatted","useMemo","start","end","duration","intervalToDuration","formatDuration","format","caseDetails","expand","case","textDecoration","Card","direction","phone","textAlign","procedures","procedure","laterality","site","cpt_code","Vaccines","anesthesia_type","anesthesia_position","specialty","AssignedAppointments","result","setResult","range","setRange","startOfWeek","toISOString","endOfWeek","_pb$authStore$model","model","then","items","catch","error","scheduledItems","maxWidth","ScheduledItem","CountrySelector","Autocomplete","autoHighlight","isOptionEqualToValue","option","code","defaultValue","options","countries","renderOption","optionProps","AutocompleteOption","AspectRatio","ratio","loading","srcSet","src","alt","textColor","input","autoComplete","suggested","Caseview","caseId","useParams","data","setData","editMode","setEditMode","Surgery","setSurgery","getOne","fetchCaseData","handleChange","prevData","bgcolor","px","mt","spacing","handleEditModeToggle","prevEditMode","ArticleIcon","EditRoundedIcon","maxHeight","DefaultPic","flexGrow","phone_number","LocalPhoneIcon","type","EmailRoundedIcon","Grid3x3Icon","ssn","HomeIcon","Select","sex","required","Option","BusinessIcon","max","AccessTimeFilledRoundedIcon","Textarea","minRows","FormHelperText","fontSize","CardOverflow","borderTop","CardActions","alignSelf","preventDefault","update","updateData","MyProfile","setdata","procedure_details","setProcedure","cptCode","setCptCode","min","Checkbox","checked","LocalHospitalIcon","handleAddProcedure","updatedProcedures","border","marginTop","splice","handleRemoveProcedure","CloseIcon","create","err","handleSubmit","surgeryDetails","marginLeft","case_activity_item","activityItem","_activityItem$meta","_activityItem$meta2","note","Accordion","AccordionSummary","FormatListBulletedIcon","TapAndPlayRoundedIcon","HistoryToggleOffIcon","meta","join","created","AccordionDetails","handleClose","overflowY","Modal","onClose","ModalDialog","ModalClose","onSubmit","encType","DetailView","caseDetailsNew","setCaseDetailsNew","setCaseDetails","age","gender","user","attachments","surgery_scheduled_id","surgery_scheduled","caseDetailsResponse","birthday","ageDifMs","ageDate","abs","getUTCFullYear","calculateAge","activity_items","a","b","fetchData","handleOpen","EditNoteIcon","DataSaverOnIcon","navigateToCases","replace","ManageAccountsIcon","Tabs","TabList","tabFlex","pl","tabClasses","selected","Tab","indicatorInset","TabPanel","AccordionGroup","accordionDetailsClasses","content","expanded","paddingBlock","accordionSummaryClasses","button","SurgeryDetails","ActivityLogComponent","AddActivity","CELL_HEIGHT","Scroller","styled","div","_templateObject","_taggedTemplateLiteral","WeekViewCalendarContainer","_templateObject2","TimeColumn","_templateObject3","DayColumn","_templateObject4","DayCell","_templateObject5","HourCell","_templateObject6","Event","_templateObject7","_templateObject8","events","onSelectRange","onEventClick","hoursOfDay","i","dates","setDate","getDate","dateObj","dayEvents","eventDate","startTime","isSameDay","getEventsForDate","weekday","handleHourClick","setHours","eventIndex","secondsInDay","endTime","startSeconds","getHours","getMinutes","getSeconds","endSeconds","topPercent","heightPercent","toLocaleTimeString","BlockTimeModal","onBlockTimeCreated","startP","endP","setStart","setEnd","DialogTitle","setMinutes","time","parse","newStart","newEnd","res","CalendarScreen","setScheduledItems","blockTimeModalProps","setBlockTimeModalProps","handleBlockTime","addHours","arguments","fetchScheduledItems","Close","WeekView","handleSelectRange","AppContent","Suspense","fallback","CircularProgress","Routes","Route","path","element","CaseView","AddCase","AppLayout","isValid","Navigate","SidebarNew"],"sourceRoot":""}