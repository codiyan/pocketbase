{"version":3,"file":"static/js/97.24a05f12.chunk.js","mappings":"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","sources":["utils.ts","components/Header.tsx","components/ColorSchemeToggle.tsx","components/SidebarNew.tsx","hooks/useLogout.ts","nav.js","views/dashboard/Dashboard.tsx","views/cases/CasesTable.tsx","lib/utils.tsx","views/cases/Cases.tsx","components/OrderList.tsx","views/assigned/AssignedAppointmentsTable.tsx","views/assigned/AdminItem.tsx","views/assigned/AssignedAppointments.tsx","components/CountrySelector.tsx","views/cases/caseDetailView/CaseView.tsx","views/addCase/AddCase.tsx","views/cases/caseDetailView/SurgeryDetails.tsx","views/cases/activityLog/ActivityLog.tsx","views/cases/documents/FileCard.tsx","views/cases/documents/ConsentForm.tsx","views/cases/documents/DocumentView.tsx","views/cases/caseDetailView/AddSchedule.tsx","views/cases/activityLog/AddActivty.tsx","views/cases/caseDetailView/DetailView.tsx","views/calendar/WeekView.tsx","views/calendar/modules/BlockTimeModal.jsx","views/calendar/CalendarScreen.tsx","AppContent.tsx","AppLayout.tsx"],"sourcesContent":["export const openSidebar = () => {\r\n  if (typeof document !== 'undefined') {\r\n    document.body.style.overflow = 'hidden';\r\n    document.documentElement.style.setProperty('--SideNavigation-slideIn', '1');\r\n  }\r\n};\r\n\r\nexport const closeSidebar = () => {\r\n  if (typeof document !== 'undefined') {\r\n    document.documentElement.style.removeProperty('--SideNavigation-slideIn');\r\n    document.body.style.removeProperty('overflow');\r\n  }\r\n};\r\n\r\nexport const toggleSidebar = () => {\r\n  if (typeof window !== 'undefined' && typeof document !== 'undefined') {\r\n    const slideIn = window\r\n      .getComputedStyle(document.documentElement)\r\n      .getPropertyValue('--SideNavigation-slideIn');\r\n    if (slideIn) {\r\n      closeSidebar();\r\n    } else {\r\n      openSidebar();\r\n    }\r\n  }\r\n};\r\n","import * as React from 'react';\r\nimport GlobalStyles from '@mui/joy/GlobalStyles';\r\nimport Sheet from '@mui/joy/Sheet';\r\nimport IconButton from '@mui/joy/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\n\r\nimport { toggleSidebar } from '../utils';\r\n\r\nexport default function Header() {\r\n  return (\r\n    <Sheet\r\n      sx={{\r\n        display: { xs: 'flex', md: 'none' },\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        position: 'fixed',\r\n        top: 0,\r\n        width: '100vw',\r\n        height: 'var(--Header-height)',\r\n        zIndex: 9995,\r\n        p: 2,\r\n        gap: 1,\r\n        borderBottom: '1px solid',\r\n        borderColor: 'background.level1',\r\n        boxShadow: 'sm',\r\n      }}\r\n    >\r\n      <GlobalStyles\r\n        styles={(theme) => ({\r\n          ':root': {\r\n            '--Header-height': '52px',\r\n            [theme.breakpoints.up('md')]: {\r\n              '--Header-height': '0px',\r\n            },\r\n          },\r\n        })}\r\n      />\r\n      <IconButton\r\n        onClick={() => toggleSidebar()}\r\n        variant=\"outlined\"\r\n        color=\"neutral\"\r\n        size=\"sm\"\r\n      >\r\n        <MenuIcon />\r\n      </IconButton>\r\n    </Sheet>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { useColorScheme } from '@mui/joy/styles';\r\nimport IconButton, { IconButtonProps } from '@mui/joy/IconButton';\r\n\r\nimport DarkModeRoundedIcon from '@mui/icons-material/DarkModeRounded';\r\nimport LightModeIcon from '@mui/icons-material/LightMode';\r\n\r\nexport default function ColorSchemeToggle({\r\n  onClick,\r\n  sx,\r\n  ...props\r\n}: IconButtonProps) {\r\n  const { mode, setMode } = useColorScheme();\r\n  const [mounted, setMounted] = React.useState(false);\r\n  React.useEffect(() => {\r\n    setMounted(true);\r\n  }, []);\r\n  if (!mounted) {\r\n    return (\r\n      <IconButton\r\n        size=\"sm\"\r\n        variant=\"outlined\"\r\n        color=\"neutral\"\r\n        {...props}\r\n        sx={sx}\r\n        disabled\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <IconButton\r\n      id=\"toggle-mode\"\r\n      size=\"sm\"\r\n      variant=\"outlined\"\r\n      color=\"neutral\"\r\n      {...props}\r\n      onClick={(event) => {\r\n        if (mode === 'light') {\r\n          setMode('dark');\r\n        } else {\r\n          setMode('light');\r\n        }\r\n        onClick?.(event);\r\n      }}\r\n      sx={[\r\n        {\r\n          '& > *:first-child': {\r\n            display: mode === 'dark' ? 'none' : 'initial',\r\n          },\r\n          '& > *:last-child': {\r\n            display: mode === 'light' ? 'none' : 'initial',\r\n          },\r\n        },\r\n        ...(Array.isArray(sx) ? sx : [sx]),\r\n      ]}\r\n    >\r\n      <DarkModeRoundedIcon />\r\n      <LightModeIcon />\r\n    </IconButton>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport GlobalStyles from \"@mui/joy/GlobalStyles\";\r\nimport Avatar from \"@mui/joy/Avatar\";\r\nimport Box from \"@mui/joy/Box\";\r\nimport Button from \"@mui/joy/Button\";\r\nimport Card from \"@mui/joy/Card\";\r\nimport Chip from \"@mui/joy/Chip\";\r\nimport Divider from \"@mui/joy/Divider\";\r\nimport IconButton from \"@mui/joy/IconButton\";\r\nimport Input from \"@mui/joy/Input\";\r\nimport LinearProgress from \"@mui/joy/LinearProgress\";\r\nimport List from \"@mui/joy/List\";\r\nimport ListItem from \"@mui/joy/ListItem\";\r\nimport ListItemButton, { listItemButtonClasses } from \"@mui/joy/ListItemButton\";\r\nimport ListItemContent from \"@mui/joy/ListItemContent\";\r\nimport Typography from \"@mui/joy/Typography\";\r\nimport Sheet from \"@mui/joy/Sheet\";\r\nimport Stack from \"@mui/joy/Stack\";\r\nimport SearchRoundedIcon from \"@mui/icons-material/SearchRounded\";\r\nimport HomeRoundedIcon from \"@mui/icons-material/HomeRounded\";\r\nimport DashboardRoundedIcon from \"@mui/icons-material/DashboardRounded\";\r\nimport ShoppingCartRoundedIcon from \"@mui/icons-material/ShoppingCartRounded\";\r\nimport AssignmentRoundedIcon from \"@mui/icons-material/AssignmentRounded\";\r\nimport QuestionAnswerRoundedIcon from \"@mui/icons-material/QuestionAnswerRounded\";\r\nimport GroupRoundedIcon from \"@mui/icons-material/GroupRounded\";\r\nimport SupportRoundedIcon from \"@mui/icons-material/SupportRounded\";\r\nimport SettingsRoundedIcon from \"@mui/icons-material/SettingsRounded\";\r\nimport CloseRoundedIcon from \"@mui/icons-material/CloseRounded\";\r\nimport LogoutRoundedIcon from \"@mui/icons-material/LogoutRounded\";\r\nimport BrightnessAutoRoundedIcon from \"@mui/icons-material/BrightnessAutoRounded\";\r\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\r\n\r\nimport ColorSchemeToggle from \"./ColorSchemeToggle\";\r\nimport { closeSidebar } from \"../utils\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport useLogout from \"../hooks/useLogout\";\r\n\r\nfunction Toggler({\r\n  defaultExpanded = false,\r\n  renderToggle,\r\n  children,\r\n}: {\r\n  defaultExpanded?: boolean;\r\n  children: React.ReactNode;\r\n  renderToggle: (params: {\r\n    open: boolean;\r\n    setOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n  }) => React.ReactNode;\r\n}) {\r\n  const [open, setOpen] = React.useState(defaultExpanded);\r\n  return (\r\n    <React.Fragment>\r\n      {renderToggle({ open, setOpen })}\r\n      <Box\r\n        sx={{\r\n          display: \"grid\",\r\n          gridTemplateRows: open ? \"1fr\" : \"0fr\",\r\n          transition: \"0.2s ease\",\r\n          \"& > *\": {\r\n            overflow: \"hidden\",\r\n          },\r\n        }}\r\n      >\r\n        {children}\r\n      </Box>\r\n    </React.Fragment>\r\n  );\r\n}\r\ninterface MenuItem {\r\n  icon?: React.ReactElement;\r\n  label: string;\r\n  link: string;\r\n  submenu?: MenuItem[];\r\n  nested?: boolean;\r\n}\r\n\r\ninterface SidebarProps {\r\n  menuItems: MenuItem[];\r\n}\r\n\r\nexport default function Sidebar({ menuItems }: SidebarProps) {\r\n  const logout = useLogout();\r\n  return (\r\n    <Sheet\r\n      className=\"Sidebar\"\r\n      sx={{\r\n        position: \"fixed\",\r\n        // position: {\r\n        //   sm: \"fixed\",\r\n        //   md: \"sticky\",\r\n        // },\r\n        transform: {\r\n          xs: \"translateX(calc(100% * (var(--SideNavigation-slideIn, 0) - 1)))\",\r\n          md: \"none\",\r\n        },\r\n        transition: \"transform 0.4s, width 0.4s\",\r\n        zIndex: 10000,\r\n        height: \"100dvh\",\r\n        width: \"var(--Sidebar-width)\",\r\n        top: 0,\r\n        p: 2,\r\n        flexShrink: 0,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        gap: 2,\r\n        borderRight: \"1px solid\",\r\n        borderColor: \"divider\",\r\n      }}\r\n    >\r\n      <GlobalStyles\r\n        styles={(theme) => ({\r\n          \":root\": {\r\n            \"--Sidebar-width\": \"220px\",\r\n            [theme.breakpoints.up(\"lg\")]: {\r\n              \"--Sidebar-width\": \"240px\",\r\n            },\r\n          },\r\n        })}\r\n      />\r\n      <Box\r\n        className=\"Sidebar-overlay\"\r\n        sx={{\r\n          position: \"fixed\",\r\n          zIndex: 9998,\r\n          top: 0,\r\n          left: 0,\r\n          width: \"100vw\",\r\n          height: \"100vh\",\r\n          opacity: \"var(--SideNavigation-slideIn)\",\r\n          backgroundColor: \"var(--joy-palette-background-backdrop)\",\r\n          transition: \"opacity 0.4s\",\r\n          transform: {\r\n            xs: \"translateX(calc(100% * (var(--SideNavigation-slideIn, 0) - 1) + var(--SideNavigation-slideIn, 0) * var(--Sidebar-width, 0px)))\",\r\n            lg: \"translateX(-100%)\",\r\n          },\r\n        }}\r\n        onClick={() => closeSidebar()}\r\n      />\r\n\r\n<Box sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }}>\r\n        <IconButton variant=\"soft\" color=\"primary\" size=\"sm\">\r\n          <BrightnessAutoRoundedIcon />\r\n        </IconButton>\r\n        <Typography level=\"title-lg\">SurgeryX</Typography>\r\n        {/* Logout button */}\r\n        <IconButton variant=\"soft\" color=\"primary\" size=\"sm\" className=\"logout-button\" onClick={logout}>\r\n          <LogoutRoundedIcon />\r\n        </IconButton>\r\n        <ColorSchemeToggle sx={{ ml: \"auto\" }} />\r\n      </Box>\r\n      {/* ... (rest of your code) */}\r\n      <List size=\"sm\" sx={{ gap: 1 }}>\r\n        {menuItems.map((menuItem, index) => (\r\n          <ListItem key={index} nested={menuItem.nested}>\r\n            {menuItem.nested ? (\r\n              <Toggler\r\n                renderToggle={({ open, setOpen }) => (\r\n                  <ListItemButton onClick={() => setOpen(!open)}>\r\n                    {menuItem.icon}\r\n                    <ListItemContent>\r\n                      <Typography level=\"title-sm\">{menuItem.label}</Typography>\r\n                    </ListItemContent>\r\n                    <KeyboardArrowDownIcon\r\n                      sx={{ transform: open ? \"rotate(180deg)\" : \"none\" }}\r\n                    />\r\n                  </ListItemButton>\r\n                )}\r\n              >\r\n                {/* ... (nested list) */}\r\n                <List sx={{ gap: 0.5 }}>\r\n                  {menuItem.submenu &&\r\n                    menuItem.submenu.map((nestedItem, nestedIndex) => (\r\n                      <ListItem key={nestedIndex}>\r\n                        <ListItemButton\r\n                          role=\"menuitem\"\r\n                          component={RouterLink}\r\n                          to={nestedItem.link}\r\n                        >\r\n                          {nestedItem.icon}\r\n                          <ListItemContent>\r\n                            <Typography level=\"title-sm\">\r\n                              {nestedItem.label}\r\n                            </Typography>\r\n                          </ListItemContent>\r\n                        </ListItemButton>\r\n                      </ListItem>\r\n                    ))}\r\n                </List>\r\n              </Toggler>\r\n            ) : (\r\n              <ListItemButton\r\n                role=\"menuitem\"\r\n                component={RouterLink}\r\n                to={menuItem.link}\r\n              >\r\n                {menuItem.icon}\r\n                <ListItemContent>\r\n                  <Typography level=\"title-sm\">{menuItem.label}</Typography>\r\n                </ListItemContent>\r\n              </ListItemButton>\r\n            )}\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Sheet>\r\n  );\r\n}\r\n","import React from \"react\"\r\nimport {pb} from \"../services/pocketbase\"\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nexport default function useLogout() {\r\n    const navigate = useNavigate();\r\n\r\n    async function logout() {\r\n        pb.authStore.clear();\r\n        navigate(\"/login\");\r\n    }\r\n    return logout\r\n}","import HomeRoundedIcon from \"@mui/icons-material/HomeRounded\";\r\nimport DashboardRoundedIcon from \"@mui/icons-material/DashboardRounded\";\r\nimport PersonAddIcon from \"@mui/icons-material/PersonAdd\";\r\nimport { ReactNode } from \"react\";\r\nimport {\r\n  AssignmentIndRounded,\r\n  CalendarMonthRounded,\r\n} from \"@mui/icons-material\";\r\n\r\nconst menuItems = [\r\n\r\n  {\r\n    icon: <DashboardRoundedIcon />,\r\n    label: \"Dashboard\",\r\n    link: \"/dashboard\",\r\n  },\r\n  {\r\n    icon: <AssignmentIndRounded />,\r\n    label: \"Assigned To Me\",\r\n    link: \"/assigned\",\r\n  },\r\n  {\r\n    icon: <HomeRoundedIcon />,\r\n    label: \"All Cases\",\r\n    link: \"/cases\",\r\n  },\r\n  {\r\n    icon: <CalendarMonthRounded />,\r\n    label: \"Calendar\",\r\n    link: \"/calendar\",\r\n  },\r\n \r\n  {\r\n    label: \"Add a Case\",\r\n    icon: <PersonAddIcon />,\r\n    link: \"/addCase\",\r\n  },\r\n];\r\n\r\nexport default menuItems;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Card, Box, Typography } from \"@mui/joy\";\r\nimport VisibilityOutlinedIcon from \"@mui/icons-material/VisibilityOutlined\";\r\nimport PersonOutlineOutlinedIcon from \"@mui/icons-material/PersonOutlineOutlined\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\n\r\nimport Button from \"@mui/joy/Button\";\r\nimport ToggleButtonGroup from \"@mui/joy/ToggleButtonGroup\";\r\nimport { pb } from \"../../services/pocketbase\";\r\nimport { CasesRecord, CasesResponse, CollectionResponses } from \"../../pocketbase-types\";\r\n\r\nconst icon = {\r\n  \"New Cases\": <VisibilityOutlinedIcon />,\r\n  \"Pending Cases\": <PersonOutlineOutlinedIcon />,\r\n  \"Scheduled Cases\": <CheckIcon />,\r\n};\r\n\r\nfunction DashboardStats() {\r\n  const [value, setValue] = useState(\"week\");\r\n  const [stats, setStats] = useState([\r\n    { title: \"New Cases\", count: 0, change: \"+0\" },\r\n    { title: \"Pending Cases\", count: 0, change: \"+0\" },\r\n    { title: \"Scheduled Cases\", count: 0, change: \"+0\" },\r\n\r\n  ]);\r\n  useEffect(() => {\r\n    const fetchCases = async () => {\r\n      // find schedule items for this user\r\n      // fetch cases from pocketbase based on week , month, year selected by default week\r\n      try {\r\n        // Calculate the start date based on the selected duration\r\n        const currentDate = new Date();\r\n        const startDate = new Date(currentDate);\r\n        if (value === \"week\") {\r\n          startDate.setDate(currentDate.getDate() - 7);\r\n        } else if (value === \"month\") {\r\n          startDate.setMonth(currentDate.getMonth() - 1);\r\n        } else if (value === \"year\") {\r\n          startDate.setFullYear(currentDate.getFullYear() - 1);\r\n        }\r\n        const cases = await pb.collection(\"cases\").getFullList({\r\n          filter: 'created > \"' + startDate.toISOString() + '\" && status != \"closed\" ',\r\n\r\n        });\r\n\r\n        const newStats = [\r\n          { title: \"New Cases\", count: 0, change: \"+0\" },\r\n          { title: \"Pending Cases\", count: 0, change: \"+0\" },\r\n          { title: \"Scheduled Cases\", count: 0, change: \"+0\" },\r\n\r\n        ];\r\n        // const patients = cases.map((c) => c.patient);\r\n        cases.forEach((c) => {\r\n          if (c.status === \"new\") {\r\n            newStats[0].count += 1;\r\n          } else if (c.status === \"scheduled\") {\r\n            newStats[1].count += 1;\r\n          } else if (c.status === \"pending\") {\r\n            newStats[2].count += 1;\r\n          }\r\n        });\r\n\r\n        setStats(newStats);\r\n      }\r\n\r\n      catch (error) {\r\n        console.log(error)\r\n      }\r\n\r\n\r\n    }\r\n\r\n    fetchCases();\r\n  }, [value])\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          mt: 2,\r\n          mx: 2,\r\n        }}\r\n      >\r\n        <Typography level=\"body-md\" sx={{ flexGrow: 1 }}>\r\n          Control and analyze your data in the easiest way\r\n        </Typography>\r\n        <ToggleButtonGroup\r\n          value={value}\r\n          onChange={(event, newValue) => {\r\n            if (newValue !== null) {\r\n              setValue(newValue);\r\n            }\r\n          }}\r\n          sx={{ ml: 2 }}\r\n        >\r\n          <Button value=\"week\">Week</Button>\r\n          <Button value=\"month\">Month</Button>\r\n          <Button value=\"year\">Year</Button>\r\n        </ToggleButtonGroup>\r\n      </Box>\r\n      <Box\r\n        sx={{\r\n          display: \"grid\",\r\n          gridTemplateColumns: { xs: \"1fr\", sm: \"repeat(3, 1fr)\" },\r\n          justifyContent: \"center\",\r\n          gap: 2,\r\n          mt: 12,\r\n          padding: 1,\r\n        }}\r\n      >\r\n        {stats.map((stat) => (\r\n          <Card\r\n            key={stat.title}\r\n            sx={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              borderRadius: \"22px\",\r\n              margin: \"auto\",\r\n              width: \"100%\",\r\n              maxWidth: {\r\n                sm: 290,\r\n                xs: \"100%\",\r\n              },\r\n            }}\r\n          >\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n                width: \"100%\",\r\n                padding: \"16px\",\r\n                boxSizing: \"border-box\",\r\n              }}\r\n            >\r\n              <Typography level=\"title-md\">{stat.title}</Typography>\r\n              {icon[stat.title as keyof typeof icon]}\r\n            </Box>\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n                width: \"100%\",\r\n                padding: \"16px\",\r\n                boxSizing: \"border-box\",\r\n              }}\r\n            >\r\n              <Typography\r\n                level=\"h4\"\r\n                sx={{\r\n                  fontWeight: \"medium\",\r\n                  fontSize: \"2.25rem\",\r\n                }}\r\n              >\r\n                {stat.count}\r\n              </Typography>\r\n              {/* <Typography level=\"body-sm\">{stat.change} last day</Typography> */}\r\n            </Box>\r\n          </Card>\r\n        ))}\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DashboardStats;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Box from \"@mui/joy/Box\";\r\nimport Button from \"@mui/joy/Button\";\r\nimport Divider from \"@mui/joy/Divider\";\r\nimport FormControl from \"@mui/joy/FormControl\";\r\nimport FormLabel from \"@mui/joy/FormLabel\";\r\nimport Link from \"@mui/joy/Link\";\r\nimport Input from \"@mui/joy/Input\";\r\nimport Modal from \"@mui/joy/Modal\";\r\nimport ModalDialog from \"@mui/joy/ModalDialog\";\r\nimport ModalClose from \"@mui/joy/ModalClose\";\r\nimport Select from \"@mui/joy/Select\";\r\nimport Option from \"@mui/joy/Option\";\r\nimport Table from \"@mui/joy/Table\";\r\nimport Sheet from \"@mui/joy/Sheet\";\r\nimport Checkbox from \"@mui/joy/Checkbox\";\r\nimport IconButton, { iconButtonClasses } from \"@mui/joy/IconButton\";\r\nimport Typography from \"@mui/joy/Typography\";\r\nimport Menu from \"@mui/joy/Menu\";\r\nimport MenuButton from \"@mui/joy/MenuButton\";\r\nimport MenuItem from \"@mui/joy/MenuItem\";\r\nimport Dropdown from \"@mui/joy/Dropdown\";\r\n// icons\r\nimport FilterAltIcon from \"@mui/icons-material/FilterAlt\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport ArrowDropDownIcon from \"@mui/icons-material/ArrowDropDown\";\r\nimport KeyboardArrowRightIcon from \"@mui/icons-material/KeyboardArrowRight\";\r\nimport KeyboardArrowLeftIcon from \"@mui/icons-material/KeyboardArrowLeft\";\r\nimport MoreHorizRoundedIcon from \"@mui/icons-material/MoreHorizRounded\";\r\nimport { downloadCSV } from \"../../lib/utils\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\ntype Patient = {\r\n  id: string;\r\n  name: string;\r\n  dob: string;\r\n  status: string;\r\n};\r\n\r\ntype OrderTableProps = {\r\n  patients: Patient[];\r\n};\r\n\r\nexport default function CasesTable({ patients }: OrderTableProps) {\r\n  const navigate = useNavigate();\r\n  // const [filteredPatients, setFilteredPatients] = useState<Patient[]>([]);\r\n  const [page, setPage] = useState(1);\r\n  const [patientsData, setPatientsData] = useState<Patient[]>([]);\r\n  const itemsPerPage = 10; // Adjust as needed\r\n\r\n  const navigateToCase = (id: string) => {\r\n    navigate(`/cases/details/${id}`);\r\n  }\r\n  const [pagePatients, setPagePatients] = useState<Patient[]>([]);\r\n\r\n  useEffect\r\n    (() => {\r\n      setPatientsData(patients);\r\n    }, [patients]);\r\n  useEffect(() => {\r\n\r\n\r\n    // Calculate the start and end indices based on the current page\r\n    const startIndex = (page - 1) * itemsPerPage;\r\n    const endIndex = page * itemsPerPage;\r\n\r\n    // Slice the patients array based on the indices\r\n    const slicedPatients = patientsData.slice(startIndex, endIndex);\r\n\r\n    // Update the filteredPatients state with the sliced patients\r\n    setPagePatients(slicedPatients);\r\n\r\n\r\n  }, [patientsData, page]);\r\n\r\n\r\n  const handleChangePage = (newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n\r\n  const handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = e.target.value.toLowerCase();\r\n    if (value.trim() === \"\") {\r\n      // If the search input is empty, show all patients\r\n      setPatientsData(patients);\r\n    } else {\r\n      // If there is a search input, filter patients based on the input\r\n      const filteredPatientsResult = patients.filter((patient) => {\r\n        return (\r\n          patient.name.toLowerCase().includes(value) ||\r\n          patient.dob.toLowerCase().includes(value) ||\r\n          patient.status.toLowerCase().includes(value)\r\n        );\r\n      });\r\n      setPatientsData(filteredPatientsResult);\r\n    }\r\n\r\n    // Reset the page to 1 when searching\r\n    setPage(1);\r\n  }\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n\r\n      <Box\r\n        className=\"SearchAndFilters-tabletUp\"\r\n        sx={{\r\n          borderRadius: \"sm\",\r\n          py: 2,\r\n          display: {\r\n            xs: \"none\",\r\n            sm: \"flex\",\r\n          },\r\n          flexWrap: \"wrap\",\r\n          gap: 1.5,\r\n          \"& > *\": {\r\n            minWidth: {\r\n              xs: \"120px\",\r\n              md: \"160px\",\r\n            },\r\n          },\r\n        }}\r\n      >\r\n        <FormControl sx={{ flex: 1 }} size=\"sm\">\r\n          <FormLabel>Search for order</FormLabel>\r\n          <Input\r\n            size=\"sm\"\r\n            placeholder=\"Search\"\r\n            startDecorator={<SearchIcon />}\r\n            onChange={handleSearch}\r\n          />\r\n        </FormControl>\r\n\r\n      </Box>\r\n      <Sheet\r\n        className=\"OrderTableContainer\"\r\n        variant=\"outlined\"\r\n        sx={{\r\n          display: { xs: \"none\", sm: \"initial\" },\r\n          width: \"100%\",\r\n          borderRadius: \"sm\",\r\n          flexShrink: 1,\r\n          overflow: \"auto\",\r\n          minHeight: 0,\r\n        }}\r\n      >\r\n        <Table\r\n          aria-labelledby=\"tableTitle\"\r\n          stickyHeader\r\n          hoverRow\r\n          sx={{\r\n            \"--TableCell-headBackground\":\r\n              \"var(--joy-palette-background-level1)\",\r\n            \"--Table-headerUnderlineThickness\": \"1px\",\r\n            \"--TableRow-hoverBackground\":\r\n              \"var(--joy-palette-background-level1)\",\r\n            \"--TableCell-paddingY\": \"4px\",\r\n            \"--TableCell-paddingX\": \"8px\",\r\n          }}\r\n        >\r\n          <thead>\r\n            <tr>\r\n\r\n              <th style={{ width: 180, padding: \"12px 6px\" }}>\r\n                ID\r\n              </th>\r\n              <th style={{ width: 140, padding: \"12px 6px\" }}>Name</th>\r\n              <th style={{ width: 140, padding: \"12px 6px\" }}>Date of birth</th>\r\n              <th style={{ width: 140, padding: \"12px 6px\" }}>Status</th>\r\n              <th style={{ width: 140, padding: \"12px 6px\" }}>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {pagePatients && pagePatients.map((row) => (\r\n              <tr key={row.id}>\r\n\r\n                <td>\r\n                  <Typography level=\"body-xs\">{row.id}</Typography>\r\n                </td>\r\n\r\n                <td>\r\n                  <Typography level=\"body-xs\">{row.name}</Typography>\r\n                </td>\r\n                <td>\r\n                  <Typography level=\"body-xs\">{row.dob}</Typography>\r\n                </td>\r\n                <td>\r\n                  <Typography level=\"body-xs\">{row.status}</Typography>\r\n                </td>\r\n                <td>\r\n                  <Box sx={{ display: \"flex\", gap: 2, alignItems: \"center\" }}>\r\n                    <Link\r\n                      level=\"body-xs\"\r\n                      component=\"button\"\r\n                      onClick={() => navigateToCase(row.id)}\r\n                    >\r\n                      <IconButton title='Schedule' variant=\"soft\" color=\"primary\" size=\"sm\" >\r\n                        <VisibilityIcon />\r\n                      </IconButton >\r\n                    </Link>\r\n                    {/* <RowMenu row={row} navigate={navigateToCase}/> */}\r\n                  </Box>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </Sheet>\r\n      <Box\r\n        className=\"Pagination-laptopUp\"\r\n        sx={{\r\n          pt: 2,\r\n          gap: 1,\r\n          [`& .${iconButtonClasses.root}`]: { borderRadius: \"50%\" },\r\n          display: {\r\n            xs: \"none\",\r\n            md: \"flex\",\r\n          },\r\n        }}\r\n      >\r\n        <Button\r\n          size=\"sm\"\r\n          variant=\"outlined\"\r\n          color=\"neutral\"\r\n          startDecorator={<KeyboardArrowLeftIcon />}\r\n          disabled={page === 1}\r\n          onClick={() => handleChangePage(page - 1)}\r\n        >\r\n          Previous\r\n        </Button>\r\n        <Box sx={{ flex: 1 }} />\r\n        {Array.from({ length: Math.ceil(patientsData.length / itemsPerPage) }).map((_, index) => (\r\n          <IconButton\r\n            key={index + 1}  // Use index + 1 as the key\r\n            size=\"sm\"\r\n            variant={Number(index + 1) ? \"outlined\" : \"plain\"}  // Use index + 1 as the condition\r\n            color=\"neutral\"\r\n            onClick={() => handleChangePage(index + 1)}\r\n          >\r\n            {index + 1}\r\n          </IconButton>\r\n        ))}\r\n        <Box sx={{ flex: 1 }} />\r\n\r\n        <Button\r\n          size=\"sm\"\r\n          variant=\"outlined\"\r\n          color=\"neutral\"\r\n          endDecorator={<KeyboardArrowRightIcon />}\r\n          disabled={page === Math.ceil(patientsData.length / itemsPerPage)}\r\n          onClick={() => handleChangePage(page + 1)}\r\n        >\r\n          Next\r\n        </Button>\r\n      </Box>\r\n    </React.Fragment >\r\n  );\r\n}\r\n","export function downloadCSV(data: any[], filename: string) {\r\n  const csvRows = [];\r\n  const headers = Object.keys(data[0]);\r\n  csvRows.push(headers.join(\",\"));\r\n\r\n  for (const row of data) {\r\n    const values = headers.map((header) => {\r\n      const escaped = (\"\" + row[header]).replace(/\"/g, '\\\\\"');\r\n      return `\"${escaped}\"`;\r\n    });\r\n    csvRows.push(values.join(\",\"));\r\n  }\r\n\r\n  const blob = new Blob([csvRows.join(\"\\n\")], { type: \"text/csv\" });\r\n  const url = window.URL.createObjectURL(blob);\r\n  const a = document.createElement(\"a\");\r\n  a.setAttribute(\"hidden\", \"\");\r\n  a.setAttribute(\"href\", url);\r\n  a.setAttribute(\"download\", `${filename}.csv`);\r\n  document.body.appendChild(a);\r\n  a.click();\r\n  document.body.removeChild(a);\r\n}\r\n\r\n\r\n\r\n\r\nexport function formatDate(dateString: string) {\r\n  const date = new Date(dateString);\r\n  const now = new Date();\r\n\r\n  // Check if the date is today\r\n  if (date.toDateString() === now.toDateString()) {\r\n    const secondsAgo = Math.floor((now.getTime() - date.getTime()) / 1000);\r\n\r\n    if (secondsAgo < 60) {\r\n      return `${secondsAgo} seconds ago`;\r\n    }\r\n\r\n    const minutesAgo = Math.floor(secondsAgo / 60);\r\n    if (minutesAgo < 60) {\r\n      return `${minutesAgo} minutes ago`;\r\n    }\r\n\r\n    const hoursAgo = Math.floor(minutesAgo / 60);\r\n    return `${hoursAgo} hours ago`;\r\n  }\r\n\r\n  // If not today, use the previous formatting\r\n  const options: Intl.DateTimeFormatOptions = {\r\n    year: 'numeric',\r\n    month: 'long',\r\n    day: 'numeric',\r\n    hour: 'numeric',\r\n    minute: 'numeric',\r\n    second: 'numeric',\r\n  };\r\n\r\n  return date.toLocaleDateString(undefined, options);\r\n};\r\n\r\n\r\n\r\n// calculate age\r\nexport function calculateAge(birthday: string) {\r\n  var ageDifMs = Date.now() - new Date(birthday).getTime();\r\n  var ageDate = new Date(ageDifMs); // miliseconds from epoch\r\n  return Math.abs(ageDate.getUTCFullYear() - 1970);\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport OrderTable from \"./CasesTable\";\r\nimport OrderList from \"../../components/OrderList\";\r\nimport { pb } from \"../../services/pocketbase\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Modal,\r\n  ModalClose,\r\n  ModalDialog,\r\n  Typography,\r\n} from \"@mui/joy\";\r\nimport DownloadRoundedIcon from \"@mui/icons-material/DownloadRounded\";\r\nimport { downloadCSV } from \"../../lib/utils\";\r\nimport { Link, Route, Routes } from \"react-router-dom\";\r\nimport { Patient } from \"../../lib/types\";\r\n\r\nexport default function Cases() {\r\n  const [patients, setPatients] = useState<Patient[]>([]);\r\n\r\n  // write a function to convert 2023-11-01 12:00:00.000Z to 2023-11-01\r\n  const convertDate = (date: string) => {\r\n    if (!date) return (\"\");\r\n    const dateArray = date.split(\" \");\r\n    return dateArray[0];\r\n  };\r\n\r\n  const getList = async () => {\r\n\r\n    const records = await pb.collection(\"cases\").getFullList({\r\n      sort: \"-created\", requestKey: \"null\",\r\n    });\r\n    // create an array of jsons of records using only id, name, dob, status\r\n    const patients = records.map((record) => {\r\n      return {\r\n        ...record,\r\n        id: record.id,\r\n        name: record.first_name + \" \" + record.last_name,\r\n        dob: convertDate(record.dob),\r\n        status: record.status,\r\n      };\r\n    });\r\n    // console.log(patients);\r\n\r\n    setPatients(patients);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"useEffect called\")\r\n    getList();\r\n  }, []);\r\n\r\n  const handleDownloadAll = () => {\r\n    downloadCSV(patients, \"all_patients\");\r\n  };\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          my: 1,\r\n          gap: 1,\r\n          flexDirection: { xs: \"column\", sm: \"row\" },\r\n          alignItems: { xs: \"start\", sm: \"center\" },\r\n          flexWrap: \"wrap\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <Typography level=\"h2\">All Cases</Typography>\r\n\r\n      </Box>\r\n      <OrderTable patients={patients} />\r\n\r\n\r\n    </>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport { ColorPaletteProp } from \"@mui/joy/styles\";\r\nimport Box from \"@mui/joy/Box\";\r\nimport Avatar from \"@mui/joy/Avatar\";\r\nimport Chip from \"@mui/joy/Chip\";\r\nimport Link from \"@mui/joy/Link\";\r\nimport Divider from \"@mui/joy/Divider\";\r\nimport IconButton from \"@mui/joy/IconButton\";\r\nimport Typography from \"@mui/joy/Typography\";\r\nimport List from \"@mui/joy/List\";\r\nimport ListItem from \"@mui/joy/ListItem\";\r\nimport ListItemContent from \"@mui/joy/ListItemContent\";\r\nimport ListItemDecorator from \"@mui/joy/ListItemDecorator\";\r\nimport ListDivider from \"@mui/joy/ListDivider\";\r\nimport Menu from \"@mui/joy/Menu\";\r\nimport MenuButton from \"@mui/joy/MenuButton\";\r\nimport MenuItem from \"@mui/joy/MenuItem\";\r\nimport Dropdown from \"@mui/joy/Dropdown\";\r\n// icons\r\nimport MoreHorizRoundedIcon from \"@mui/icons-material/MoreHorizRounded\";\r\nimport CheckRoundedIcon from \"@mui/icons-material/CheckRounded\";\r\nimport BlockIcon from \"@mui/icons-material/Block\";\r\nimport AutorenewRoundedIcon from \"@mui/icons-material/AutorenewRounded\";\r\nimport KeyboardArrowRightIcon from \"@mui/icons-material/KeyboardArrowRight\";\r\nimport KeyboardArrowLeftIcon from \"@mui/icons-material/KeyboardArrowLeft\";\r\n\r\nconst listItems = [\r\n  {\r\n    id: \"INV-1234\",\r\n    date: \"Feb 3, 2023\",\r\n    status: \"Refunded\",\r\n    customer: {\r\n      initial: \"O\",\r\n      name: \"Olivia Ryhe\",\r\n      email: \"olivia@email.com\",\r\n    },\r\n  },\r\n  {\r\n    id: \"INV-1233\",\r\n    date: \"Feb 3, 2023\",\r\n    status: \"Paid\",\r\n    customer: {\r\n      initial: \"S\",\r\n      name: \"Steve Hampton\",\r\n      email: \"steve.hamp@email.com\",\r\n    },\r\n  },\r\n  {\r\n    id: \"INV-1232\",\r\n    date: \"Feb 3, 2023\",\r\n    status: \"Refunded\",\r\n    customer: {\r\n      initial: \"C\",\r\n      name: \"Ciaran Murray\",\r\n      email: \"ciaran.murray@email.com\",\r\n    },\r\n  },\r\n  {\r\n    id: \"INV-1231\",\r\n    date: \"Feb 3, 2023\",\r\n    status: \"Refunded\",\r\n    customer: {\r\n      initial: \"M\",\r\n      name: \"Maria Macdonald\",\r\n      email: \"maria.mc@email.com\",\r\n    },\r\n  },\r\n  {\r\n    id: \"INV-1230\",\r\n    date: \"Feb 3, 2023\",\r\n    status: \"Cancelled\",\r\n    customer: {\r\n      initial: \"C\",\r\n      name: \"Charles Fulton\",\r\n      email: \"fulton@email.com\",\r\n    },\r\n  },\r\n  {\r\n    id: \"INV-1229\",\r\n    date: \"Feb 3, 2023\",\r\n    status: \"Cancelled\",\r\n    customer: {\r\n      initial: \"J\",\r\n      name: \"Jay Hooper\",\r\n      email: \"hooper@email.com\",\r\n    },\r\n  },\r\n];\r\n\r\nfunction RowMenu() {\r\n  return (\r\n    <Dropdown>\r\n      <MenuButton\r\n        slots={{ root: IconButton }}\r\n        slotProps={{ root: { variant: \"plain\", color: \"neutral\", size: \"sm\" } }}\r\n      >\r\n        <MoreHorizRoundedIcon />\r\n      </MenuButton>\r\n      <Menu size=\"sm\" sx={{ minWidth: 140 }}>\r\n        <MenuItem>Edit</MenuItem>\r\n        <MenuItem>Rename</MenuItem>\r\n        <MenuItem>Move</MenuItem>\r\n        <Divider />\r\n        <MenuItem color=\"danger\">Delete</MenuItem>\r\n      </Menu>\r\n    </Dropdown>\r\n  );\r\n}\r\n\r\nexport default function OrderList() {\r\n  return (\r\n    <Box sx={{ display: { xs: \"block\", sm: \"none\" } }}>\r\n      {listItems.map((listItem) => (\r\n        <List\r\n          key={listItem.id}\r\n          size=\"sm\"\r\n          sx={{\r\n            \"--ListItem-paddingX\": 0,\r\n          }}\r\n        >\r\n          <ListItem\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"start\",\r\n            }}\r\n          >\r\n            <ListItemContent\r\n              sx={{ display: \"flex\", gap: 2, alignItems: \"start\" }}\r\n            >\r\n              <ListItemDecorator>\r\n                <Avatar size=\"sm\">{listItem.customer.initial}</Avatar>\r\n              </ListItemDecorator>\r\n              <div>\r\n                <Typography fontWeight={600} gutterBottom>\r\n                  {listItem.customer.name}\r\n                </Typography>\r\n                <Typography level=\"body-xs\" gutterBottom>\r\n                  {listItem.customer.email}\r\n                </Typography>\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"space-between\",\r\n                    gap: 0.5,\r\n                    mb: 1,\r\n                  }}\r\n                >\r\n                  <Typography level=\"body-xs\">{listItem.date}</Typography>\r\n                  <Typography level=\"body-xs\">&bull;</Typography>\r\n                  <Typography level=\"body-xs\">{listItem.id}</Typography>\r\n                </Box>\r\n                <Box\r\n                  sx={{ display: \"flex\", alignItems: \"center\", gap: 1, mb: 1 }}\r\n                >\r\n                  <Link level=\"body-sm\" component=\"button\">\r\n                    Download\r\n                  </Link>\r\n                  <RowMenu />\r\n                </Box>\r\n              </div>\r\n            </ListItemContent>\r\n            <Chip\r\n              variant=\"soft\"\r\n              size=\"sm\"\r\n              startDecorator={\r\n                {\r\n                  Paid: <CheckRoundedIcon />,\r\n                  Refunded: <AutorenewRoundedIcon />,\r\n                  Cancelled: <BlockIcon />,\r\n                }[listItem.status]\r\n              }\r\n              color={\r\n                {\r\n                  Paid: \"success\",\r\n                  Refunded: \"neutral\",\r\n                  Cancelled: \"danger\",\r\n                }[listItem.status] as ColorPaletteProp\r\n              }\r\n            >\r\n              {listItem.status}\r\n            </Chip>\r\n          </ListItem>\r\n          <ListDivider />\r\n        </List>\r\n      ))}\r\n      <Box\r\n        className=\"Pagination-mobile\"\r\n        sx={{\r\n          display: { xs: \"flex\", md: \"none\" },\r\n          alignItems: \"center\",\r\n          py: 2,\r\n        }}\r\n      >\r\n        <IconButton\r\n          aria-label=\"previous page\"\r\n          variant=\"outlined\"\r\n          color=\"neutral\"\r\n          size=\"sm\"\r\n        >\r\n          <KeyboardArrowLeftIcon />\r\n        </IconButton>\r\n        <Typography level=\"body-sm\" mx=\"auto\">\r\n          Page 1 of 10\r\n        </Typography>\r\n        <IconButton\r\n          aria-label=\"next page\"\r\n          variant=\"outlined\"\r\n          color=\"neutral\"\r\n          size=\"sm\"\r\n        >\r\n          <KeyboardArrowRightIcon />\r\n        </IconButton>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Card, Chip, List, ListItem, Stack, Typography } from '@mui/joy';\r\nimport React, { useMemo } from 'react';\r\nimport { format, formatDuration, intervalToDuration } from 'date-fns'\r\nimport { Vaccines } from '@mui/icons-material';\r\nimport { ProceduresRecord, ScheduleItemsRecord } from '../../pocketbase-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\ntype Props = {\r\n  item: any\r\n}\r\nconst ScheduledItem = ({ item = [] }: Props) => {\r\n\r\n  // x hour y mins using start and end and date-fns\r\n  const durationFormatted = useMemo(() => {\r\n    if (!item.start || !item.end) {\r\n      return ''\r\n    }\r\n    const duration = intervalToDuration({\r\n      start: new Date(item.start),\r\n      end: new Date(item.end),\r\n    })\r\n\r\n    return formatDuration(duration, { format: ['hours', 'minutes'] })\r\n\r\n\r\n  }, [item])\r\n\r\n  const caseDetails = item?.expand?.case;\r\n\r\n\r\n  return (<Link to={`/cases/details/${caseDetails?.id}`} style={{\r\n    textDecoration: 'none',\r\n    color: 'inherit'\r\n  }}>\r\n    <Card>\r\n\r\n\r\n      <Stack direction='row' gap={1} justifyContent=\"space-between\" >\r\n        <Box>\r\n          <Typography level='h4'>\r\n            {caseDetails?.first_name} {caseDetails?.last_name}\r\n          </Typography>\r\n\r\n          <Box sx={{ display: 'flex', gap: 1 }} >\r\n            <Typography level='body-sm'>\r\n              {caseDetails.email}\r\n            </Typography>\r\n            <Typography level='body-sm'>\r\n              {caseDetails.phone}\r\n            </Typography>\r\n          </Box>\r\n\r\n\r\n        </Box>\r\n        <Box sx={{ textAlign: 'right' }}>\r\n          <Typography level=\"body-sm\">\r\n            {format(new Date(item.start), 'h:mm a')} - {format(new Date(item.end), 'h:mm a')}\r\n          </Typography>\r\n\r\n          {/* duration */}\r\n          <Typography level=\"body-sm\">\r\n            {durationFormatted}\r\n          </Typography>\r\n\r\n        </Box>\r\n      </Stack>\r\n\r\n\r\n      {/* Procedure details with icons */}\r\n\r\n      <Box>\r\n        <Typography level=\"body-md\">\r\n          {item.procedures.length} procedures\r\n        </Typography>\r\n\r\n        <>\r\n          {item.procedures.map((procedure: ProceduresRecord) => (\r\n            <Typography level='body-sm'>{procedure.name} {procedure.laterality} {procedure.site} {procedure.cpt_code} </Typography>\r\n          ))}\r\n        </>\r\n      </Box>\r\n\r\n\r\n\r\n      <Stack direction='row' gap={1} justifyContent=\"space-between\" >\r\n        <Box>\r\n          <Typography level='body-sm' sx={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            gap: 1,\r\n          }}>\r\n            <Vaccines /> Anesthesia: {item.anesthesia_type} {item.anesthesia_position}\r\n          </Typography>\r\n\r\n        </Box>\r\n        <Box>\r\n          <Chip color=\"primary\">\r\n            {item.specialty}\r\n          </Chip>\r\n        </Box>\r\n      </Stack>\r\n\r\n\r\n\r\n    </Card></Link>\r\n  );\r\n};\r\n\r\nexport default ScheduledItem;\r\n","import { Box, Card, Chip, List, ListItem, Stack, Typography } from '@mui/joy';\r\nimport React, { useMemo } from 'react';\r\nimport { format, formatDuration, intervalToDuration } from 'date-fns'\r\nimport { Vaccines } from '@mui/icons-material';\r\nimport { ProceduresRecord, ScheduleItemsRecord } from '../../pocketbase-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\ntype Props = {\r\n    item: any\r\n}\r\nconst AdminItem = ({ item = [] }: Props) => {\r\n\r\n    // x hour y mins using start and end and date-fns\r\n\r\n\r\n    const caseDetails = item.expand.case\r\n\r\n\r\n    return (<Link to={`/cases/details/${caseDetails?.id}`} style={{\r\n        textDecoration: 'none',\r\n        color: 'inherit'\r\n    }}>\r\n        <Card>\r\n\r\n\r\n            <Stack direction='row' gap={1} justifyContent=\"space-between\" >\r\n                <Box>\r\n                    <Typography level='h4'>\r\n                        {caseDetails?.first_name} {caseDetails?.last_name}\r\n                    </Typography>\r\n\r\n                    <Box sx={{ display: 'flex', gap: 1 }}>\r\n                        <Typography level=\"body-sm\">SSN: {caseDetails.ssn}</Typography>\r\n                    </Box>\r\n\r\n                    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\r\n                        <Typography level=\"body-sm\">Assigned At: {format(new Date(item.created), 'yyyy-MM-dd HH:mm:ss')}</Typography>\r\n                        <Typography level=\"body-sm\">Task Note: {item.meta.note}</Typography>\r\n                        {/* Add more task details as needed */}\r\n                    </Box>\r\n\r\n                </Box>\r\n\r\n            </Stack>\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </Card></Link>\r\n    );\r\n};\r\n\r\nexport default AdminItem;\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport axios from \"axios\";\r\nimport OrderTable from \"../cases/CasesTable\";\r\nimport OrderList from \"../../components/OrderList\";\r\nimport { Box, Button, Stack, Typography } from \"@mui/joy\";\r\nimport DownloadRoundedIcon from \"@mui/icons-material/DownloadRounded\";\r\nimport { downloadCSV } from \"../../lib/utils\";\r\nimport AssignedAppointmentsTable from \"./AssignedAppointmentsTable\";\r\nimport { Close, DisabledByDefault } from \"@mui/icons-material\";\r\nimport { ListResult, RecordModel } from \"pocketbase\";\r\nimport { endOfWeek, startOfWeek } from \"date-fns\";\r\nimport { pb } from \"../../services/pocketbase\";\r\nimport { CaseActivityItemResponse, CasesResponse, ScheduleItemsResponse } from \"../../pocketbase-types\";\r\nimport ScheduledItem from \"./AssignedAppointmentsTable\";\r\nimport AdminItem from \"./AdminItem\";\r\n\r\nexport default function AssignedAppointments() {\r\n\r\n\r\n  const [result, setResult] = React.useState<ListResult<ScheduleItemsResponse>>()\r\n  const [activityItems, setActivityItems] = React.useState<any>()\r\n  const [isSurgeon, setIsSurgeon] = React.useState(false);\r\n\r\n  const [range, setRange] = React.useState({\r\n    start: startOfWeek(new Date()).toISOString(),\r\n    end: endOfWeek(new Date()).toISOString(),\r\n  })\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    // find schedule items for this user\r\n    if (!pb.authStore.model) {\r\n      return\r\n    }\r\n    if (pb.authStore.model?.role === 'Surgeon') {\r\n      setIsSurgeon(true)\r\n      pb.collection('schedule_items').getList(1, 50, {\r\n        filter: `user.id = \"${pb.authStore.model?.id}\" && type = \"surgery\"`,\r\n        expand: `case,procedures`\r\n      })\r\n        .then((items) => {\r\n          setResult(items)\r\n        })\r\n        .catch((error) => {\r\n          console.error(error)\r\n        })\r\n    }\r\n    else {\r\n      pb.collection('case_activity_item').getFullList({\r\n        filter: `assigned_to = \"${pb.authStore.model?.id}\" `,\r\n        expand: `case`\r\n\r\n      })\r\n        .then((items) => {\r\n\r\n          setActivityItems(items)\r\n\r\n        })\r\n        .catch((error) => {\r\n          console.error(error)\r\n        })\r\n\r\n\r\n    }\r\n  }, [])\r\n\r\n\r\n  const scheduledItems = useMemo(() => {\r\n    if (!result) {\r\n      return []\r\n    }\r\n    return Array.from(result.items)\r\n\r\n  }, [result])\r\n\r\n  return (\r\n    <>\r\n      <Stack\r\n        sx={{\r\n\r\n\r\n          gap: 2,\r\n          maxWidth: 600,\r\n          // mx: 'auto',\r\n          alignItems: { xs: \"stretch\", sm: \"stretch\" },\r\n        }}\r\n      >\r\n        <Stack direction='row' gap={1} justifyContent=\"space-between\" >\r\n          <Typography level=\"h2\">Assigned To You</Typography>\r\n\r\n        </Stack>\r\n\r\n        {isSurgeon ?\r\n          scheduledItems.map((item) => (\r\n            <ScheduledItem item={item} />\r\n          )) :\r\n          activityItems && activityItems.map((item: any) => (\r\n            <AdminItem item={item} />\r\n          ))\r\n        }\r\n        <OrderList />\r\n      </Stack >\r\n    </>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Autocomplete from \"@mui/joy/Autocomplete\";\r\nimport AutocompleteOption from \"@mui/joy/AutocompleteOption\";\r\nimport AspectRatio from \"@mui/joy/AspectRatio\";\r\nimport FormControl, { FormControlProps } from \"@mui/joy/FormControl\";\r\nimport FormLabel from \"@mui/joy/FormLabel\";\r\nimport ListItemDecorator from \"@mui/joy/ListItemDecorator\";\r\nimport Typography from \"@mui/joy/Typography\";\r\n\r\nexport default function CountrySelector({ sx, ...props }: FormControlProps) {\r\n  return (\r\n    <FormControl\r\n      {...props}\r\n      sx={[{ display: { sm: \"contents\" } }, ...(Array.isArray(sx) ? sx : [sx])]}\r\n    >\r\n      <FormLabel>Country</FormLabel>\r\n      <Autocomplete\r\n        size=\"sm\"\r\n        autoHighlight\r\n        isOptionEqualToValue={(option, value) => option.code === value.code}\r\n        defaultValue={{ code: \"TH\", label: \"Thailand\", phone: \"66\" }}\r\n        options={countries}\r\n        renderOption={(optionProps, option) => (\r\n          <AutocompleteOption {...optionProps}>\r\n            <ListItemDecorator>\r\n              <AspectRatio ratio=\"1\" sx={{ minWidth: 20, borderRadius: \"50%\" }}>\r\n                <img\r\n                  loading=\"lazy\"\r\n                  width=\"20\"\r\n                  srcSet={`https://flagcdn.com/w40/${option.code.toLowerCase()}.png 2x`}\r\n                  src={`https://flagcdn.com/w20/${option.code.toLowerCase()}.png`}\r\n                  alt=\"\"\r\n                />\r\n              </AspectRatio>\r\n            </ListItemDecorator>\r\n            {option.label}\r\n            <Typography component=\"span\" textColor=\"text.tertiary\" ml={0.5}>\r\n              (+{option.phone})\r\n            </Typography>\r\n          </AutocompleteOption>\r\n        )}\r\n        slotProps={{\r\n          input: {\r\n            autoComplete: \"new-password\", // disable autocomplete and autofill\r\n          },\r\n        }}\r\n      />\r\n    </FormControl>\r\n  );\r\n}\r\n\r\ninterface CountryType {\r\n  code: string;\r\n  label: string;\r\n  phone: string;\r\n  suggested?: boolean;\r\n}\r\n\r\n// From https://bitbucket.org/atlassian/atlaskit-mk-2/raw/4ad0e56649c3e6c973e226b7efaeb28cb240ccb0/packages/core/select/src/data/countries.js\r\nconst countries: readonly CountryType[] = [\r\n  { code: \"AD\", label: \"Andorra\", phone: \"376\" },\r\n  {\r\n    code: \"AE\",\r\n    label: \"United Arab Emirates\",\r\n    phone: \"971\",\r\n  },\r\n  { code: \"AF\", label: \"Afghanistan\", phone: \"93\" },\r\n  {\r\n    code: \"AG\",\r\n    label: \"Antigua and Barbuda\",\r\n    phone: \"1-268\",\r\n  },\r\n  { code: \"AI\", label: \"Anguilla\", phone: \"1-264\" },\r\n  { code: \"AL\", label: \"Albania\", phone: \"355\" },\r\n  { code: \"AM\", label: \"Armenia\", phone: \"374\" },\r\n  { code: \"AO\", label: \"Angola\", phone: \"244\" },\r\n  { code: \"AQ\", label: \"Antarctica\", phone: \"672\" },\r\n  { code: \"AR\", label: \"Argentina\", phone: \"54\" },\r\n  { code: \"AS\", label: \"American Samoa\", phone: \"1-684\" },\r\n  { code: \"AT\", label: \"Austria\", phone: \"43\" },\r\n  {\r\n    code: \"AU\",\r\n    label: \"Australia\",\r\n    phone: \"61\",\r\n    suggested: true,\r\n  },\r\n  { code: \"AW\", label: \"Aruba\", phone: \"297\" },\r\n  { code: \"AX\", label: \"Alland Islands\", phone: \"358\" },\r\n  { code: \"AZ\", label: \"Azerbaijan\", phone: \"994\" },\r\n  {\r\n    code: \"BA\",\r\n    label: \"Bosnia and Herzegovina\",\r\n    phone: \"387\",\r\n  },\r\n  { code: \"BB\", label: \"Barbados\", phone: \"1-246\" },\r\n  { code: \"BD\", label: \"Bangladesh\", phone: \"880\" },\r\n  { code: \"BE\", label: \"Belgium\", phone: \"32\" },\r\n  { code: \"BF\", label: \"Burkina Faso\", phone: \"226\" },\r\n  { code: \"BG\", label: \"Bulgaria\", phone: \"359\" },\r\n  { code: \"BH\", label: \"Bahrain\", phone: \"973\" },\r\n  { code: \"BI\", label: \"Burundi\", phone: \"257\" },\r\n  { code: \"BJ\", label: \"Benin\", phone: \"229\" },\r\n  { code: \"BL\", label: \"Saint Barthelemy\", phone: \"590\" },\r\n  { code: \"BM\", label: \"Bermuda\", phone: \"1-441\" },\r\n  { code: \"BN\", label: \"Brunei Darussalam\", phone: \"673\" },\r\n  { code: \"BO\", label: \"Bolivia\", phone: \"591\" },\r\n  { code: \"BR\", label: \"Brazil\", phone: \"55\" },\r\n  { code: \"BS\", label: \"Bahamas\", phone: \"1-242\" },\r\n  { code: \"BT\", label: \"Bhutan\", phone: \"975\" },\r\n  { code: \"BV\", label: \"Bouvet Island\", phone: \"47\" },\r\n  { code: \"BW\", label: \"Botswana\", phone: \"267\" },\r\n  { code: \"BY\", label: \"Belarus\", phone: \"375\" },\r\n  { code: \"BZ\", label: \"Belize\", phone: \"501\" },\r\n  {\r\n    code: \"CA\",\r\n    label: \"Canada\",\r\n    phone: \"1\",\r\n    suggested: true,\r\n  },\r\n  {\r\n    code: \"CC\",\r\n    label: \"Cocos (Keeling) Islands\",\r\n    phone: \"61\",\r\n  },\r\n  {\r\n    code: \"CD\",\r\n    label: \"Congo, Democratic Republic of the\",\r\n    phone: \"243\",\r\n  },\r\n  {\r\n    code: \"CF\",\r\n    label: \"Central African Republic\",\r\n    phone: \"236\",\r\n  },\r\n  {\r\n    code: \"CG\",\r\n    label: \"Congo, Republic of the\",\r\n    phone: \"242\",\r\n  },\r\n  { code: \"CH\", label: \"Switzerland\", phone: \"41\" },\r\n  { code: \"CI\", label: \"Cote d'Ivoire\", phone: \"225\" },\r\n  { code: \"CK\", label: \"Cook Islands\", phone: \"682\" },\r\n  { code: \"CL\", label: \"Chile\", phone: \"56\" },\r\n  { code: \"CM\", label: \"Cameroon\", phone: \"237\" },\r\n  { code: \"CN\", label: \"China\", phone: \"86\" },\r\n  { code: \"CO\", label: \"Colombia\", phone: \"57\" },\r\n  { code: \"CR\", label: \"Costa Rica\", phone: \"506\" },\r\n  { code: \"CU\", label: \"Cuba\", phone: \"53\" },\r\n  { code: \"CV\", label: \"Cape Verde\", phone: \"238\" },\r\n  { code: \"CW\", label: \"Curacao\", phone: \"599\" },\r\n  { code: \"CX\", label: \"Christmas Island\", phone: \"61\" },\r\n  { code: \"CY\", label: \"Cyprus\", phone: \"357\" },\r\n  { code: \"CZ\", label: \"Czech Republic\", phone: \"420\" },\r\n  {\r\n    code: \"DE\",\r\n    label: \"Germany\",\r\n    phone: \"49\",\r\n    suggested: true,\r\n  },\r\n  { code: \"DJ\", label: \"Djibouti\", phone: \"253\" },\r\n  { code: \"DK\", label: \"Denmark\", phone: \"45\" },\r\n  { code: \"DM\", label: \"Dominica\", phone: \"1-767\" },\r\n  {\r\n    code: \"DO\",\r\n    label: \"Dominican Republic\",\r\n    phone: \"1-809\",\r\n  },\r\n  { code: \"DZ\", label: \"Algeria\", phone: \"213\" },\r\n  { code: \"EC\", label: \"Ecuador\", phone: \"593\" },\r\n  { code: \"EE\", label: \"Estonia\", phone: \"372\" },\r\n  { code: \"EG\", label: \"Egypt\", phone: \"20\" },\r\n  { code: \"EH\", label: \"Western Sahara\", phone: \"212\" },\r\n  { code: \"ER\", label: \"Eritrea\", phone: \"291\" },\r\n  { code: \"ES\", label: \"Spain\", phone: \"34\" },\r\n  { code: \"ET\", label: \"Ethiopia\", phone: \"251\" },\r\n  { code: \"FI\", label: \"Finland\", phone: \"358\" },\r\n  { code: \"FJ\", label: \"Fiji\", phone: \"679\" },\r\n  {\r\n    code: \"FK\",\r\n    label: \"Falkland Islands (Malvinas)\",\r\n    phone: \"500\",\r\n  },\r\n  {\r\n    code: \"FM\",\r\n    label: \"Micronesia, Federated States of\",\r\n    phone: \"691\",\r\n  },\r\n  { code: \"FO\", label: \"Faroe Islands\", phone: \"298\" },\r\n  {\r\n    code: \"FR\",\r\n    label: \"France\",\r\n    phone: \"33\",\r\n    suggested: true,\r\n  },\r\n  { code: \"GA\", label: \"Gabon\", phone: \"241\" },\r\n  { code: \"GB\", label: \"United Kingdom\", phone: \"44\" },\r\n  { code: \"GD\", label: \"Grenada\", phone: \"1-473\" },\r\n  { code: \"GE\", label: \"Georgia\", phone: \"995\" },\r\n  { code: \"GF\", label: \"French Guiana\", phone: \"594\" },\r\n  { code: \"GG\", label: \"Guernsey\", phone: \"44\" },\r\n  { code: \"GH\", label: \"Ghana\", phone: \"233\" },\r\n  { code: \"GI\", label: \"Gibraltar\", phone: \"350\" },\r\n  { code: \"GL\", label: \"Greenland\", phone: \"299\" },\r\n  { code: \"GM\", label: \"Gambia\", phone: \"220\" },\r\n  { code: \"GN\", label: \"Guinea\", phone: \"224\" },\r\n  { code: \"GP\", label: \"Guadeloupe\", phone: \"590\" },\r\n  { code: \"GQ\", label: \"Equatorial Guinea\", phone: \"240\" },\r\n  { code: \"GR\", label: \"Greece\", phone: \"30\" },\r\n  {\r\n    code: \"GS\",\r\n    label: \"South Georgia and the South Sandwich Islands\",\r\n    phone: \"500\",\r\n  },\r\n  { code: \"GT\", label: \"Guatemala\", phone: \"502\" },\r\n  { code: \"GU\", label: \"Guam\", phone: \"1-671\" },\r\n  { code: \"GW\", label: \"Guinea-Bissau\", phone: \"245\" },\r\n  { code: \"GY\", label: \"Guyana\", phone: \"592\" },\r\n  { code: \"HK\", label: \"Hong Kong\", phone: \"852\" },\r\n  {\r\n    code: \"HM\",\r\n    label: \"Heard Island and McDonald Islands\",\r\n    phone: \"672\",\r\n  },\r\n  { code: \"HN\", label: \"Honduras\", phone: \"504\" },\r\n  { code: \"HR\", label: \"Croatia\", phone: \"385\" },\r\n  { code: \"HT\", label: \"Haiti\", phone: \"509\" },\r\n  { code: \"HU\", label: \"Hungary\", phone: \"36\" },\r\n  { code: \"ID\", label: \"Indonesia\", phone: \"62\" },\r\n  { code: \"IE\", label: \"Ireland\", phone: \"353\" },\r\n  { code: \"IL\", label: \"Israel\", phone: \"972\" },\r\n  { code: \"IM\", label: \"Isle of Man\", phone: \"44\" },\r\n  { code: \"IN\", label: \"India\", phone: \"91\" },\r\n  {\r\n    code: \"IO\",\r\n    label: \"British Indian Ocean Territory\",\r\n    phone: \"246\",\r\n  },\r\n  { code: \"IQ\", label: \"Iraq\", phone: \"964\" },\r\n  {\r\n    code: \"IR\",\r\n    label: \"Iran, Islamic Republic of\",\r\n    phone: \"98\",\r\n  },\r\n  { code: \"IS\", label: \"Iceland\", phone: \"354\" },\r\n  { code: \"IT\", label: \"Italy\", phone: \"39\" },\r\n  { code: \"JE\", label: \"Jersey\", phone: \"44\" },\r\n  { code: \"JM\", label: \"Jamaica\", phone: \"1-876\" },\r\n  { code: \"JO\", label: \"Jordan\", phone: \"962\" },\r\n  {\r\n    code: \"JP\",\r\n    label: \"Japan\",\r\n    phone: \"81\",\r\n    suggested: true,\r\n  },\r\n  { code: \"KE\", label: \"Kenya\", phone: \"254\" },\r\n  { code: \"KG\", label: \"Kyrgyzstan\", phone: \"996\" },\r\n  { code: \"KH\", label: \"Cambodia\", phone: \"855\" },\r\n  { code: \"KI\", label: \"Kiribati\", phone: \"686\" },\r\n  { code: \"KM\", label: \"Comoros\", phone: \"269\" },\r\n  {\r\n    code: \"KN\",\r\n    label: \"Saint Kitts and Nevis\",\r\n    phone: \"1-869\",\r\n  },\r\n  {\r\n    code: \"KP\",\r\n    label: \"Korea, Democratic People's Republic of\",\r\n    phone: \"850\",\r\n  },\r\n  { code: \"KR\", label: \"Korea, Republic of\", phone: \"82\" },\r\n  { code: \"KW\", label: \"Kuwait\", phone: \"965\" },\r\n  { code: \"KY\", label: \"Cayman Islands\", phone: \"1-345\" },\r\n  { code: \"KZ\", label: \"Kazakhstan\", phone: \"7\" },\r\n  {\r\n    code: \"LA\",\r\n    label: \"Lao People's Democratic Republic\",\r\n    phone: \"856\",\r\n  },\r\n  { code: \"LB\", label: \"Lebanon\", phone: \"961\" },\r\n  { code: \"LC\", label: \"Saint Lucia\", phone: \"1-758\" },\r\n  { code: \"LI\", label: \"Liechtenstein\", phone: \"423\" },\r\n  { code: \"LK\", label: \"Sri Lanka\", phone: \"94\" },\r\n  { code: \"LR\", label: \"Liberia\", phone: \"231\" },\r\n  { code: \"LS\", label: \"Lesotho\", phone: \"266\" },\r\n  { code: \"LT\", label: \"Lithuania\", phone: \"370\" },\r\n  { code: \"LU\", label: \"Luxembourg\", phone: \"352\" },\r\n  { code: \"LV\", label: \"Latvia\", phone: \"371\" },\r\n  { code: \"LY\", label: \"Libya\", phone: \"218\" },\r\n  { code: \"MA\", label: \"Morocco\", phone: \"212\" },\r\n  { code: \"MC\", label: \"Monaco\", phone: \"377\" },\r\n  {\r\n    code: \"MD\",\r\n    label: \"Moldova, Republic of\",\r\n    phone: \"373\",\r\n  },\r\n  { code: \"ME\", label: \"Montenegro\", phone: \"382\" },\r\n  {\r\n    code: \"MF\",\r\n    label: \"Saint Martin (French part)\",\r\n    phone: \"590\",\r\n  },\r\n  { code: \"MG\", label: \"Madagascar\", phone: \"261\" },\r\n  { code: \"MH\", label: \"Marshall Islands\", phone: \"692\" },\r\n  {\r\n    code: \"MK\",\r\n    label: \"Macedonia, the Former Yugoslav Republic of\",\r\n    phone: \"389\",\r\n  },\r\n  { code: \"ML\", label: \"Mali\", phone: \"223\" },\r\n  { code: \"MM\", label: \"Myanmar\", phone: \"95\" },\r\n  { code: \"MN\", label: \"Mongolia\", phone: \"976\" },\r\n  { code: \"MO\", label: \"Macao\", phone: \"853\" },\r\n  {\r\n    code: \"MP\",\r\n    label: \"Northern Mariana Islands\",\r\n    phone: \"1-670\",\r\n  },\r\n  { code: \"MQ\", label: \"Martinique\", phone: \"596\" },\r\n  { code: \"MR\", label: \"Mauritania\", phone: \"222\" },\r\n  { code: \"MS\", label: \"Montserrat\", phone: \"1-664\" },\r\n  { code: \"MT\", label: \"Malta\", phone: \"356\" },\r\n  { code: \"MU\", label: \"Mauritius\", phone: \"230\" },\r\n  { code: \"MV\", label: \"Maldives\", phone: \"960\" },\r\n  { code: \"MW\", label: \"Malawi\", phone: \"265\" },\r\n  { code: \"MX\", label: \"Mexico\", phone: \"52\" },\r\n  { code: \"MY\", label: \"Malaysia\", phone: \"60\" },\r\n  { code: \"MZ\", label: \"Mozambique\", phone: \"258\" },\r\n  { code: \"NA\", label: \"Namibia\", phone: \"264\" },\r\n  { code: \"NC\", label: \"New Caledonia\", phone: \"687\" },\r\n  { code: \"NE\", label: \"Niger\", phone: \"227\" },\r\n  { code: \"NF\", label: \"Norfolk Island\", phone: \"672\" },\r\n  { code: \"NG\", label: \"Nigeria\", phone: \"234\" },\r\n  { code: \"NI\", label: \"Nicaragua\", phone: \"505\" },\r\n  { code: \"NL\", label: \"Netherlands\", phone: \"31\" },\r\n  { code: \"NO\", label: \"Norway\", phone: \"47\" },\r\n  { code: \"NP\", label: \"Nepal\", phone: \"977\" },\r\n  { code: \"NR\", label: \"Nauru\", phone: \"674\" },\r\n  { code: \"NU\", label: \"Niue\", phone: \"683\" },\r\n  { code: \"NZ\", label: \"New Zealand\", phone: \"64\" },\r\n  { code: \"OM\", label: \"Oman\", phone: \"968\" },\r\n  { code: \"PA\", label: \"Panama\", phone: \"507\" },\r\n  { code: \"PE\", label: \"Peru\", phone: \"51\" },\r\n  { code: \"PF\", label: \"French Polynesia\", phone: \"689\" },\r\n  { code: \"PG\", label: \"Papua New Guinea\", phone: \"675\" },\r\n  { code: \"PH\", label: \"Philippines\", phone: \"63\" },\r\n  { code: \"PK\", label: \"Pakistan\", phone: \"92\" },\r\n  { code: \"PL\", label: \"Poland\", phone: \"48\" },\r\n  {\r\n    code: \"PM\",\r\n    label: \"Saint Pierre and Miquelon\",\r\n    phone: \"508\",\r\n  },\r\n  { code: \"PN\", label: \"Pitcairn\", phone: \"870\" },\r\n  { code: \"PR\", label: \"Puerto Rico\", phone: \"1\" },\r\n  {\r\n    code: \"PS\",\r\n    label: \"Palestine, State of\",\r\n    phone: \"970\",\r\n  },\r\n  { code: \"PT\", label: \"Portugal\", phone: \"351\" },\r\n  { code: \"PW\", label: \"Palau\", phone: \"680\" },\r\n  { code: \"PY\", label: \"Paraguay\", phone: \"595\" },\r\n  { code: \"QA\", label: \"Qatar\", phone: \"974\" },\r\n  { code: \"RE\", label: \"Reunion\", phone: \"262\" },\r\n  { code: \"RO\", label: \"Romania\", phone: \"40\" },\r\n  { code: \"RS\", label: \"Serbia\", phone: \"381\" },\r\n  { code: \"RU\", label: \"Russian Federation\", phone: \"7\" },\r\n  { code: \"RW\", label: \"Rwanda\", phone: \"250\" },\r\n  { code: \"SA\", label: \"Saudi Arabia\", phone: \"966\" },\r\n  { code: \"SB\", label: \"Solomon Islands\", phone: \"677\" },\r\n  { code: \"SC\", label: \"Seychelles\", phone: \"248\" },\r\n  { code: \"SD\", label: \"Sudan\", phone: \"249\" },\r\n  { code: \"SE\", label: \"Sweden\", phone: \"46\" },\r\n  { code: \"SG\", label: \"Singapore\", phone: \"65\" },\r\n  { code: \"SH\", label: \"Saint Helena\", phone: \"290\" },\r\n  { code: \"SI\", label: \"Slovenia\", phone: \"386\" },\r\n  {\r\n    code: \"SJ\",\r\n    label: \"Svalbard and Jan Mayen\",\r\n    phone: \"47\",\r\n  },\r\n  { code: \"SK\", label: \"Slovakia\", phone: \"421\" },\r\n  { code: \"SL\", label: \"Sierra Leone\", phone: \"232\" },\r\n  { code: \"SM\", label: \"San Marino\", phone: \"378\" },\r\n  { code: \"SN\", label: \"Senegal\", phone: \"221\" },\r\n  { code: \"SO\", label: \"Somalia\", phone: \"252\" },\r\n  { code: \"SR\", label: \"Suriname\", phone: \"597\" },\r\n  { code: \"SS\", label: \"South Sudan\", phone: \"211\" },\r\n  {\r\n    code: \"ST\",\r\n    label: \"Sao Tome and Principe\",\r\n    phone: \"239\",\r\n  },\r\n  { code: \"SV\", label: \"El Salvador\", phone: \"503\" },\r\n  {\r\n    code: \"SX\",\r\n    label: \"Sint Maarten (Dutch part)\",\r\n    phone: \"1-721\",\r\n  },\r\n  {\r\n    code: \"SY\",\r\n    label: \"Syrian Arab Republic\",\r\n    phone: \"963\",\r\n  },\r\n  { code: \"SZ\", label: \"Swaziland\", phone: \"268\" },\r\n  {\r\n    code: \"TC\",\r\n    label: \"Turks and Caicos Islands\",\r\n    phone: \"1-649\",\r\n  },\r\n  { code: \"TD\", label: \"Chad\", phone: \"235\" },\r\n  {\r\n    code: \"TF\",\r\n    label: \"French Southern Territories\",\r\n    phone: \"262\",\r\n  },\r\n  { code: \"TG\", label: \"Togo\", phone: \"228\" },\r\n  { code: \"TH\", label: \"Thailand\", phone: \"66\" },\r\n  { code: \"TJ\", label: \"Tajikistan\", phone: \"992\" },\r\n  { code: \"TK\", label: \"Tokelau\", phone: \"690\" },\r\n  { code: \"TL\", label: \"Timor-Leste\", phone: \"670\" },\r\n  { code: \"TM\", label: \"Turkmenistan\", phone: \"993\" },\r\n  { code: \"TN\", label: \"Tunisia\", phone: \"216\" },\r\n  { code: \"TO\", label: \"Tonga\", phone: \"676\" },\r\n  { code: \"TR\", label: \"Turkey\", phone: \"90\" },\r\n  {\r\n    code: \"TT\",\r\n    label: \"Trinidad and Tobago\",\r\n    phone: \"1-868\",\r\n  },\r\n  { code: \"TV\", label: \"Tuvalu\", phone: \"688\" },\r\n  {\r\n    code: \"TW\",\r\n    label: \"Taiwan\",\r\n    phone: \"886\",\r\n  },\r\n  {\r\n    code: \"TZ\",\r\n    label: \"United Republic of Tanzania\",\r\n    phone: \"255\",\r\n  },\r\n  { code: \"UA\", label: \"Ukraine\", phone: \"380\" },\r\n  { code: \"UG\", label: \"Uganda\", phone: \"256\" },\r\n  {\r\n    code: \"US\",\r\n    label: \"United States\",\r\n    phone: \"1\",\r\n    suggested: true,\r\n  },\r\n  { code: \"UY\", label: \"Uruguay\", phone: \"598\" },\r\n  { code: \"UZ\", label: \"Uzbekistan\", phone: \"998\" },\r\n  {\r\n    code: \"VA\",\r\n    label: \"Holy See (Vatican City State)\",\r\n    phone: \"379\",\r\n  },\r\n  {\r\n    code: \"VC\",\r\n    label: \"Saint Vincent and the Grenadines\",\r\n    phone: \"1-784\",\r\n  },\r\n  { code: \"VE\", label: \"Venezuela\", phone: \"58\" },\r\n  {\r\n    code: \"VG\",\r\n    label: \"British Virgin Islands\",\r\n    phone: \"1-284\",\r\n  },\r\n  {\r\n    code: \"VI\",\r\n    label: \"US Virgin Islands\",\r\n    phone: \"1-340\",\r\n  },\r\n  { code: \"VN\", label: \"Vietnam\", phone: \"84\" },\r\n  { code: \"VU\", label: \"Vanuatu\", phone: \"678\" },\r\n  { code: \"WF\", label: \"Wallis and Futuna\", phone: \"681\" },\r\n  { code: \"WS\", label: \"Samoa\", phone: \"685\" },\r\n  { code: \"XK\", label: \"Kosovo\", phone: \"383\" },\r\n  { code: \"YE\", label: \"Yemen\", phone: \"967\" },\r\n  { code: \"YT\", label: \"Mayotte\", phone: \"262\" },\r\n  { code: \"ZA\", label: \"South Africa\", phone: \"27\" },\r\n  { code: \"ZM\", label: \"Zambia\", phone: \"260\" },\r\n  { code: \"ZW\", label: \"Zimbabwe\", phone: \"263\" },\r\n];\r\n","import * as React from \"react\";\r\nimport AspectRatio from \"@mui/joy/AspectRatio\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Box from \"@mui/joy/Box\";\r\nimport Button from \"@mui/joy/Button\";\r\nimport Divider from \"@mui/joy/Divider\";\r\nimport FormControl from \"@mui/joy/FormControl\";\r\nimport FormLabel from \"@mui/joy/FormLabel\";\r\nimport FormHelperText from \"@mui/joy/FormHelperText\";\r\nimport Input from \"@mui/joy/Input\";\r\nimport IconButton from \"@mui/joy/IconButton\";\r\nimport Textarea from \"@mui/joy/Textarea\";\r\nimport Stack from \"@mui/joy/Stack\";\r\nimport Select from \"@mui/joy/Select\";\r\n// import Select, { SelectChangeEvent } from \"@mui/material/Select\";\r\nimport Option from \"@mui/joy/Option\";\r\nimport Typography from \"@mui/joy/Typography\";\r\nimport Tabs from \"@mui/joy/Tabs\";\r\nimport TabList from \"@mui/joy/TabList\";\r\nimport Tab, { tabClasses } from \"@mui/joy/Tab\";\r\nimport Breadcrumbs from \"@mui/joy/Breadcrumbs\";\r\nimport Link from \"@mui/joy/Link\";\r\nimport Card from \"@mui/joy/Card\";\r\nimport CardActions from \"@mui/joy/CardActions\";\r\nimport CardOverflow from \"@mui/joy/CardOverflow\";\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\nimport HomeRoundedIcon from \"@mui/icons-material/HomeRounded\";\r\nimport ChevronRightRoundedIcon from \"@mui/icons-material/ChevronRightRounded\";\r\nimport EmailRoundedIcon from \"@mui/icons-material/EmailRounded\";\r\nimport AccessTimeFilledRoundedIcon from \"@mui/icons-material/AccessTimeFilledRounded\";\r\nimport VideocamRoundedIcon from \"@mui/icons-material/VideocamRounded\";\r\nimport InsertDriveFileRoundedIcon from \"@mui/icons-material/InsertDriveFileRounded\";\r\nimport EditRoundedIcon from \"@mui/icons-material/EditRounded\";\r\n\r\nimport DropZone from \"../../../components/DropZone\";\r\nimport FileUpload from \"../../../components/FileUpload\";\r\nimport CountrySelector from \"../../../components/CountrySelector\";\r\nimport EditorToolbar from \"../../../components/EditorToolbar\";\r\nimport LocalPhoneIcon from \"@mui/icons-material/LocalPhone\";\r\nimport Grid3x3Icon from \"@mui/icons-material/Grid3x3\";\r\nimport { pb } from \"../../../services/pocketbase\";\r\nimport Checkbox from \"@mui/joy/Checkbox\";\r\nimport BusinessIcon from \"@mui/icons-material/Business\";\r\nimport LocalHospitalIcon from \"@mui/icons-material/LocalHospital\";\r\nimport ArticleIcon from '@mui/icons-material/Article';\r\nimport DefaultPic from '../../../assets/default-pic.jpg'\r\nimport { useState } from \"react\";\r\n\r\ninterface CaseData {\r\n  first_name: string;\r\n  last_name: string;\r\n  // Add other properties as needed\r\n}\r\n\r\nexport default function Caseview() {\r\n  const params = useParams();\r\n  const caseId = params.id;\r\n  const [data, setData] = React.useState<any>({});\r\n  const [editMode, setEditMode] = React.useState(false);\r\n  const [Surgery, setSurgery] = useState(false);\r\n\r\n  React.useEffect(() => {\r\n    const fetchCaseData = async (caseId: any) => {\r\n      try {\r\n        const record = await pb.collection(\"cases\").getOne(caseId);\r\n        setData(record);\r\n      } catch (error) {\r\n        console.error(\"Error fetching case data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchCaseData(caseId);\r\n  }, [caseId]);\r\n\r\n  const handleChange = (e: any) => {\r\n    const { name, value } = e.target;\r\n    setData((prevData: any) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    console.log(data);\r\n  }, [data]);\r\n\r\n  const handleEditModeToggle = () => {\r\n    setEditMode((prevEditMode) => !prevEditMode);\r\n  };\r\n\r\n  const updateData = async (caseId: any) => {\r\n    try {\r\n      const record = await pb.collection(\"cases\").update(caseId, data);\r\n\r\n      console.log(\"Case updated successfully!\");\r\n    } catch (error) {\r\n      console.error(\"Error updating case:\", error);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e: any) => {\r\n    e.preventDefault();\r\n    console.log(data);\r\n    updateData(caseId);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        flex: 1,\r\n        width: \"100%\",\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          position: \"sticky\",\r\n          top: {\r\n            sm: -100,\r\n            md: -110,\r\n          },\r\n          bgcolor: \"background.body\",\r\n          zIndex: 9995,\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            px: {\r\n              xs: 2,\r\n              md: 6,\r\n            },\r\n          }}\r\n        >\r\n          {/* <Breadcrumbs\r\n            size=\"sm\"\r\n            aria-label=\"breadcrumbs\"\r\n            separator={<ChevronRightRoundedIcon />}\r\n            sx={{ pl: 0 }}\r\n          >\r\n            <Link\r\n              underline=\"none\"\r\n              color=\"neutral\"\r\n              href=\"#some-link\"\r\n              aria-label=\"Home\"\r\n            >\r\n              <HomeRoundedIcon />\r\n            </Link>\r\n            <Typography color=\"primary\" fontWeight={500} fontSize={12}>\r\n              view/edit\r\n            </Typography>\r\n\r\n          </Breadcrumbs> */}\r\n          <Typography\r\n            level=\"h2\"\r\n            sx={{\r\n              mt: 1,\r\n              mb: 2,\r\n            }}\r\n          >\r\n            Case Details\r\n          </Typography>\r\n        </Box>\r\n      </Box>\r\n\r\n      <Stack\r\n        spacing={4}\r\n        sx={{\r\n          display: \"flex\",\r\n          maxWidth: \"800px\",\r\n          mx: \"auto\",\r\n          px: {\r\n            xs: 2,\r\n            md: 6,\r\n          },\r\n          py: {\r\n            xs: 2,\r\n            md: 3,\r\n          },\r\n        }}\r\n      >\r\n        <Card>\r\n          <Box sx={{ mb: 1, display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <Box>\r\n              <Typography level=\"title-md\">Case Information</Typography>\r\n              <Typography level=\"body-sm\">\r\n                Enter details about the case in the fields below.\r\n              </Typography>\r\n            </Box>\r\n            <Button\r\n              size=\"sm\"\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              onClick={handleEditModeToggle}\r\n            >\r\n              {/* {editMode ? \"Switch to View Mode\" : \"Switch to Edit Mode\"} */}\r\n              {editMode ? <ArticleIcon /> : <EditRoundedIcon />}\r\n\r\n            </Button>\r\n          </Box>\r\n          <Divider />\r\n          <Stack\r\n            direction=\"row\"\r\n            spacing={3}\r\n            sx={{ display: { xs: \"none\", md: \"flex\" }, my: 1 }}\r\n          >\r\n            <Stack direction=\"column\" spacing={1}>\r\n              <AspectRatio\r\n                ratio=\"1\"\r\n                maxHeight={200}\r\n                sx={{ flex: 1, minWidth: 120, borderRadius: \"100%\" }}\r\n              >\r\n                <img\r\n                  //if data.avatar is null, use default pic\r\n                  src={DefaultPic}\r\n                  // srcSet=\"https://images.unsplash.com/photo-1535713875002-d1d0cf377fde?auto=format&fit=crop&w=286&dpr=2 2x\"\r\n                  // loading=\"lazy\"\r\n                  alt=\"\"\r\n                />\r\n              </AspectRatio>\r\n              {/* {editMode ?\r\n                <IconButton\r\n                  aria-label=\"upload new picture\"\r\n                  size=\"sm\"\r\n                  variant=\"outlined\"\r\n                  color=\"neutral\"\r\n                  sx={{\r\n                    bgcolor: \"background.body\",\r\n                    position: \"absolute\",\r\n                    zIndex: 2,\r\n                    borderRadius: \"50%\",\r\n                    left: 100,\r\n                    top: 170,\r\n                    boxShadow: \"sm\",\r\n                  }}\r\n                >\r\n                  <EditRoundedIcon />\r\n                </IconButton>\r\n                : <></>} */}\r\n            </Stack>\r\n            <Stack spacing={2} sx={{ flexGrow: 1 }}>\r\n              <Stack spacing={1}>\r\n                <FormLabel>Name</FormLabel>\r\n                <FormControl\r\n                  sx={{\r\n                    display: {\r\n                      sm: \"flex-column\",\r\n                      md: \"flex-row\",\r\n                    },\r\n                    gap: 2,\r\n                  }}\r\n                >\r\n                  <Input\r\n                    size=\"sm\"\r\n                    name=\"first_name\"\r\n                    placeholder=\"First name\"\r\n                    value={data.first_name}\r\n                    disabled={!editMode}\r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                    }}\r\n                  />\r\n                  <Input\r\n                    size=\"sm\"\r\n                    name=\"last_name\"\r\n                    disabled={!editMode}\r\n                    placeholder=\"Last name\"\r\n                    value={data.last_name}\r\n                    sx={{ flexGrow: 1 }}\r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                    }}\r\n                  />\r\n                </FormControl>\r\n              </Stack>\r\n              <Stack direction=\"row\" spacing={2}>\r\n                <FormControl>\r\n                  <FormLabel>Phone</FormLabel>\r\n                  <Input\r\n                    name=\"phone_number\"\r\n                    disabled={!editMode}\r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                    }}\r\n                    value={data.phone_number}\r\n                    startDecorator={<LocalPhoneIcon />}\r\n                    size=\"sm\"\r\n                    placeholder=\"+1234234234\"\r\n                  />\r\n                </FormControl>\r\n                <FormControl sx={{ flexGrow: 1 }}>\r\n                  <FormLabel>Email</FormLabel>\r\n                  <Input\r\n                    size=\"sm\"\r\n                    type=\"email\"\r\n                    disabled={!editMode}\r\n                    value={data.email}\r\n                    startDecorator={<EmailRoundedIcon />}\r\n                    name=\"email\"\r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                    }}\r\n                    placeholder=\"johndoe@test.com\"\r\n                    sx={{ flexGrow: 1 }}\r\n                  />\r\n                </FormControl>\r\n              </Stack>\r\n              <Stack direction=\"row\" spacing={2}>\r\n                <FormControl>\r\n                  <FormLabel>SSN</FormLabel>\r\n                  <Input\r\n                    name=\"ssn\"\r\n                    startDecorator={<Grid3x3Icon />}\r\n                    value={data.ssn}\r\n                    disabled={!editMode}\r\n                    size=\"sm\"\r\n                    placeholder=\"1234234234\"\r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                    }}\r\n                  />\r\n                </FormControl>\r\n                <FormControl sx={{ flexGrow: 1 }}>\r\n                  <FormLabel>Address</FormLabel>\r\n                  <Input\r\n                    size=\"sm\"\r\n                    type=\"email\"\r\n                    disabled={!editMode}\r\n                    startDecorator={<HomeIcon />}\r\n                    placeholder=\"St. Address, City, State, Zip Code\"\r\n                    sx={{ flexGrow: 1 }}\r\n                  />\r\n                </FormControl>\r\n              </Stack>\r\n              <Stack direction=\"row\" spacing={2}>\r\n                <FormControl>\r\n                  <FormLabel>Sex</FormLabel>\r\n                  <Select\r\n                    name=\"sex\"\r\n                    value={data.sex}\r\n                    disabled={!editMode}\r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                    }}\r\n                    placeholder=\"Male/Female\"\r\n                    required\r\n                    size=\"sm\"\r\n                    sx={{ minWidth: 200 }}\r\n                  >\r\n                    <Option value=\"male\">Male</Option>\r\n                    <Option value=\"female\">Female</Option>\r\n                    <Option value=\"other\">Other</Option>\r\n                  </Select>\r\n                </FormControl>\r\n                <FormControl sx={{ flexGrow: 1 }}>\r\n                  <FormLabel>Facility</FormLabel>\r\n                  <Input\r\n                    size=\"sm\"\r\n                    type=\"email\"\r\n                    disabled={!editMode}\r\n                    startDecorator={<BusinessIcon />}\r\n                    placeholder=\"St. Address, City, State, Zip Code\"\r\n                  />\r\n                </FormControl>\r\n              </Stack>\r\n              <Stack direction=\"row\" spacing={5}>\r\n                <FormControl size={\"md\"}>\r\n                  <FormLabel>Date of Birth</FormLabel>\r\n                  <Input\r\n                    size=\"sm\"\r\n                    type=\"date\"\r\n                    // value is coming like this \"2023-11-07 00:00:00.000Z\" how to show it\r\n\r\n\r\n                    disabled={!editMode}\r\n                    value={data.dob instanceof Date ? data.dob.toISOString().split(\"T\")[0] : \"\"}\r\n                    name=\"dob\"\r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                    }}\r\n                    slotProps={{\r\n                      input: {\r\n                        max: new Date().toISOString().split(\"T\")[0],\r\n                      },\r\n\r\n                    }}\r\n                  />\r\n                </FormControl>\r\n                {/* <FormControl>\r\n                  <FormLabel>Time</FormLabel>\r\n                  <Input disabled={!editMode} type=\"time\" size=\"sm\" />\r\n                </FormControl> */}\r\n              </Stack>\r\n              {/* <Stack direction=\"row\" spacing={5}>\r\n                <Checkbox\r\n                  label=\"Surgery required\"\r\n                  disabled={!editMode}\r\n                  variant=\"outlined\"\r\n                  size=\"sm\"\r\n                  onChange={(e) => {\r\n                    setSurgery(e.target.checked);\r\n                  }}\r\n                  sx={{ position: \"relative\", top: 30 }}\r\n                />\r\n                <FormControl>\r\n                  <FormLabel>Surgeon Assigned</FormLabel>\r\n                  <Input\r\n                    //   disabled={!Surgery}\r\n                    disabled={!editMode || !Surgery}\r\n                    size=\"sm\"\r\n                    type=\"email\"\r\n                    startDecorator={<LocalHospitalIcon />}\r\n                    placeholder=\"Dr.John Doe\"\r\n                  />\r\n                </FormControl>\r\n              </Stack> */}\r\n\r\n            </Stack>\r\n          </Stack>\r\n          <Stack\r\n            direction=\"column\"\r\n            spacing={2}\r\n            sx={{ display: { xs: \"flex\", md: \"none\" }, my: 1 }}\r\n          >\r\n            <Stack direction=\"row\" spacing={2}>\r\n              <Stack direction=\"column\" spacing={1}>\r\n                <AspectRatio\r\n                  ratio=\"1\"\r\n                  maxHeight={108}\r\n                  sx={{ flex: 1, minWidth: 108, borderRadius: \"100%\" }}\r\n                >\r\n                  <img\r\n                    src=\"https://images.unsplash.com/photo-1535713875002-d1d0cf377fde?auto=format&fit=crop&w=286\"\r\n                    srcSet=\"https://images.unsplash.com/photo-1535713875002-d1d0cf377fde?auto=format&fit=crop&w=286&dpr=2 2x\"\r\n                    loading=\"lazy\"\r\n                    alt=\"\"\r\n                  />\r\n                </AspectRatio>\r\n                <IconButton\r\n                  aria-label=\"upload new picture\"\r\n                  size=\"sm\"\r\n                  variant=\"outlined\"\r\n                  color=\"neutral\"\r\n                  sx={{\r\n                    bgcolor: \"background.body\",\r\n                    position: \"absolute\",\r\n                    zIndex: 2,\r\n                    borderRadius: \"50%\",\r\n                    left: 85,\r\n                    top: 180,\r\n                    boxShadow: \"sm\",\r\n                  }}\r\n                >\r\n                  <EditRoundedIcon />\r\n                </IconButton>\r\n              </Stack>\r\n              <Stack spacing={1} sx={{ flexGrow: 1 }}>\r\n                <FormLabel>Name</FormLabel>\r\n                <FormControl\r\n                  sx={{\r\n                    display: {\r\n                      sm: \"flex-column\",\r\n                      md: \"flex-row\",\r\n                    },\r\n                    gap: 2,\r\n                  }}\r\n                >\r\n                  <Input size=\"sm\" placeholder=\"First name\" />\r\n                  <Input size=\"sm\" placeholder=\"Last name\" />\r\n                </FormControl>\r\n              </Stack>\r\n            </Stack>\r\n            <FormControl>\r\n              <FormLabel>Role</FormLabel>\r\n              <Input size=\"sm\" defaultValue=\"UI Developer\" />\r\n            </FormControl>\r\n            <FormControl sx={{ flexGrow: 1 }}>\r\n              <FormLabel>Email</FormLabel>\r\n              <Input\r\n                size=\"sm\"\r\n                type=\"email\"\r\n                startDecorator={<EmailRoundedIcon />}\r\n                placeholder=\"email\"\r\n                defaultValue=\"siriwatk@test.com\"\r\n                sx={{ flexGrow: 1 }}\r\n              />\r\n            </FormControl>\r\n            <div>\r\n              <CountrySelector />\r\n            </div>\r\n            <div>\r\n              <FormControl sx={{ display: { sm: \"contents\" } }}>\r\n                <FormLabel>Timezone</FormLabel>\r\n                <Select\r\n                  size=\"sm\"\r\n                  startDecorator={<AccessTimeFilledRoundedIcon />}\r\n                  defaultValue=\"1\"\r\n                >\r\n                  <Option value=\"1\">\r\n                    Indochina Time (Bangkok){\" \"}\r\n                    <Typography textColor=\"text.tertiary\" ml={0.5}>\r\n                      — GMT+07:00\r\n                    </Typography>\r\n                  </Option>\r\n                  <Option value=\"2\">\r\n                    Indochina Time (Ho Chi Minh City){\" \"}\r\n                    <Typography textColor=\"text.tertiary\" ml={0.5}>\r\n                      — GMT+07:00\r\n                    </Typography>\r\n                  </Option>\r\n                </Select>\r\n              </FormControl>\r\n            </div>\r\n          </Stack>\r\n          <Box sx={{ mb: 1, mt: 3 }}>\r\n            <Typography level=\"title-md\">Procedure Description</Typography>\r\n            <Typography level=\"body-sm\">\r\n              Write description about the procedure in the field below.\r\n            </Typography>\r\n          </Box>\r\n          <Stack spacing={2} sx={{ my: 1 }}>\r\n            <Textarea\r\n              disabled={!editMode}\r\n              size=\"sm\"\r\n              minRows={4}\r\n              sx={{ mt: 1.5 }}\r\n              placeholder=\"Left 1st metatarsal- cuneiform fusion, modified McBride, Akin osteotomy, left 2nd digit hammer toe correction\"\r\n            />\r\n            <FormHelperText sx={{ mt: 0.75, fontSize: \"xs\" }}>\r\n              275 characters left\r\n            </FormHelperText>\r\n          </Stack>\r\n          <Box sx={{ mb: 1, mt: 3 }}>\r\n            <Typography level=\"title-md\">Insurance Details</Typography>\r\n            <Typography level=\"body-sm\">\r\n              Write description about the procedure in the field below.\r\n            </Typography>\r\n          </Box>\r\n          <Stack spacing={2} sx={{ my: 1 }}>\r\n            <Textarea\r\n              disabled={!editMode}\r\n              size=\"sm\"\r\n              minRows={4}\r\n              sx={{ mt: 1.5 }}\r\n              placeholder=\"Insurance company name, policy number, etc.\"\r\n            />\r\n            <FormHelperText sx={{ mt: 0.75, fontSize: \"xs\" }}>\r\n              275 characters left\r\n            </FormHelperText>\r\n          </Stack>\r\n          <CardOverflow sx={{ borderTop: \"1px solid\", borderColor: \"divider\" }}>\r\n            <CardActions sx={{ alignSelf: \"flex-end\", pt: 2 }}>\r\n              {editMode ? (\r\n                <>\r\n                  <Button size=\"sm\" variant=\"outlined\" color=\"neutral\">\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                    size=\"sm\"\r\n                    variant=\"solid\"\r\n                    onClick={handleSubmit}\r\n                  >\r\n                    Save\r\n                  </Button>\r\n                </>\r\n              ) : (\r\n                <Box sx={{ display: 'none' }}>\r\n                  {/* Hidden when not in edit mode */}\r\n                  <Button size=\"sm\" variant=\"outlined\" color=\"neutral\">\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                    size=\"sm\"\r\n                    variant=\"solid\"\r\n                  >\r\n                    Save\r\n                  </Button>\r\n                </Box>\r\n              )}\r\n            </CardActions>\r\n          </CardOverflow>\r\n        </Card>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n}","import * as React from \"react\";\r\nimport AspectRatio from \"@mui/joy/AspectRatio\";\r\nimport Box from \"@mui/joy/Box\";\r\nimport Button from \"@mui/joy/Button\";\r\nimport Divider from \"@mui/joy/Divider\";\r\nimport FormControl from \"@mui/joy/FormControl\";\r\nimport FormLabel from \"@mui/joy/FormLabel\";\r\nimport FormHelperText from \"@mui/joy/FormHelperText\";\r\nimport Input from \"@mui/joy/Input\";\r\nimport IconButton from \"@mui/joy/IconButton\";\r\nimport Textarea from \"@mui/joy/Textarea\";\r\nimport Stack from \"@mui/joy/Stack\";\r\nimport Select from \"@mui/joy/Select\";\r\n// import Select, { SelectChangeEvent } from \"@mui/material/Select\";\r\nimport Option from \"@mui/joy/Option\";\r\nimport Typography from \"@mui/joy/Typography\";\r\nimport Tabs from \"@mui/joy/Tabs\";\r\nimport TabList from \"@mui/joy/TabList\";\r\nimport Tab, { tabClasses } from \"@mui/joy/Tab\";\r\nimport Breadcrumbs from \"@mui/joy/Breadcrumbs\";\r\nimport Link from \"@mui/joy/Link\";\r\nimport Card from \"@mui/joy/Card\";\r\nimport CardActions from \"@mui/joy/CardActions\";\r\nimport CardOverflow from \"@mui/joy/CardOverflow\";\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\nimport HomeRoundedIcon from \"@mui/icons-material/HomeRounded\";\r\nimport ChevronRightRoundedIcon from \"@mui/icons-material/ChevronRightRounded\";\r\nimport EmailRoundedIcon from \"@mui/icons-material/EmailRounded\";\r\nimport AccessTimeFilledRoundedIcon from \"@mui/icons-material/AccessTimeFilledRounded\";\r\nimport VideocamRoundedIcon from \"@mui/icons-material/VideocamRounded\";\r\nimport InsertDriveFileRoundedIcon from \"@mui/icons-material/InsertDriveFileRounded\";\r\nimport EditRoundedIcon from \"@mui/icons-material/EditRounded\";\r\n\r\nimport DropZone from \"../../components/DropZone\";\r\nimport FileUpload from \"../../components/FileUpload\";\r\nimport CountrySelector from \"../../components/CountrySelector\";\r\nimport EditorToolbar from \"../../components/EditorToolbar\";\r\nimport LocalPhoneIcon from \"@mui/icons-material/LocalPhone\";\r\nimport Grid3x3Icon from \"@mui/icons-material/Grid3x3\";\r\nimport { pb } from \"../../services/pocketbase\";\r\nimport Checkbox from \"@mui/joy/Checkbox\";\r\nimport BusinessIcon from \"@mui/icons-material/Business\";\r\nimport LocalHospitalIcon from \"@mui/icons-material/LocalHospital\";\r\n// fix this issue\r\nimport DefaultPic from '../../assets/default-pic.jpg';\r\n\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { useState } from \"react\";\r\nimport { ProceduresRecord } from \"../../pocketbase-types\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n\r\n\r\nexport default function MyProfile() {\r\n  const navigate = useNavigate();\r\n  const [data, setdata] = useState<{\r\n    procedure_details: any[]; // TODO: Replace with ProceduresRecord[]\r\n    status: string;\r\n  }>({\r\n    procedure_details: [],\r\n    status: \"new\",\r\n  });\r\n  //Write on change function\r\n  const handleChange = (e: any) => {\r\n    console.log(e)\r\n    // if date of birth make it a date string for database\r\n    if (e.target.name === \"dob\") {\r\n      const date = new Date(e.target.value);\r\n\r\n      setdata({ ...data, [e.target.name]: date });\r\n      // console.log(date, d)\r\n    }\r\n    else\r\n\r\n      setdata({ ...data, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e: any) => {\r\n    e.preventDefault();\r\n    console.log(data);\r\n    try {\r\n      const record = await pb.collection(\"cases\").create(data);\r\n      // toast.success(\"Case added successfully\");\r\n      // naviaget to cases\r\n      navigate(\"/cases\");\r\n\r\n    }\r\n    catch (err) {\r\n      console.log(err);\r\n\r\n    }\r\n  }\r\n\r\n  const [Surgery, setSurgery] = useState(false);\r\n\r\n  const [procedure, setProcedure] = useState(\"\");\r\n  const [cptCode, setCptCode] = useState(\"\");\r\n\r\n  const handleAddProcedure = () => {\r\n    // Only add if both procedure and cptCode are present\r\n    if (procedure && cptCode) {\r\n      const updatedProcedures = [...data.procedure_details, { procedure, cptCode }];\r\n      setdata({ ...data, procedure_details: updatedProcedures });\r\n      setProcedure(\"\"); // Clear procedure input\r\n      setCptCode(\"\"); // Clear CPT code input\r\n    }\r\n  };\r\n\r\n  // Function to handle removing a procedure from the data\r\n  const handleRemoveProcedure = (index: any) => {\r\n    const updatedProcedures = [...data.procedure_details];\r\n    updatedProcedures.splice(index, 1);\r\n    setdata({ ...data, procedure_details: updatedProcedures });\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        flex: 1,\r\n        width: \"100%\",\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          position: \"sticky\",\r\n          top: {\r\n            sm: -100,\r\n            md: -110,\r\n          },\r\n          bgcolor: \"background.body\",\r\n          zIndex: 9995,\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            px: {\r\n              xs: 2,\r\n              md: 6,\r\n            },\r\n          }}\r\n        >\r\n          {/* <Breadcrumbs\r\n            size=\"sm\"\r\n            aria-label=\"breadcrumbs\"\r\n            separator={<ChevronRightRoundedIcon />}\r\n            sx={{ pl: 0 }}\r\n          >\r\n            <Link\r\n              underline=\"none\"\r\n              color=\"neutral\"\r\n              href=\"#some-link\"\r\n              aria-label=\"Home\"\r\n            >\r\n              <HomeRoundedIcon />\r\n            </Link>\r\n            <Typography color=\"primary\" fontWeight={500} fontSize={12}>\r\n              Add a case\r\n            </Typography>\r\n          </Breadcrumbs> */}\r\n          <Typography\r\n            level=\"h2\"\r\n            sx={{\r\n              mt: 1,\r\n              mb: 2,\r\n            }}\r\n          >\r\n            Add a new case\r\n          </Typography>\r\n        </Box>\r\n      </Box>\r\n\r\n      <Stack\r\n        spacing={4}\r\n        sx={{\r\n          display: \"flex\",\r\n          maxWidth: \"800px\",\r\n          mx: \"auto\",\r\n          px: {\r\n            xs: 2,\r\n            md: 6,\r\n          },\r\n          py: {\r\n            xs: 2,\r\n            md: 3,\r\n          },\r\n        }}\r\n      >\r\n        <Card>\r\n          <Box sx={{ mb: 1 }}>\r\n            <Typography level=\"title-md\">Case Information</Typography>\r\n            <Typography level=\"body-sm\">\r\n              Enter details about the case in the fields below.\r\n            </Typography>\r\n          </Box>\r\n          <Divider />\r\n          <Stack\r\n            direction=\"row\"\r\n            spacing={3}\r\n            sx={{ display: { xs: \"none\", md: \"flex\" }, my: 1 }}\r\n          >\r\n            <Stack direction=\"column\" spacing={1}>\r\n              <AspectRatio\r\n                ratio=\"1\"\r\n                maxHeight={200}\r\n                sx={{ flex: 1, minWidth: 120, borderRadius: \"100%\" }}\r\n              >\r\n                <img\r\n                  src={DefaultPic}\r\n                  // srcSet=\"https://images.unsplash.com/photo-1535713875002-d1d0cf377fde?auto=format&fit=crop&w=286&dpr=2 2x\"\r\n                  loading=\"lazy\"\r\n                  alt=\"\"\r\n                />\r\n              </AspectRatio>\r\n              {/* <IconButton\r\n                aria-label=\"upload new picture\"\r\n                size=\"sm\"\r\n                variant=\"outlined\"\r\n                color=\"neutral\"\r\n                sx={{\r\n                  bgcolor: \"background.body\",\r\n                  position: \"absolute\",\r\n                  zIndex: 2,\r\n                  borderRadius: \"50%\",\r\n                  left: 100,\r\n                  top: 170,\r\n                  boxShadow: \"sm\",\r\n                }}\r\n              >\r\n                <EditRoundedIcon />\r\n              </IconButton> */}\r\n            </Stack>\r\n            <Stack spacing={2} sx={{ flexGrow: 1 }}>\r\n              <Stack spacing={1}>\r\n                <FormLabel>Name</FormLabel>\r\n                <FormControl\r\n                  sx={{\r\n                    width: \"90%\",\r\n                    display: {\r\n                      sm: \"flex-column\",\r\n                      md: \"flex-row\",\r\n                    },\r\n                    gap: 2,\r\n                  }}\r\n                >\r\n                  <Input\r\n                    size=\"sm\"\r\n                    name=\"first_name\"\r\n                    placeholder=\"First name\"\r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                    }}\r\n                  />\r\n                  <Input\r\n                    size=\"sm\"\r\n                    name=\"last_name\"\r\n                    placeholder=\"Last name\"\r\n                    sx={{ flexGrow: 1 }}\r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                    }}\r\n                  />\r\n                </FormControl>\r\n              </Stack>\r\n              <Stack sx={{ width: \"90%\" }} direction=\"row\" spacing={2}>\r\n                <FormControl>\r\n                  <FormLabel>Phone</FormLabel>\r\n                  <Input\r\n                    name=\"phone_number\"\r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                    }}\r\n                    startDecorator={<LocalPhoneIcon />}\r\n                    size=\"sm\"\r\n                    placeholder=\"+1234234234\"\r\n                  />\r\n                </FormControl>\r\n                <FormControl sx={{ flexGrow: 1 }}>\r\n                  <FormLabel>Email</FormLabel>\r\n                  <Input\r\n                    size=\"sm\"\r\n                    type=\"email\"\r\n                    startDecorator={<EmailRoundedIcon />}\r\n                    name=\"email\"\r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                    }}\r\n                    placeholder=\"johndoe@test.com\"\r\n                    sx={{ flexGrow: 1 }}\r\n                  />\r\n                </FormControl>\r\n              </Stack>\r\n              <Stack sx={{ width: \"90%\" }} direction=\"row\" spacing={2}>\r\n                <FormControl>\r\n                  <FormLabel>SSN</FormLabel>\r\n                  <Input\r\n                    name=\"ssn\"\r\n                    startDecorator={<Grid3x3Icon />}\r\n                    size=\"sm\"\r\n                    placeholder=\"1234234234\"\r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                    }}\r\n                  />\r\n                </FormControl>\r\n                <FormControl sx={{ flexGrow: 1 }}>\r\n                  <FormLabel>Address</FormLabel>\r\n                  <Input\r\n                    size=\"sm\"\r\n                    type=\"text\"\r\n                    startDecorator={<HomeIcon />}\r\n                    placeholder=\"St. Address, City, State, Zip Code\"\r\n                    sx={{ flexGrow: 1 }}\r\n                  />\r\n                </FormControl>\r\n              </Stack>\r\n              <Stack sx={{ width: \"95%\" }} direction=\"row\" spacing={2}>\r\n                <FormControl>\r\n                  <FormLabel>Sex</FormLabel>\r\n                  <Select\r\n                    name=\"sex\"\r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                    }}\r\n                    placeholder=\"Male/Female\"\r\n                    required\r\n                    size=\"sm\"\r\n                    sx={{ minWidth: 200 }}\r\n                  >\r\n                    <Option value=\"male\">Male</Option>\r\n                    <Option value=\"female\">Female</Option>\r\n                    <Option value=\"other\">Other</Option>\r\n                  </Select>\r\n                </FormControl>\r\n                <FormControl sx={{ flexGrow: 1 }}>\r\n                  <FormLabel>Facility</FormLabel>\r\n                  <Input\r\n                    size=\"sm\"\r\n                    type=\"text\"\r\n                    startDecorator={<BusinessIcon />}\r\n                    placeholder=\"St. Address, City, State, Zip Code\"\r\n                  />\r\n                </FormControl>\r\n              </Stack>\r\n              <Stack direction=\"row\" spacing={5}>\r\n                <FormControl size={\"md\"}>\r\n                  <FormLabel>Date of Birth</FormLabel>\r\n                  <Input\r\n                    size=\"sm\"\r\n                    type=\"date\"\r\n                    name=\"dob\"\r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                    }}\r\n                    slotProps={{\r\n                      input: {\r\n                        min: \"2018-06-07T00:00\",\r\n                        max: \"2018-06-14T00:00\",\r\n                      },\r\n                    }}\r\n                  />\r\n                </FormControl>\r\n              </Stack>\r\n              {/* <Stack direction=\"row\" spacing={5}>\r\n                <Checkbox\r\n                  label=\"Surgery required\"\r\n                  variant=\"outlined\"\r\n                  size=\"sm\"\r\n                  onChange={(e) => {\r\n                    setSurgery(e.target.checked);\r\n                  }}\r\n                  sx={{ position: \"relative\", top: 30 }}\r\n                />\r\n                <FormControl>\r\n                  <FormLabel>Surgeon Assigned</FormLabel>\r\n                  <Input\r\n                    disabled={!Surgery}\r\n                    size=\"sm\"\r\n                    type=\"text\"\r\n                    startDecorator={<LocalHospitalIcon />}\r\n                    placeholder=\"Dr.John Doe\"\r\n                  />\r\n                </FormControl>\r\n              </Stack>\r\n\r\n              <Stack direction=\"row\" spacing={4}>\r\n                <FormControl>\r\n                  <FormLabel>Procedure</FormLabel>\r\n                  <Input\r\n                    sx={{ width: \"12rem\" }}\r\n                    disabled={!Surgery}\r\n                    size=\"sm\"\r\n                    type=\"text\"\r\n                    value={procedure}\r\n                    onChange={(e) => setProcedure(e.target.value)}\r\n                    startDecorator={<LocalHospitalIcon />}\r\n                    placeholder=\"Skin Plasty\"\r\n                  />\r\n                </FormControl>\r\n                <FormControl>\r\n                  <FormLabel>CPT</FormLabel>\r\n                  <Input\r\n                    sx={{ width: \"10rem\" }}\r\n                    disabled={!Surgery}\r\n                    size=\"sm\"\r\n                    type=\"text\"\r\n                    value={cptCode}\r\n                    onChange={(e) => setCptCode(e.target.value)}\r\n                    startDecorator={<LocalHospitalIcon />}\r\n                    placeholder=\"12345\"\r\n                  />\r\n                </FormControl>\r\n                <Button\r\n                  sx={{\r\n                    height: \"2rem\",\r\n                    width: \"3.5rem\",\r\n                    position: \"relative\",\r\n                    top: \"1.6rem\",\r\n                  }}\r\n                  size=\"sm\"\r\n                  variant=\"solid\"\r\n                  onClick={handleAddProcedure}\r\n                >\r\n                  add\r\n                </Button>\r\n              </Stack>\r\n\r\n              \r\n              {data.procedure_details.map((item: any, index: number) => (\r\n                <Stack\r\n                  key={index}\r\n                  direction=\"row\"\r\n                  alignItems=\"center\"\r\n                  justifyContent=\"space-between\"\r\n                  sx={{\r\n                    border: \"1px solid\",\r\n                    borderColor: \"primary.main\",\r\n                    borderRadius: \"4px\",\r\n                    padding: \"8px\",\r\n                    marginTop: \"8px\",\r\n                  }}\r\n                >\r\n\r\n                  <Typography>{item.procedure} - {item.cptCode}</Typography>\r\n                  <IconButton\r\n                    size=\"sm\"\r\n                    onClick={() => handleRemoveProcedure(index)}\r\n                  >\r\n                    <CloseIcon />\r\n                  </IconButton>\r\n                </Stack>\r\n              ))\r\n              } */}\r\n\r\n            </Stack >\r\n          </Stack >\r\n          <Stack\r\n            direction=\"column\"\r\n            spacing={2}\r\n            sx={{ display: { xs: \"flex\", md: \"none\" }, my: 1 }}\r\n          >\r\n            <Stack direction=\"row\" spacing={2}>\r\n              <Stack direction=\"column\" spacing={1}>\r\n                <AspectRatio\r\n                  ratio=\"1\"\r\n                  maxHeight={108}\r\n                  sx={{ flex: 1, minWidth: 108, borderRadius: \"100%\" }}\r\n                >\r\n                  <img\r\n                    src={DefaultPic}\r\n                    srcSet=\"https://images.unsplash.com/photo-1535713875002-d1d0cf377fde?auto=format&fit=crop&w=286&dpr=2 2x\"\r\n                    loading=\"lazy\"\r\n                    alt=\"\"\r\n                  />\r\n                </AspectRatio>\r\n                <IconButton\r\n                  aria-label=\"upload new picture\"\r\n                  size=\"sm\"\r\n                  variant=\"outlined\"\r\n                  color=\"neutral\"\r\n                  sx={{\r\n                    bgcolor: \"background.body\",\r\n                    position: \"absolute\",\r\n                    zIndex: 2,\r\n                    borderRadius: \"50%\",\r\n                    left: 85,\r\n                    top: 180,\r\n                    boxShadow: \"sm\",\r\n                  }}\r\n                >\r\n                  <EditRoundedIcon />\r\n                </IconButton>\r\n              </Stack>\r\n\r\n              <Stack spacing={2} sx={{ flexGrow: 1 }}>\r\n                <Stack spacing={1}>\r\n                  <FormLabel>Name</FormLabel>\r\n                  <FormControl\r\n                    sx={{\r\n                      width: \"90%\",\r\n                      display: {\r\n                        sm: \"flex-column\",\r\n                        md: \"flex-row\",\r\n                      },\r\n                      gap: 2,\r\n                    }}\r\n                  >\r\n                    <Input\r\n                      size=\"sm\"\r\n                      name=\"first_name\"\r\n                      placeholder=\"First name\"\r\n                      onChange={(e) => {\r\n                        handleChange(e);\r\n                      }}\r\n                    />\r\n                    <Input\r\n                      size=\"sm\"\r\n                      name=\"last_name\"\r\n                      placeholder=\"Last name\"\r\n                      sx={{ flexGrow: 1 }}\r\n                      onChange={(e) => {\r\n                        handleChange(e);\r\n                      }}\r\n                    />\r\n                  </FormControl>\r\n                </Stack>\r\n                <Stack sx={{ width: \"90%\" }} direction=\"row\" spacing={2}>\r\n                  <FormControl>\r\n                    <FormLabel>Phone</FormLabel>\r\n                    <Input\r\n                      name=\"phone_number\"\r\n                      onChange={(e) => {\r\n                        handleChange(e);\r\n                      }}\r\n                      startDecorator={<LocalPhoneIcon />}\r\n                      size=\"sm\"\r\n                      placeholder=\"+1234234234\"\r\n                    />\r\n                  </FormControl>\r\n                  <FormControl sx={{ flexGrow: 1 }}>\r\n                    <FormLabel>Email</FormLabel>\r\n                    <Input\r\n                      size=\"sm\"\r\n                      type=\"email\"\r\n                      startDecorator={<EmailRoundedIcon />}\r\n                      name=\"email\"\r\n                      onChange={(e) => {\r\n                        handleChange(e);\r\n                      }}\r\n                      placeholder=\"johndoe@test.com\"\r\n                      sx={{ flexGrow: 1 }}\r\n                    />\r\n                  </FormControl>\r\n                </Stack>\r\n                <Stack sx={{ width: \"90%\" }} direction=\"row\" spacing={2}>\r\n                  <FormControl>\r\n                    <FormLabel>SSN</FormLabel>\r\n                    <Input\r\n                      name=\"ssn\"\r\n                      startDecorator={<Grid3x3Icon />}\r\n                      size=\"sm\"\r\n                      placeholder=\"1234234234\"\r\n                      onChange={(e) => {\r\n                        handleChange(e);\r\n                      }}\r\n                    />\r\n                  </FormControl>\r\n                  <FormControl sx={{ flexGrow: 1 }}>\r\n                    <FormLabel>Address</FormLabel>\r\n                    <Input\r\n                      size=\"sm\"\r\n                      type=\"text\"\r\n                      startDecorator={<HomeIcon />}\r\n                      placeholder=\"St. Address, City, State, Zip Code\"\r\n                      sx={{ flexGrow: 1 }}\r\n                    />\r\n                  </FormControl>\r\n                </Stack>\r\n                <Stack sx={{ width: \"95%\" }} direction=\"row\" spacing={2}>\r\n                  <FormControl>\r\n                    <FormLabel>Sex</FormLabel>\r\n                    <Select\r\n                      name=\"sex\"\r\n                      onChange={(e) => {\r\n                        handleChange(e);\r\n                      }}\r\n                      placeholder=\"Male/Female\"\r\n                      required\r\n                      size=\"sm\"\r\n                      sx={{ minWidth: 200 }}\r\n                    >\r\n                      <Option value=\"male\">Male</Option>\r\n                      <Option value=\"female\">Female</Option>\r\n                      <Option value=\"other\">Other</Option>\r\n                    </Select>\r\n                  </FormControl>\r\n                  <FormControl sx={{ flexGrow: 1 }}>\r\n                    <FormLabel>Facility</FormLabel>\r\n                    <Input\r\n                      size=\"sm\"\r\n                      type=\"text\"\r\n                      startDecorator={<BusinessIcon />}\r\n                      placeholder=\"St. Address, City, State, Zip Code\"\r\n                    />\r\n                  </FormControl>\r\n                </Stack>\r\n                <Stack direction=\"row\" spacing={5}>\r\n                  <FormControl size={\"md\"}>\r\n                    <FormLabel>Date of Birth</FormLabel>\r\n                    <Input\r\n                      size=\"sm\"\r\n                      type=\"date\"\r\n                      slotProps={{\r\n                        input: {\r\n                          min: \"2018-06-07T00:00\",\r\n                          max: \"2018-06-14T00:00\",\r\n                        },\r\n                      }}\r\n                    />\r\n                  </FormControl>\r\n                </Stack>\r\n                <Stack direction=\"row\" spacing={5}>\r\n                  <Checkbox\r\n                    label=\"Surgery required\"\r\n                    variant=\"outlined\"\r\n                    size=\"sm\"\r\n                    onChange={(e) => {\r\n                      setSurgery(e.target.checked);\r\n                    }}\r\n                    sx={{ position: \"relative\", top: 30 }}\r\n                  />\r\n                  <FormControl>\r\n                    <FormLabel>Surgeon Assigned</FormLabel>\r\n                    <Input\r\n                      disabled={!Surgery}\r\n                      size=\"sm\"\r\n                      type=\"text\"\r\n                      startDecorator={<LocalHospitalIcon />}\r\n                      placeholder=\"Dr.John Doe\"\r\n                    />\r\n                  </FormControl>\r\n                </Stack>\r\n\r\n                <Stack direction=\"row\" spacing={4}>\r\n                  <FormControl>\r\n                    <FormLabel>Procedure</FormLabel>\r\n                    <Input\r\n                      sx={{ width: \"12rem\" }}\r\n                      disabled={!Surgery}\r\n                      size=\"sm\"\r\n                      type=\"text\"\r\n                      value={procedure}\r\n                      onChange={(e) => setProcedure(e.target.value)}\r\n                      startDecorator={<LocalHospitalIcon />}\r\n                      placeholder=\"Skin Plasty\"\r\n                    />\r\n                  </FormControl>\r\n                  <FormControl>\r\n                    <FormLabel>CPT</FormLabel>\r\n                    <Input\r\n                      sx={{ width: \"10rem\" }}\r\n                      disabled={!Surgery}\r\n                      size=\"sm\"\r\n                      type=\"text\"\r\n                      value={cptCode}\r\n                      onChange={(e) => setCptCode(e.target.value)}\r\n                      startDecorator={<LocalHospitalIcon />}\r\n                      placeholder=\"12345\"\r\n                    />\r\n                  </FormControl>\r\n                  <Button\r\n                    sx={{\r\n                      height: \"2rem\",\r\n                      width: \"3.5rem\",\r\n                      position: \"relative\",\r\n                      top: \"1.6rem\",\r\n                    }}\r\n                    size=\"sm\"\r\n                    variant=\"solid\"\r\n                    onClick={handleAddProcedure}\r\n                  >\r\n                    add\r\n                  </Button>\r\n                </Stack>\r\n\r\n                {/* Display added procedures with remove button */}\r\n                {data.procedure_details.map((item: any, index: number) => (\r\n                  <Stack\r\n                    key={index}\r\n                    direction=\"row\"\r\n                    alignItems=\"center\"\r\n                    justifyContent=\"space-between\"\r\n                    sx={{\r\n                      border: \"1px solid\",\r\n                      borderColor: \"primary.main\",\r\n                      borderRadius: \"4px\",\r\n                      padding: \"8px\",\r\n                      marginTop: \"8px\",\r\n                    }}\r\n                  >\r\n                    {/* <Typography>{item.procedure} - {item.cptCode}</Typography> */}\r\n                    <IconButton\r\n                      size=\"sm\"\r\n                      onClick={() => handleRemoveProcedure(index)}\r\n                    >\r\n                      <CloseIcon />\r\n                    </IconButton>\r\n                  </Stack >\r\n                ))\r\n                }\r\n                {/* <Box\r\n              sx={{display:\"flex\",justifyContent:\"end\"}}\r\n              >\r\n              <Button\r\n              sx={{mr:\"4rem\"}}\r\n                size=\"sm\"\r\n                variant=\"solid\"\r\n                \r\n              >\r\n                Save\r\n              </Button>\r\n              </Box> */}\r\n              </Stack >\r\n\r\n\r\n            </Stack >\r\n\r\n          </Stack >\r\n          <Box sx={{ mb: 1, mt: 3 }}>\r\n            <Typography level=\"title-md\">Initial Notes</Typography>\r\n            <Typography level=\"body-sm\">\r\n              Write description about the diagnosis in the field below.\r\n            </Typography>\r\n          </Box>\r\n          <Stack spacing={2} sx={{ my: 1 }}>\r\n            <Textarea\r\n              size=\"sm\"\r\n              minRows={4}\r\n              sx={{ mt: 1.5 }}\r\n\r\n              name=\"initial_note\"\r\n              onChange={(e) => {\r\n                handleChange(e);\r\n              }}\r\n              placeholder=\"Left 1st metatarsal- cuneiform fusion, modified McBride, Akin osteotomy, left 2nd digit hammer toe correction\"\r\n            />\r\n            <FormHelperText sx={{ mt: 0.75, fontSize: \"xs\" }}>\r\n              275 characters left\r\n            </FormHelperText>\r\n          </Stack>\r\n          <CardOverflow sx={{ borderTop: \"1px solid\", borderColor: \"divider\" }}>\r\n            <CardActions sx={{ alignSelf: \"flex-end\", pt: 2 }}>\r\n              {/* <Button size=\"sm\" variant=\"outlined\" color=\"neutral\">\r\n                Cancel\r\n              </Button> */}\r\n              <Button\r\n                size=\"sm\"\r\n                variant=\"solid\"\r\n                onClick={(e) => {\r\n                  handleSubmit(e);\r\n                }}\r\n              >\r\n                Save\r\n              </Button>\r\n            </CardActions>\r\n          </CardOverflow>\r\n        </Card >\r\n      </Stack >\r\n    </Box >\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Stack from '@mui/joy/Stack';\r\nimport Typography from '@mui/joy/Typography';\r\nimport Card from '@mui/joy/Card';\r\nimport CardContent from '@mui/joy/CardContent';\r\nimport { CardHeader } from '@mui/material';\r\nimport { formatDate } from '../../../lib/utils';\r\nimport { Box } from '@mui/joy';\r\nimport { format } from 'date-fns';\r\n\r\n\r\n\r\n// import CardHeader from '@mui/joy/CardHeader';\r\n\r\ninterface SurgeryDetailsProps {\r\n    surgeryDetails: {\r\n        start: string;\r\n        end: string;\r\n\r\n        type: string;\r\n        duration: number;\r\n        anesthesia_type: string;\r\n        anesthesia_position: string;\r\n        specialty: string;\r\n        procedures: {\r\n            name: string;\r\n            site: string;\r\n            laterality: string;\r\n            cpt_code: string;\r\n        }[];\r\n    };\r\n    surgeryDetail: any;\r\n}\r\n\r\nconst SurgeryDetails: React.FC<SurgeryDetailsProps> = ({ surgeryDetails, surgeryDetail }) => {\r\n    return (\r\n\r\n        // improve styling\r\n\r\n\r\n        <Box sx={{ width: '90%', overflowY: 'auto' }}>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            < Stack spacing={2}>\r\n                <Typography>\r\n                    <strong>Start Time:</strong> {format(new Date(surgeryDetail.start), 'yyyy-MM-dd HH:mm')}\r\n                </Typography>\r\n                <Typography>\r\n                    <strong>End Time:</strong> {format(new Date(surgeryDetail.end), 'yyyy-MM-dd HH:mm')}\r\n                </Typography>\r\n                <Typography>\r\n                    <strong>Type:</strong> {surgeryDetail.type}\r\n                </Typography>\r\n\r\n                <Typography>\r\n                    <strong>Anesthesia Type:</strong> {surgeryDetail.anesthesia_type}\r\n                </Typography>\r\n                <Typography>\r\n                    <strong>Anesthesia Position:</strong> {surgeryDetail.anesthesia_position}\r\n                </Typography>\r\n                <Typography>\r\n                    <strong>Specialty:</strong> {surgeryDetail.specialty}\r\n                </Typography>\r\n                <Typography>\r\n                    <strong>Procedures:</strong>\r\n                </Typography>\r\n                <Stack spacing={1} sx={{ marginLeft: '1.5em' }}>\r\n                    {surgeryDetail?.expand.procedures.map((procedure: any, index: number) => (\r\n                        <Typography key={index}>\r\n                            {procedure.name} - CPT Code: {procedure.cpt_code}\r\n                        </Typography>\r\n                    ))}\r\n                </Stack>\r\n            </Stack>\r\n\r\n        </Box >\r\n\r\n    );\r\n};\r\n\r\nexport default SurgeryDetails;\r\n","import React from 'react';\r\nimport AccordionGroup from '@mui/joy/AccordionGroup';\r\nimport Accordion from '@mui/joy/Accordion';\r\nimport AccordionDetails, {\r\n    accordionDetailsClasses,\r\n} from '@mui/joy/AccordionDetails';\r\nimport AccordionSummary, {\r\n    accordionSummaryClasses,\r\n} from '@mui/joy/AccordionSummary';\r\nimport FormatListBulletedIcon from '@mui/icons-material/FormatListBulleted';\r\nimport ListItemContent from '@mui/joy/ListItemContent';\r\n\r\nimport TapAndPlayRoundedIcon from '@mui/icons-material/TapAndPlayRounded';\r\nimport Avatar from '@mui/joy/Avatar';\r\nimport Typography from '@mui/joy/Typography';\r\n// Import your custom component\r\nimport SurgeryDetails from '../caseDetailView/SurgeryDetails';\r\nimport HistoryToggleOffIcon from '@mui/icons-material/HistoryToggleOff';\r\nimport { formatDate } from '../../../lib/utils';\r\nimport { ca } from 'date-fns/locale';\r\nimport TaskAltIcon from '@mui/icons-material/TaskAlt';\r\n\r\ninterface CaseActivityItem {\r\n    type: string;\r\n    note?: string;\r\n    attachments?: any;\r\n    assigned_to?: any;\r\n    expand?: any;\r\n    meta?: any;\r\n    created: string; // Assuming 'created' is a string property\r\n}\r\n\r\ninterface ActivityLogProps {\r\n    case_activity_item: CaseActivityItem[];\r\n    // Add other properties as needed\r\n}\r\n// Utility function to format date in a human-readable form\r\n\r\n\r\nconst ActivityLogComponent: React.FC<ActivityLogProps> = ({ case_activity_item }) => {\r\n\r\n\r\n    //  METHOD TO GET FIRST LINE OF NOTE\r\n    const getFirstLine = (note: string) => {\r\n        // first 5 words\r\n        const firstLine = note.split(' ').slice(0, 5).join(' ');\r\n\r\n        return firstLine;\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            {case_activity_item ? case_activity_item.map((activityItem, index) => (\r\n                <Accordion key={index}>\r\n                    <AccordionSummary>\r\n                        <Avatar color=\"primary\">\r\n                            {activityItem.type === 'note' && <FormatListBulletedIcon />}\r\n                            {activityItem.type === 'action_required' && <TaskAltIcon />}\r\n                            {activityItem.type === 'attachment' && <TapAndPlayRoundedIcon />}\r\n                            {activityItem.type === 'surgery_scheduled_added' && <HistoryToggleOffIcon />}\r\n                        </Avatar>\r\n                        <ListItemContent>\r\n                            <Typography level=\"title-md\">{activityItem.type == 'action_required' ? 'Task' : 'Note'}</Typography>\r\n                            <Typography level=\"body-sm\">\r\n                                {/* {activityItem.type === 'surgery_scheduled_added'\r\n                                    && 'Activate or deactivate your connections'\r\n                                }\r\n                                 */}\r\n                                {activityItem.type === 'note' || activityItem.type == 'action_required'\r\n                                    && getFirstLine(activityItem?.meta?.note) + '...'\r\n                                }\r\n\r\n\r\n                            </Typography>\r\n\r\n                            {activityItem?.assigned_to && activityItem.expand &&\r\n                                <Typography level='body-xs'>\r\n                                    Assigned to {activityItem?.expand?.assigned_to.name}\r\n                                </Typography>\r\n                            }\r\n                        </ListItemContent>\r\n                        <Typography level=\"body-sm\">\r\n                            {`  ${formatDate(activityItem.created)}`} {/* Display formatted date */}\r\n                        </Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n\r\n                        {activityItem.type === 'note' && (\r\n                            <Typography level=\"body-sm\">{activityItem?.meta?.note}</Typography>\r\n                        )}\r\n                        {/* {activityItem.type === 'surgery_scheduled_added' && (\r\n                            <SurgeryDetails surgeryDetails={activityItem.meta} />\r\n                        )} */}\r\n                        {/* Include other details based on the type */}\r\n                    </AccordionDetails>\r\n                </Accordion >\r\n            )) : <Typography level=\"body-sm\">No Activity</Typography>}\r\n        </>\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default ActivityLogComponent;\r\n","import * as React from \"react\";\r\nimport Box from \"@mui/joy/Box\";\r\nimport Card from \"@mui/joy/Card\";\r\nimport Typography from \"@mui/joy/Typography\";\r\nimport PictureAsPdfOutlinedIcon from \"@mui/icons-material/PictureAsPdfOutlined\";\r\nimport TableChartOutlinedIcon from \"@mui/icons-material/TableChartOutlined\";\r\nimport ImageOutlinedIcon from \"@mui/icons-material/ImageOutlined\";\r\ntype FileCardProps = {\r\n  file: {\r\n    id: string;\r\n    attachment: string;\r\n    created: string;\r\n    updated: string;\r\n    size?: number;\r\n  };\r\n};\r\n\r\nconst FileCard: React.FC<FileCardProps> = ({ file }) => {\r\n  const { id, attachment: fileName } = file;\r\n\r\n  const getIcon = (fileName: string) => {\r\n    if (fileName.endsWith(\".pdf\")) return PictureAsPdfOutlinedIcon;\r\n    if (fileName.endsWith(\".xlsx\")) return TableChartOutlinedIcon;\r\n    return ImageOutlinedIcon;\r\n  };\r\n\r\n  const formatFileName = (name: string) => {\r\n    let nameWithoutId = name.split(\"_\")[0];\r\n    nameWithoutId =\r\n      nameWithoutId.charAt(0).toUpperCase() + nameWithoutId.slice(1);\r\n    const extension = name.substring(name.lastIndexOf(\".\"));\r\n    return nameWithoutId + extension;\r\n  };\r\n\r\n  const handleFileOpen = async () => {\r\n    const fileUrl = `http://127.0.0.1:8090/api/files/attachments/${id}/${encodeURIComponent(\r\n      fileName\r\n    )}`;\r\n\r\n    try {\r\n      const response = await fetch(fileUrl);\r\n      const blob = await response.blob();\r\n      const downloadUrl = window.URL.createObjectURL(blob);\r\n      const link = document.createElement(\"a\");\r\n      link.href = downloadUrl;\r\n      link.download = fileName;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n      window.URL.revokeObjectURL(downloadUrl);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const getFileExtension = (name: string) => {\r\n    const matches = name.match(/(?<=\\.)\\w+$/);\r\n    return matches ? matches[0].toUpperCase() : \"UNKNOWN\";\r\n  };\r\n\r\n  const Icon = getIcon(fileName);\r\n  const formattedName = formatFileName(fileName);\r\n  const fileExtension = getFileExtension(fileName);\r\n\r\n  return (\r\n    <Card\r\n      variant=\"outlined\"\r\n      sx={{\r\n        width: '280',\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        padding: 1,\r\n        // backgroundColor: \"#ffffff\"\r\n        boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\r\n        \"&:hover\": {\r\n          boxShadow: \"0 4px 8px rgba(0,0,0,0.1)\",\r\n        },\r\n      }}\r\n      onClick={handleFileOpen}\r\n    >\r\n      <Icon sx={{ fontSize: \"40px\" }} />\r\n      <Box sx={{ display: \"flex\", flexDirection: \"column\" }}>\r\n        <Typography level=\"body-md\" fontWeight=\"bold\">\r\n          {formattedName}\r\n        </Typography>\r\n        <Typography level=\"body-sm\">2.5 MB {fileExtension}</Typography>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default FileCard;\r\n","import {\r\n    Box,\r\n    Button,\r\n    Divider,\r\n    FormControl,\r\n    FormLabel,\r\n    Select,\r\n    Option,\r\n    Modal,\r\n    ModalClose,\r\n    ModalDialog,\r\n    Stack,\r\n    Typography,\r\n    Textarea,\r\n    Input,\r\n} from \"@mui/joy\";\r\nimport UploadIcon from \"@mui/icons-material/Upload\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { pb } from \"../../../services/pocketbase\";\r\nimport * as React from \"react\";\r\nimport { useState } from \"react\";\r\nimport './../Cases'\r\n// ... (existing imports)\r\n\r\n// AddActivityProps type definition\r\ninterface ConsentFormProps {\r\n    open: boolean;\r\n    setOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n    caseId?: string; // Assuming caseId is a string, adjust accordingly\r\n    type?: string; // Assuming type is a string, adjust accordingly\r\n}\r\n\r\nconst ConsentForm: React.FC<ConsentFormProps> = (\r\n    { open, setOpen, caseId, type, }\r\n) => {\r\n    const handleClose = () => setOpen(false);\r\n\r\n\r\n    const [data, setdata] = useState({\r\n        note: \"\",\r\n        description: \"Surgeons may perform procedures such as bunion removal, hammertoe correction, or ligament repairs to enhance mobility and diminish discomfort. With advancements in surgical techniques and technology, foot surgeries aim to optimize recovery, allowing patients to regain their stride with improved comfort and overall foot health.\"\r\n    });\r\n    const handleChange = (e: any) => {\r\n        setdata({ ...data, [e.target.name]: e.target.value });\r\n    };\r\n\r\n\r\n    return (\r\n\r\n\r\n        <>\r\n            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                <Typography level=\"title-md\" sx={{ mt: 2 }}>\r\n                    Consent Form\r\n                </Typography>\r\n                <Button onClick={handleClose} size=\"sm\">\r\n                    <CloseIcon />\r\n                </Button>\r\n            </div>\r\n            <Divider />\r\n            <Stack spacing={2} marginTop={\r\n                {\r\n                    xs: 2,\r\n                    md: 4\r\n                }\r\n\r\n            }>\r\n                <Stack direction={{ xs: 'column', md: 'row' }} spacing={2}\r\n                    sx=\r\n                    {{\r\n                        display: 'flex'\r\n                    }}\r\n                >\r\n\r\n                    <FormControl>\r\n                        <FormLabel>Patient Name</FormLabel>\r\n                        <Input\r\n                            variant='soft'\r\n                            type=\"text\"\r\n                            disabled={true}\r\n                        // value={formData.patientName}\r\n                        // onChange={(e) =>\r\n                        //     setFormData({ ...formData, patientName: e.target.value })\r\n                        // }\r\n                        />\r\n                    </FormControl>\r\n                    <FormControl>\r\n                        <FormLabel>Surgery  Date</FormLabel>\r\n                        <Input\r\n                            type=\"date\"\r\n                        // value={formData.patientName}\r\n                        // onChange={(e) =>\r\n                        //     setFormData({ ...formData, patientName: e.target.value })\r\n                        // }\r\n                        />\r\n                    </FormControl>\r\n\r\n                </Stack>\r\n                <FormControl>\r\n                    <FormLabel>  Surgery Details</FormLabel>\r\n                    <Textarea disabled={true} value={data.description}>\r\n\r\n                    </Textarea>\r\n\r\n\r\n\r\n                </FormControl>\r\n\r\n            </Stack>\r\n\r\n\r\n        </>\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default ConsentForm;\r\n","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Box from \"@mui/joy/Box\";\r\nimport Button from \"@mui/joy/Button\";\r\nimport FileCard from \"./FileCard\";\r\nimport { pb } from \"../../../services/pocketbase\";\r\nimport ConsentForm from \"./ConsentForm\";\r\n\r\ntype FileData = {\r\n  id: string;\r\n  attachment: string;\r\n  created: string;\r\n  updated: string;\r\n  size?: number;\r\n  case: string;\r\n};\r\n\r\ntype ViewProps = {\r\n  caseId: string;\r\n};\r\n\r\nconst DocumentView: React.FC<ViewProps> = ({ caseId }) => {\r\n  const [files, setFiles] = useState<FileData[]>([]);\r\n\r\n  useEffect(() => {\r\n    fetchFiles(caseId);\r\n  }, [caseId]);\r\n\r\n  // open and closing for consentForm Model from this component\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n\r\n  const fetchFiles = async (caseId: string) => {\r\n    try {\r\n      const response = await pb.collection(\"attachments\").getList(1, 50, {\r\n        filter: `case='${caseId}'`,\r\n      });\r\n\r\n      const filesData: FileData[] = response.items.map((item) => ({\r\n        id: item.id,\r\n        attachment: item.attachment,\r\n        created: item.created,\r\n        updated: item.updated,\r\n        case: item.case,\r\n      }));\r\n\r\n      setFiles(filesData);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleFileChange = async (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    if (event.target.files) {\r\n      const file = event.target.files[0];\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append(\"attachment\", file);\r\n        formData.append(\"case\", caseId);\r\n        await pb.collection(\"attachments\").create(formData);\r\n\r\n        fetchFiles(caseId);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ maxWidth: \"90%\", margin: \"auto\" }}>\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          justifyContent: \"flex-end\",\r\n          padding: 2,\r\n        }}\r\n      >\r\n\r\n        <label htmlFor=\"raised-button-file\">\r\n          <Button\r\n            //clicking on this button will open the consentForm model\r\n            onClick={() => setOpen(true)}\r\n            // component=\"span\"\r\n            sx={{\r\n              borderRadius: \"16px\",\r\n              padding: \"6px 12px\",\r\n              marginX: 2,\r\n              fontSize: \"0.75rem\",\r\n              \"&:hover\": {\r\n                backgroundColor: \"#333333\",\r\n              },\r\n            }}\r\n\r\n\r\n          >\r\n\r\n            Consent Form\r\n          </Button>\r\n\r\n        </label>\r\n        <input\r\n          accept=\"image/*, .pdf, .xlsx\"\r\n          style={{ display: \"none\" }}\r\n          id=\"raised-button-file\"\r\n          multiple\r\n          type=\"file\"\r\n          onChange={handleFileChange}\r\n        />\r\n\r\n        <label htmlFor=\"raised-button-file\">\r\n          <Button\r\n            component=\"span\"\r\n            sx={{\r\n              borderRadius: \"16px\",\r\n              padding: \"6px 12px\",\r\n              fontSize: \"0.75rem\",\r\n              \"&:hover\": {\r\n                backgroundColor: \"#333333\",\r\n              },\r\n            }}\r\n          >\r\n            Add new file\r\n          </Button>\r\n\r\n        </label>\r\n\r\n\r\n\r\n      </Box>\r\n      <Box\r\n        sx={{\r\n          display: \"grid\",\r\n\r\n          gridTemplateColumns: { xs: \"1fr\", sm: \"repeat(1, 1fr)\", md: \"repeat(3, 1fr)\", lg: \"repeat(4, 1fr)\" },\r\n          gap: 2,\r\n          width: { xs: \"100%\", sm: \"100%\", },\r\n        }}\r\n      >\r\n        {files.map((file) => (\r\n          <FileCard key={file.id} file={file} />\r\n        ))}\r\n      </Box>\r\n\r\n      {/* consentForm model */}\r\n      {open && <ConsentForm open={open} setOpen={setOpen} />}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DocumentView;\r\n","import { Box, Button, DialogTitle, FormControl, FormLabel, Input, Modal, ModalClose, ModalDialog, Option, Select, Textarea } from '@mui/joy';\r\nimport { Stack } from '@mui/material';\r\nimport { format, parse } from 'date-fns';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Form } from 'react-router-dom';\r\nimport { pb } from '../../../services/pocketbase';\r\nimport Typography from '@mui/joy/Typography';\r\nimport { CollectionResponses, UsersResponse } from '../../../pocketbase-types';\r\ninterface ScheduleData {\r\n\r\n    assigned_to?: string;\r\n\r\n    procedures?: Array<string>;\r\n\r\n    note?: string;\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default function AddSchedule({ onClose, open, start: startP, end: endP, caseId }: any) {\r\n\r\n\r\n\r\n    const [start, setStart] = React.useState(new Date());\r\n    const [end, setEnd] = React.useState(new Date());\r\n    const [users, setUsers] = useState<Array<UsersResponse>>([])\r\n    const [procedures, setProcedures] = useState<Array<any>>([]);\r\n    const [data, setData] = useState<ScheduleData>({} as ScheduleData)\r\n\r\n    const handleChange = (\r\n        name: string,\r\n        newValue: string | null | string[],\r\n    ) => {\r\n        setData({ ...data, [name]: newValue! });\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Fetch users\r\n        const fetchData = async () => {\r\n            const users = await pb.collection('users').getFullList({\r\n                sort: '-created',\r\n                // filter: 'role == \"Nurse\"'\r\n            });\r\n\r\n            if (users)\r\n                setUsers(users)\r\n\r\n\r\n            console.log(users)\r\n            const procedures = await pb.collection('procedures').getFullList()\r\n            if (procedures)\r\n                setProcedures(procedures)\r\n        };\r\n        // Fetch procedures\r\n        fetchData()\r\n\r\n\r\n    }, []);\r\n    useEffect(() => {\r\n        if (startP) {\r\n            setStart(new Date(startP))\r\n        }\r\n        if (endP) {\r\n            setEnd(new Date(endP))\r\n        }\r\n\r\n\r\n    }, [startP, endP])\r\n\r\n\r\n    console.log(start, end)\r\n\r\n\r\n\r\n    const handleClose = () => {\r\n        onClose()\r\n    }\r\n\r\n\r\n    const handleSubmit = () => {\r\n        // create a new scheduled_event pocketbase of type block\r\n        if (pb.authStore.model) {\r\n            pb.collection('schedule_items').create({\r\n                type: 'surgery',\r\n                start: start,\r\n                end: end,\r\n                user: pb.authStore.model.id,\r\n                case: caseId,\r\n                description: data.note,\r\n\r\n\r\n            })\r\n                .then((res) => {\r\n                    console.log(res)\r\n                    handleClose()\r\n                    // onBlockTimeCreated(res)\r\n                })\r\n        }\r\n    }\r\n\r\n    return <Modal onClose={handleClose} open={open}>\r\n\r\n        <ModalDialog sx={\r\n            {\r\n                width: { xs: '100%', sm: '60%' },\r\n                // maxWidth: 500,\r\n                p: 2,\r\n                position: 'relative',\r\n                overflowY: 'auto',\r\n                maxHeight: '100%',\r\n            }\r\n        }>\r\n            <ModalClose />\r\n\r\n            <DialogTitle >\r\n                Schedule\r\n            </DialogTitle>\r\n\r\n\r\n\r\n            <Stack spacing={2} >\r\n\r\n\r\n                <Stack direction=\"row\" spacing={2}>\r\n\r\n\r\n\r\n                    <FormControl sx={{ flex: 1 }}>\r\n                        <FormLabel>Surgeon</FormLabel>\r\n\r\n                        <Select\r\n                            name=\"assigned_to\"\r\n                            placeholder=\"Choose Surgeon\"\r\n                            size=\"sm\"\r\n                            defaultValue={data.assigned_to}\r\n\r\n                            onChange={\r\n                                (_, newValue) => {\r\n                                    handleChange(\"assigned_to\", newValue)\r\n                                }\r\n                            }\r\n\r\n                        >\r\n                            {users && users.filter(x =>\r\n                                x.role === 'Surgeon'\r\n                            ).map((user) => (\r\n                                <Option key={user.id} value={user.id}>\r\n                                    {user.name}\r\n                                </Option>\r\n                            ))}\r\n\r\n\r\n                        </Select>\r\n                    </FormControl>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    <FormControl sx={{ flex: 1 }}>\r\n                        <FormLabel>Date</FormLabel>\r\n                        <Input\r\n\r\n                            type=\"date\"\r\n                            slotProps={{\r\n                                input: {\r\n                                    min: \"2018-06-07T00:00\",\r\n                                    max: \"2018-06-14T00:00\",\r\n                                },\r\n                            }}\r\n                            value={format(start, 'yyyy-MM-dd')}\r\n                            onChange={(e) => {\r\n                                const date = new Date(e.target.value)\r\n                                date.setHours(start.getHours())\r\n                                date.setMinutes(start.getMinutes())\r\n                                setStart(date)\r\n                            }}\r\n                        />\r\n                    </FormControl>\r\n\r\n                </Stack>\r\n\r\n                <Stack direction=\"row\" spacing={2}>\r\n\r\n\r\n\r\n                    <FormControl sx={{ flex: 1 }}>\r\n                        <FormLabel>\r\n                            From\r\n                        </FormLabel>\r\n                        <Input\r\n\r\n                            type=\"time\"\r\n                            slotProps={{\r\n                                input: {\r\n                                    min: \"2018-06-07T00:00\",\r\n                                    max: \"2018-06-14T00:00\",\r\n                                },\r\n                            }}\r\n                            value={format(start, 'HH:mm')}\r\n                            onChange={(e) => {\r\n                                // parse the time and set the date\r\n                                const time = parse(e.target.value, 'HH:mm', new Date());\r\n                                const newStart = new Date(start)\r\n                                newStart.setHours(time.getHours())\r\n                                newStart.setMinutes(time.getMinutes())\r\n                                setStart(newStart)\r\n                            }}\r\n                        />\r\n                    </FormControl>\r\n\r\n\r\n                    <FormControl\r\n                        sx={{ flex: 1 }}\r\n\r\n                    >\r\n                        <FormLabel>Until</FormLabel>\r\n                        <Input\r\n\r\n                            type=\"time\"\r\n                            slotProps={{\r\n                                input: {\r\n                                    min: \"2018-06-07T00:00\",\r\n                                    max: \"2018-06-14T00:00\",\r\n                                },\r\n                            }}\r\n                            value={format(end, 'HH:mm')}\r\n                            onChange={(e) => {\r\n                                // parse the time and set the date\r\n                                const time = parse(e.target.value, 'HH:mm', new Date());\r\n                                const newEnd = new Date(end)\r\n                                newEnd.setHours(time.getHours())\r\n                                newEnd.setMinutes(time.getMinutes())\r\n                                setEnd(newEnd)\r\n                            }}\r\n                        />\r\n                    </FormControl>\r\n\r\n\r\n                </Stack>\r\n                <FormControl>\r\n                    <FormLabel>Procedures</FormLabel>\r\n\r\n                    <Select\r\n                        name=\"procedures\"\r\n                        placeholder=\"Choose Procedures\"\r\n                        size=\"sm\"\r\n                        multiple\r\n                        defaultValue={data.procedures}\r\n\r\n                        onChange={\r\n                            (_, newValue) => {\r\n                                handleChange(\"procedures\", newValue)\r\n                            }\r\n                        }\r\n\r\n                    >\r\n                        {procedures && procedures.map((p) => (\r\n                            <Option key={p.id} value={p.id}>\r\n                                {p.name}\r\n                            </Option>\r\n                        ))}\r\n\r\n\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <FormLabel>Description</FormLabel>\r\n                    <Textarea\r\n                        name=\"note\"\r\n                        placeholder=\"Surgery Description\"\r\n                        minRows='3'\r\n                        defaultValue={data.note}\r\n                        onChange={(e) => handleChange(\"note\", e.target.value)}\r\n\r\n\r\n                    />\r\n\r\n                </FormControl>\r\n\r\n                <Box\r\n                    sx={{\r\n                        mt: 1,\r\n                        display: 'flex',\r\n                        gap: 1,\r\n                        flexDirection: { xs: 'column', sm: 'row-reverse' },\r\n                    }}\r\n                >\r\n\r\n                    <Button\r\n                        disabled={!data.assigned_to || !data.procedures || !data.note}\r\n\r\n                        variant=\"solid\" color=\"primary\" onClick={\r\n                            handleSubmit\r\n                        }>\r\n                        Save\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        color=\"neutral\"\r\n                        onClick={handleClose}\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n\r\n                </Box>\r\n            </Stack>\r\n        </ModalDialog>\r\n\r\n    </Modal>\r\n\r\n}","import {\r\n    Box,\r\n    Button,\r\n    Divider,\r\n    FormControl,\r\n    FormLabel,\r\n    Select,\r\n    Option,\r\n    Modal,\r\n    ModalClose,\r\n    ModalDialog,\r\n    Stack,\r\n    Typography,\r\n    Textarea,\r\n} from \"@mui/joy\";\r\nimport UploadIcon from \"@mui/icons-material/Upload\";\r\n\r\nimport { pb } from \"../../../services/pocketbase\";\r\nimport * as React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { UsersResponse } from \"../../../pocketbase-types\";\r\n// ... (existing imports)\r\n\r\n// AddActivityProps type definition\r\n\r\ninterface AddActivityData {\r\n    type?: string;\r\n    assigned_to?: string;\r\n    // date?: string;\r\n    from?: string;\r\n    until?: string;\r\n    note?: string;\r\n}\r\n\r\ninterface AddActivityProps {\r\n    open: boolean;\r\n    setOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n    caseId?: string; // Assuming caseId is a string, adjust accordingly\r\n    type: string; // Assuming type is a string, adjust accordingly\r\n}\r\n\r\nconst AddActivity: React.FC<AddActivityProps> = (\r\n    { open, setOpen, caseId, type }) => {\r\n    // const [open, setOpen] = useState(false);\r\n\r\n\r\n    // const handleChange = (\r\n    //     event: React.SyntheticEvent | null,\r\n    //     newValue: string | null,\r\n    // ) => {\r\n    //     setSelectedType(newValue!);\r\n    // };\r\n\r\n    // const handleChange = (e: any) => {\r\n    //     console.log(e)\r\n    //     // if date of birth make it a date string for database\r\n    //     if (e.target.name === \"dob\") {\r\n    //         const date = new Date(e.target.value);\r\n\r\n    //         setdata({ ...data, [e.target.name]: date });\r\n    //         // console.log(date, d)\r\n    //     }\r\n    //     else\r\n\r\n    //         setdata({ ...data, [e.target.name]: e.target.value });\r\n    // };\r\n\r\n    const [data, setdata] = useState<AddActivityData>({\r\n        type: \"note\",\r\n        assigned_to: \"\",\r\n        from: \"\",\r\n        until: \"\",\r\n    });\r\n    const handleChange = (\r\n        name: string,\r\n        newValue: string | null,\r\n    ) => {\r\n        setdata({ ...data, [name]: newValue! });\r\n    };\r\n\r\n    const [users, setUsers] = useState<Array<UsersResponse>>([])\r\n\r\n    React.useEffect(() => {\r\n        // Fetch users\r\n        const fetchData = async () => {\r\n            const users = await pb.collection('users').getFullList({\r\n                sort: '-created',\r\n\r\n            });\r\n\r\n            if (users)\r\n                setUsers(users)\r\n\r\n\r\n\r\n        };\r\n        // Fetch procedures\r\n        fetchData()\r\n\r\n\r\n    }, []);\r\n    const [note, setNote] = useState('');\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n\r\n    // const [note, setNote] = useState('');\r\n\r\n    const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        //  const formData = new FormData(event.currentTarget);\r\n\r\n        try {\r\n            if (caseId && data.type && data.note !== '') {\r\n                let req = {\r\n                    type: data.type,\r\n                    meta: {\r\n                        note: data.note,\r\n                    },\r\n                    case: caseId,\r\n                    assigned_to: data.type == \"action_required\" ? data.assigned_to : undefined\r\n                }\r\n                const acitivity_item = await pb.collection('case_activity_item').create(req);\r\n\r\n            }\r\n            handleClose();\r\n\r\n        } catch (error) {\r\n            handleClose()\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n\r\n            <Box sx={{ width: '100%', overflowY: 'auto' }}>\r\n                <Modal open={open} onClose={handleClose}>\r\n                    <ModalDialog\r\n                        sx={{\r\n                            width: { xs: \"100%\", md: \"50%\" },\r\n                        }}\r\n                    >\r\n                        <ModalClose onClick={handleClose} />\r\n                        <Typography level=\"title-md\" sx={{ mt: 2 }}>\r\n                            Case Activity Item\r\n                        </Typography>\r\n                        <Divider />\r\n                        <form onSubmit={handleSubmit} encType=\"multipart/form-data\">\r\n                            <Box sx={{ p: 2 }}>\r\n                                <Stack spacing={2}>\r\n                                    <FormControl>\r\n                                        <FormLabel>Type</FormLabel>\r\n\r\n\r\n                                        <Select\r\n\r\n                                            name=\"type\"\r\n                                            placeholder=\"Choose Type\"\r\n                                            size=\"sm\"\r\n                                            defaultValue={data.type}\r\n                                            onChange={(_, newValue) => {\r\n\r\n                                                handleChange(\"type\", newValue)\r\n                                            }}\r\n                                        >\r\n\r\n\r\n                                            <Option value=\"note\">\r\n                                                Add Note\r\n                                            </Option>\r\n                                            <Option value=\"action_required\">\r\n                                                Assign Task\r\n                                            </Option>\r\n\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    {data.type === 'action_required' && (\r\n                                        <FormControl>\r\n                                            <FormLabel>Assign To</FormLabel>\r\n                                            <Select\r\n                                                name=\"assigned_to\"\r\n                                                placeholder=\"Choose Assignee\"\r\n                                                size=\"sm\"\r\n                                                defaultValue={data.assigned_to}\r\n                                                onChange={(_, newValue) => {\r\n\r\n                                                    handleChange(\"assigned_to\", newValue)\r\n                                                }}\r\n                                            >\r\n                                                {users && users.map((user) => (\r\n                                                    <Option key={user.id} value={user.id}>\r\n                                                        {user.name}\r\n                                                    </Option>\r\n                                                ))}\r\n\r\n\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    )}\r\n\r\n                                    {data.type && data.type !== \"\" && (\r\n                                        <FormControl>\r\n                                            <FormLabel>\r\n\r\n\r\n                                                {data.type === 'note' ? 'Note' : 'Task Details'}\r\n\r\n\r\n                                            </FormLabel>\r\n                                            <Textarea\r\n                                                name=\"note\"\r\n                                                placeholder=\"Enter Note\"\r\n                                                minRows='3'\r\n                                                value={data.note}\r\n                                                onChange={(e) => handleChange(\"note\", e.target.value)}\r\n\r\n\r\n                                            />\r\n                                        </FormControl>\r\n                                    )}\r\n\r\n                                    {/* <FormControl>\r\n                                        <FormLabel>Attachments</FormLabel>\r\n                                        <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 2 }}>\r\n                                            <Button\r\n                                                size=\"sm\"\r\n                                                variant=\"outlined\"\r\n                                                component=\"label\"\r\n                                                startDecorator={<UploadIcon />}\r\n                                            >\r\n                                                Upload\r\n                                                <input type=\"file\" name=\"attachments\" hidden />\r\n                                            </Button>\r\n                                        </Box>\r\n                                    </FormControl> */}\r\n                                    <Stack direction=\"row\" justifyContent=\"flex-end\" spacing={2}>\r\n                                        <Button color=\"primary\" size=\"sm\" type=\"submit\">\r\n                                            Submit\r\n                                        </Button>\r\n                                    </Stack>\r\n                                </Stack>\r\n                            </Box>\r\n                        </form>\r\n                    </ModalDialog>\r\n                </Modal >\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddActivity;\r\n","import React, { useEffect, useState } from 'react'\r\nimport AspectRatio from '@mui/joy/AspectRatio';\r\nimport Box from '@mui/joy/Box';\r\nimport Button from '@mui/joy/Button';\r\nimport Divider from '@mui/joy/Divider';\r\nimport FormControl from '@mui/joy/FormControl';\r\nimport FormLabel from '@mui/joy/FormLabel';\r\nimport FormHelperText from '@mui/joy/FormHelperText';\r\nimport Input from '@mui/joy/Input';\r\nimport IconButton from '@mui/joy/IconButton';\r\nimport Textarea from '@mui/joy/Textarea';\r\nimport Stack from '@mui/joy/Stack';\r\nimport Select from '@mui/joy/Select';\r\nimport Option from '@mui/joy/Option';\r\nimport Typography from '@mui/joy/Typography';\r\nimport Tabs from '@mui/joy/Tabs';\r\nimport TabList from '@mui/joy/TabList';\r\nimport Tab, { tabClasses } from '@mui/joy/Tab';\r\nimport Breadcrumbs from '@mui/joy/Breadcrumbs';\r\nimport Link from '@mui/joy/Link';\r\nimport Card from '@mui/joy/Card';\r\nimport CardActions from '@mui/joy/CardActions';\r\nimport CardOverflow from '@mui/joy/CardOverflow';\r\n\r\nimport HomeRoundedIcon from '@mui/icons-material/HomeRounded';\r\nimport ChevronRightRoundedIcon from '@mui/icons-material/ChevronRightRounded';\r\nimport EmailRoundedIcon from '@mui/icons-material/EmailRounded';\r\nimport AccessTimeFilledRoundedIcon from '@mui/icons-material/AccessTimeFilledRounded';\r\nimport VideocamRoundedIcon from '@mui/icons-material/VideocamRounded';\r\nimport InsertDriveFileRoundedIcon from '@mui/icons-material/InsertDriveFileRounded';\r\nimport EditRoundedIcon from '@mui/icons-material/EditRounded';\r\n// import three icons for notes, attachments and schedule\r\n\r\nimport EditNoteIcon from '@mui/icons-material/EditNote';\r\nimport { Chip, TabPanel } from '@mui/joy';\r\nimport SurgeryDetails from './SurgeryDetails';\r\nimport DataSaverOnIcon from '@mui/icons-material/DataSaverOn';\r\n\r\nimport AccordionGroup from '@mui/joy/AccordionGroup';\r\nimport Accordion from '@mui/joy/Accordion';\r\nimport AccordionDetails, {\r\n  accordionDetailsClasses,\r\n} from '@mui/joy/AccordionDetails';\r\nimport AccordionSummary, {\r\n  accordionSummaryClasses,\r\n} from '@mui/joy/AccordionSummary';\r\nimport Switch from '@mui/joy/Switch';\r\n\r\nimport Avatar from '@mui/joy/Avatar';\r\n\r\nimport ListItemContent from '@mui/joy/ListItemContent';\r\n\r\nimport AirplanemodeActiveRoundedIcon from '@mui/icons-material/AirplanemodeActiveRounded';\r\nimport WifiRoundedIcon from '@mui/icons-material/WifiRounded';\r\nimport BluetoothRoundedIcon from '@mui/icons-material/BluetoothRounded';\r\nimport TapAndPlayRoundedIcon from '@mui/icons-material/TapAndPlayRounded';\r\nimport EditNotificationsRoundedIcon from '@mui/icons-material/EditNotificationsRounded';\r\nimport AdUnitsRoundedIcon from '@mui/icons-material/AdUnitsRounded';\r\nimport MessageRoundedIcon from '@mui/icons-material/MessageRounded';\r\nimport AccessibilityNewRoundedIcon from '@mui/icons-material/AccessibilityNewRounded';\r\nimport ZoomInRoundedIcon from '@mui/icons-material/ZoomInRounded';\r\nimport SpatialTrackingRoundedIcon from '@mui/icons-material/SpatialTrackingRounded';\r\nimport SettingsVoiceRoundedIcon from '@mui/icons-material/SettingsVoiceRounded';\r\nimport ActivityLogComponent from '../activityLog/ActivityLog';\r\n// import AddActivity from '../activityLog/AddActivty';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { pb } from '../../../services/pocketbase';\r\nimport { calculateAge } from '../../../lib/utils';\r\nimport { ca } from 'date-fns/locale';\r\nimport DefaultPic from '../../../assets/default-pic.jpg';\r\nimport ManageAccountsIcon from '@mui/icons-material/ManageAccounts';\r\nimport DocumentView from '../documents/DocumentView';\r\nimport AddSchedule from './AddSchedule';\r\nimport { addHours, endOfWeek, startOfDay, startOfHour, startOfWeek, subDays } from 'date-fns';\r\nimport AddActivity from '../activityLog/AddActivty';\r\n// import { pb } from '../../services/pocketbase';\r\nexport default function DetailView() {\r\n\r\n  const [blockTimeModalProps, setBlockTimeModalProps] = React.useState<any>({\r\n    open: false,\r\n    start: new Date(),\r\n    end: new Date(),\r\n  })\r\n\r\n  const handleBlockTime = ({ start = new Date(), end = addHours(new Date(), 1) } = {}) => {\r\n    setBlockTimeModalProps({\r\n      open: true,\r\n      start,\r\n      end,\r\n    })\r\n  }\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n  const [caseDetailsNew, setCaseDetailsNew] = useState({} as any);\r\n  const [caseDetails, setCaseDetails] = useState({\r\n    first_name: 'John',\r\n    last_name: 'Doe',\r\n    email: 'dd@kdk.com',\r\n    phone: '123-456-7890',\r\n    status: 'scheduled',\r\n    age: 19,\r\n    gender: \"Male\",\r\n    case_activity_item: [\r\n      {\r\n        type: 'note',\r\n        user: 33,\r\n        attachments: [],\r\n        note: 'This patient is a good candidate for surgery because of his age and health. He is a non-smoker and has no other health issues. He is also very active and has a good support system at home. He is a good candidate for surgery because of his age and health. He is a non-smoker and has no other health issues. He is also very active and has a good support system at home.',\r\n        created: '2023-12-03T13:56:00-04:00'\r\n      },\r\n      {\r\n        type: 'note',\r\n        user: 33,\r\n        attachments: [],\r\n        note: 'This patient is a good  a candidate for surgery because of his age and health. He is a non-smoker and has no other health issues. He is also very active and has a good support system at home. He is a good candidate for surgery because of his age and health. He is a non-smoker and has no other health issues. He is also very active and has a good support system at home.',\r\n        created: '2023-12-03T13:56:00-04:00'\r\n      }, {\r\n        type: 'note',\r\n        user: 33,\r\n        attachments: [],\r\n        note: 'This patient is a good as candidate for surgery because of his age and health. He is a non-smoker and has no other health issues. He is also very active and has a good support system at home. He is a good candidate for surgery because of his age and health. He is a non-smoker and has no other health issues. He is also very active and has a good support system at home.',\r\n        created: '2023-12-03T13:56:00-04:00'\r\n      }, {\r\n        type: 'note',\r\n        user: 33,\r\n        attachments: [],\r\n        note: 'This patient is a good  3 candidate for surgery because of his age and health. He is a non-smoker and has no other health issues. He is also very active and has a good support system at home. He is a good candidate for surgery because of his age and health. He is a non-smoker and has no other health issues. He is also very active and has a good support system at home.',\r\n        created: '2023-12-03T13:56:00-04:00'\r\n      },\r\n      {\r\n        type: 'surgery_scheduled_added',\r\n        user: 33,\r\n        meta: {\r\n          surgery_scheduled_id: 90,\r\n        }\r\n        ,\r\n        created: '2023-12-03T09:00:00-04:00'\r\n      }\r\n    ],\r\n    surgery_scheduled: [\r\n      {\r\n\r\n        start: \"2021-10-01T09:00:00-04:00\",\r\n        end: \"2021-10-01T09:30:00-04:00\",\r\n        type: 'surgery',\r\n        duration: 30,\r\n        anesthesia_type: 'choice',\r\n        anesthesia_position: 'surpine',\r\n        specialty: 'podiatry',\r\n        procedures: [\r\n          {\r\n            name: \"Right Akin\",\r\n            site: 'foot',\r\n            laterality: 'right',\r\n            cpt_code: '28285',\r\n          },\r\n          {\r\n            name: 'Weil osteotomy',\r\n            site: 'foot',\r\n            laterality: 'right',\r\n            cpt_code: '28285',\r\n          }\r\n        ],\r\n      }\r\n    ]\r\n  });\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  // make async await\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        if (id) {\r\n          const caseDetailsResponse = await pb.collection('cases').getOne(id, { expand: \"schedule_items(case).procedures,case_activity_item(case).assigned_to\" });\r\n          // Process caseDetailsResponse as needed]\r\n\r\n\r\n\r\n          if (caseDetailsResponse) {\r\n            // calculate age using util method calculateAge\r\n            let age = calculateAge(caseDetailsResponse.dob);\r\n            let activity_items = [];\r\n            let schedule_items = [];\r\n            if (caseDetailsResponse.expand) {\r\n              activity_items = (caseDetailsResponse as any).expand['case_activity_item(case)'] || [];\r\n              // sort by created date\r\n\r\n              schedule_items = (caseDetailsResponse as any).expand['schedule_items(case)'] || [];\r\n              console.log(schedule_items)\r\n              activity_items.sort((a: any, b: any) => {\r\n                return new Date(b.created).getTime() - new Date(a.created).getTime();\r\n              });\r\n\r\n            }\r\n            setCaseDetailsNew({\r\n              ...caseDetailsResponse,\r\n              age: age,\r\n              activity_items,\r\n              schedule_items: schedule_items.filter((x: any) => x.type === 'surgery'),\r\n            })\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching case details:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n\r\n\r\n  }, [id, open]);\r\n\r\n  const handleOpen = () => setOpen(true);\r\n\r\n\r\n  const navigateToCases = () => {\r\n    navigate('/cases/' + id, { replace: true });\r\n  }\r\n\r\n  return <Stack>\r\n    <Box\r\n      sx={{\r\n        flex: 1,\r\n        width: '100%',\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          bgcolor: 'background.body',\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            px: {\r\n              xs: 2,\r\n              md: 6,\r\n            },\r\n          }}\r\n        >\r\n          <Card>\r\n            <Stack>\r\n              <Stack direction=\"row\" alignItems=\"baseline\" justifyContent=\"space-between\" spacing={3}\r\n              >\r\n                <Stack direction={{ md: 'row', sm: 'column' }} alignItems={{ md: \"flex-start\", sm: 'center' }} justifyContent={\"center\"} spacing={3}>\r\n                  <AspectRatio\r\n                    ratio=\"1\"\r\n                    maxHeight={200}\r\n                    sx={{ flex: 1, minWidth: 120, borderRadius: \"100%\" }}\r\n                  >\r\n                    <img\r\n                      //if data.avatar is null, use default pic\r\n                      src={DefaultPic}\r\n                      // srcSet=\"https://images.unsplash.com/photo-1535713875002-d1d0cf377fde?auto=format&fit=crop&w=286&dpr=2 2x\"\r\n                      // loading=\"lazy\"\r\n                      alt=\"\"\r\n                    />\r\n                  </AspectRatio>\r\n                  <Stack direction={\"column\"} justifyContent=\"space-between\"  >\r\n                    <Typography\r\n                      level=\"h2\"\r\n                      sx={{\r\n                        mt: 1,\r\n                        mx: 2,\r\n\r\n                      }}\r\n                    >\r\n                      {/* every place add null checks */}\r\n                      {caseDetailsNew?.first_name} {caseDetailsNew?.last_name}\r\n                    </Typography>\r\n                    <Stack direction=\"row\" justifyContent=\"flex-start\" alignItems=\"center\" >\r\n\r\n                      <Stack direction=\"column\" justifyContent=\"flex-start \" >\r\n                        <Typography\r\n                          level=\"title-sm\"\r\n                          sx={{\r\n                            mt: 1,\r\n                            mb: 2,\r\n\r\n                            mx: 2,\r\n                          }}\r\n                        >\r\n                          Age {caseDetailsNew?.age}\r\n                        </Typography>\r\n                        <Typography\r\n                          level=\"title-sm\"\r\n                          sx={{\r\n                            mt: 1,\r\n                            mb: 2,\r\n                            mx: 2,\r\n                          }}\r\n                        >\r\n                          Gender {caseDetails.gender}\r\n                        </Typography>\r\n                      </Stack>\r\n                      <Stack direction=\"column\" justifyContent=\"flex-start\">\r\n                        <Typography\r\n                          level=\"title-sm\"\r\n                          sx={{\r\n                            mt: 1,\r\n                            mb: 2,\r\n                            mx: 2,\r\n                          }}\r\n                        >\r\n                          Status\r\n\r\n                          <Chip\r\n                            sx={{ ml: 3 }}\r\n                            color=\"primary\"\r\n                          >\r\n                            {caseDetailsNew?.status}\r\n                          </Chip>\r\n\r\n                        </Typography>\r\n                        <Typography\r\n                          level=\"title-sm\"\r\n                          sx={{\r\n                            mt: 1,\r\n                            mb: 2,\r\n                            mx: 2,\r\n                          }}\r\n                        >\r\n                          Email {caseDetailsNew?.email}\r\n                        </Typography>\r\n                      </Stack>\r\n                    </Stack>\r\n                  </Stack>\r\n                </Stack>\r\n              </Stack>\r\n              <Stack direction=\"row\" alignItems=\"flex-end\" justifyContent=\"flex-end\" spacing={3}>\r\n                <IconButton title='Add Note' variant=\"soft\" color=\"primary\" size=\"sm\" onClick={handleOpen}>\r\n                  <EditNoteIcon />\r\n                </IconButton >\r\n                {/* // add tool tip to icon */}\r\n\r\n\r\n                <IconButton title='Schedule' variant=\"soft\" color=\"primary\" size=\"sm\" onClick={() => handleBlockTime()}>\r\n                  <DataSaverOnIcon />\r\n                </IconButton >\r\n\r\n                <IconButton title='Patient Profile' variant=\"soft\" color=\"primary\" size=\"sm\" onClick={navigateToCases}>\r\n                  <ManageAccountsIcon />\r\n                </IconButton >\r\n\r\n              </Stack>\r\n            </Stack>\r\n          </Card>\r\n        </Box>\r\n      </Box>\r\n      <Tabs\r\n        defaultValue={1}\r\n        sx={{\r\n          bgcolor: 'transparent',\r\n        }}\r\n      >\r\n        <TabList\r\n          tabFlex={1}\r\n          size=\"sm\"\r\n          sx={{\r\n            zIndex: 1000,\r\n            position: 'sticky',\r\n            top: {\r\n              sm: 3000,\r\n              md: 0,\r\n            },\r\n            bgcolor: 'background.body',\r\n            pl: {\r\n              xs: 0,\r\n              md: 4,\r\n            },\r\n            justifyContent: 'left',\r\n            [`&& .${tabClasses.root}`]: {\r\n              flex: 'initial',\r\n              bgcolor: 'transparent',\r\n              [`&.${tabClasses.selected}`]: {\r\n                fontWeight: '600',\r\n                '&::after': {\r\n                  height: '2px',\r\n                  bgcolor: 'primary.500',\r\n                },\r\n              },\r\n            },\r\n          }}\r\n        >\r\n          <Tab sx={{ borderRadius: '6px 6px 0 0' }} indicatorInset value={0}>\r\n            Primary Details\r\n          </Tab>\r\n          <Tab sx={{ borderRadius: '6px 6px 0 0' }} indicatorInset value={1}>\r\n            Activity Log\r\n          </Tab>\r\n          <Tab sx={{ borderRadius: '6px 6px 0 0' }} indicatorInset value={2}>\r\n            Documents\r\n          </Tab>\r\n        </TabList>\r\n        <TabPanel value={0}>\r\n          <AccordionGroup\r\n            variant=\"plain\"\r\n            transition=\"0.2s\"\r\n            sx={{\r\n              maxWidth: '100%',\r\n              mx: 'auto',\r\n              px: {\r\n                xs: 2,\r\n                md: 6,\r\n              },\r\n              py: {\r\n                xs: 2,\r\n                md: 3,\r\n              },\r\n              borderRadius: 'md',\r\n              [`& .${accordionDetailsClasses.content}.${accordionDetailsClasses.expanded}`]:\r\n              {\r\n                paddingBlock: '1rem',\r\n              },\r\n              [`& .${accordionSummaryClasses.button}`]: {\r\n                paddingBlock: '1rem',\r\n              },\r\n            }}\r\n          >\r\n\r\n            {caseDetailsNew?.schedule_items?.length > 0 && caseDetailsNew?.schedule_items?.map((item: any) => {\r\n              return <Accordion >\r\n                <AccordionSummary>\r\n                  <Avatar color=\"primary\">\r\n                    <TapAndPlayRoundedIcon />\r\n                  </Avatar>\r\n                  <ListItemContent>\r\n\r\n                    <Typography level=\"title-md\">Sugery Details</Typography>\r\n\r\n                  </ListItemContent>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                  <SurgeryDetails surgeryDetails={caseDetails.surgery_scheduled[0]} surgeryDetail={item} />\r\n                </AccordionDetails>\r\n              </Accordion>\r\n            }\r\n            )}\r\n\r\n\r\n\r\n\r\n\r\n          </AccordionGroup>\r\n        </TabPanel>\r\n        <TabPanel value={1}>\r\n          <AccordionGroup\r\n            variant=\"plain\"\r\n            transition=\"0.2s\"\r\n            sx={{\r\n              maxWidth: '100%',\r\n              mx: 'auto',\r\n              px: {\r\n                xs: 2,\r\n                md: 6,\r\n              },\r\n              py: {\r\n                xs: 2,\r\n                md: 3,\r\n              },\r\n              borderRadius: 'md',\r\n              [`& .${accordionDetailsClasses.content}.${accordionDetailsClasses.expanded}`]:\r\n              {\r\n                paddingBlock: '1rem',\r\n              },\r\n              [`& .${accordionSummaryClasses.button}`]: {\r\n                paddingBlock: '1rem',\r\n              },\r\n            }}\r\n          >\r\n\r\n            <ActivityLogComponent case_activity_item={caseDetailsNew?.activity_items || []} />\r\n\r\n          </AccordionGroup>\r\n        </TabPanel>\r\n        <TabPanel value={2}>\r\n\r\n          <DocumentView caseId={id as string} />\r\n\r\n        </TabPanel>\r\n      </Tabs>\r\n      {/* below is example code from mui which can be used for responsive ness and other stuctrure settig */}\r\n    </Box>\r\n    {\r\n      open &&\r\n      <AddActivity open={open} setOpen={setOpen} caseId={id} type={\"note\"} />\r\n    }\r\n    {\r\n      blockTimeModalProps &&\r\n      <AddSchedule\r\n        open={blockTimeModalProps.open}\r\n        start={blockTimeModalProps.start}\r\n        end={blockTimeModalProps.end}\r\n        onClose={() => setBlockTimeModalProps(null)}\r\n\r\n        caseId={id}\r\n      />\r\n    }\r\n\r\n  </Stack >\r\n}","import React, { useMemo } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { isSameDay, startOfWeek } from 'date-fns';\r\n\r\n\r\nconst CELL_HEIGHT = 50; // Fixed height for each cell\r\n\r\nconst Scroller = styled.div`\r\n    overflow: auto;\r\n    height: 100%;\r\n    width: 100%;\r\n`;\r\n\r\nconst WeekViewCalendarContainer = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst TimeColumn = styled.div`\r\n  border-right: 1px solid #ddd;\r\n  padding: 0px 10px;\r\n  text-align: center;\r\n  position: sticky;\r\n  left: 0;\r\n  background-color: #f0f0f0;\r\n  z-index: 1;\r\n\r\n  height: ${CELL_HEIGHT * 25}px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst DayColumn = styled.div`\r\n  flex: 1;\r\n  position: relative;\r\n  height: ${CELL_HEIGHT * 25}px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst DayCell = styled.div`\r\n  border-bottom: 1px solid #ddd;\r\n  padding: 10px;\r\n  text-align: center;\r\n  font-weight: bold;\r\n  position: sticky;\r\n  top: 0;\r\n  background-color: #f0f0f0;\r\n  z-index: 1;\r\n  flex:1;\r\n\r\n`;\r\n\r\nconst HourCell = styled.div`\r\n  border-right: 1px solid #ddd;\r\n  border-bottom: 1px solid #ddd;\r\n  padding: 10px;\r\n  text-align: center;\r\n  flex:1;\r\n  \r\n  :hover {\r\n    background-color: #f0f0f0;\r\n    cursor: pointer;\r\n  }\r\n\r\n`;\r\n\r\nconst Event = styled.div`\r\n  position: absolute;\r\n  padding: 5px;\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n\r\n  transition: box-shadow 0.2s ease-in-out;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    box-shadow: 0 0 0 2px rgba(0, 0, 0, 0.2);\r\n  }\r\n`;\r\n\r\nconst LunchEvent = styled(Event)`\r\n  background-color: #4caf50;\r\n`;\r\n\r\nexport type WeekViewEventType = {\r\n    title: string;\r\n    startTime: string;\r\n    endTime: string;\r\n    type: 'surgery' | 'block';\r\n    id: string;\r\n    case: any;\r\n}\r\ntype Props = {\r\n    events: WeekViewEventType[], range: { start: string, end: string }, onSelectRange: (start: Date, end: Date) => void,\r\n    onEventClick: (event: WeekViewEventType) => void\r\n};\r\n\r\nconst WeekView = ({ events, range = {\r\n    start: startOfWeek(new Date()).toDateString(),\r\n    end: startOfWeek(new Date()).toDateString(),\r\n}, onSelectRange, onEventClick }: Props) => {\r\n    const hoursOfDay = Array.from({ length: 24 }, (_, i) => i);\r\n\r\n    const getEventsForDate = (date: string) => {\r\n        const dateObj = new Date(date);\r\n        return events.filter((event) => {\r\n            const eventDate = new Date(event.startTime);\r\n            return isSameDay(eventDate, dateObj)\r\n        });\r\n    }\r\n\r\n\r\n    const dates = useMemo(() => {\r\n        // YYYY-MM-DD\r\n        return Array.from({ length: 7 }, (_, i) => {\r\n            const date = new Date(range.start);\r\n            date.setDate(date.getDate() + i);\r\n            return date.toISOString().split('T')[0];\r\n        }\r\n        );\r\n    }, [range])\r\n\r\n\r\n    const handleHourClick = (date: string, hour: number) => {\r\n        const dateObj = new Date(date);\r\n        dateObj.setHours(hour);\r\n        onSelectRange(dateObj, new Date(dateObj.getTime() + 60 * 60 * 1000));\r\n    }\r\n\r\n    return (\r\n        <Scroller>\r\n            <WeekViewCalendarContainer>\r\n                <TimeColumn>\r\n                    <div style={{ height: CELL_HEIGHT }}></div>\r\n                    {hoursOfDay.map((hour) => (\r\n                        <div key={hour} style={{ height: CELL_HEIGHT }}>{`${hour % 12 === 0 ? 12 : hour % 12} ${hour < 12 ? 'AM' : 'PM'}`}</div>\r\n                    ))}\r\n                </TimeColumn>\r\n                {dates.map((date, index) => {\r\n                    const dateObj = new Date(date);\r\n                    const dayEvents = getEventsForDate(date);\r\n\r\n                    return (\r\n                        <DayColumn key={index}>\r\n                            <DayCell>{\r\n                                dateObj.toLocaleDateString([], {\r\n                                    weekday: 'short',\r\n                                    month: 'short',\r\n                                    day: 'numeric',\r\n                                })\r\n                            }</DayCell>\r\n                            {hoursOfDay.map((hour) => (\r\n                                <HourCell key={`${index}-${hour}`} style={{ height: CELL_HEIGHT }} onClick={e => {\r\n                                    handleHourClick(date, hour);\r\n                                }} />\r\n                            ))}\r\n                            {dayEvents\r\n                                .map((event, eventIndex) => {\r\n                                    const secondsInDay = 25 * 60 * 60;\r\n                                    const start = new Date(event.startTime);\r\n                                    const end = new Date(event.endTime);\r\n                                    const startSeconds = start.getHours() * 60 * 60 + start.getMinutes() * 60 + start.getSeconds();\r\n                                    const endSeconds = end.getHours() * 60 * 60 + end.getMinutes() * 60 + end.getSeconds();\r\n\r\n\r\n                                    const topPercent = startSeconds * 100 / secondsInDay;\r\n                                    const heightPercent = (endSeconds - startSeconds) * 100 / secondsInDay;\r\n                                    console.log('event', event, { startSeconds, endSeconds, secondsInDay, topPercent });\r\n\r\n\r\n                                    return (\r\n                                        <Event\r\n                                            key={eventIndex}\r\n                                            style={{\r\n                                                top: `${topPercent}%`,\r\n                                                height: `${heightPercent}%`,\r\n\r\n                                                transform: `translateY(${CELL_HEIGHT}px)`,\r\n                                                backgroundColor: event.type === 'surgery' ? '#4caf50' : '#a44336',\r\n                                                color: '#fff',\r\n                                            }}\r\n                                            onClick={() => {\r\n                                                onEventClick(event)\r\n                                            }}\r\n                                        >\r\n                                            <div>{event.title}</div>\r\n                                            <div>\r\n                                                {`${new Date(event.startTime).toLocaleTimeString([], {\r\n                                                    hour: '2-digit',\r\n                                                    minute: '2-digit',\r\n                                                })} - ${new Date(event.endTime).toLocaleTimeString([], {\r\n                                                    hour: '2-digit',\r\n                                                    minute: '2-digit',\r\n                                                })}`}\r\n                                            </div>\r\n                                        </Event>\r\n                                    )\r\n                                })}\r\n                        </DayColumn>\r\n                    );\r\n                })}\r\n            </WeekViewCalendarContainer>\r\n        </Scroller>\r\n    );\r\n};\r\n\r\nexport default WeekView;\r\n","import { Box, Button, DialogTitle, FormControl, FormLabel, Input, Modal, ModalClose, ModalDialog, Typography } from '@mui/joy';\r\nimport { Stack } from '@mui/material';\r\nimport { format, parse } from 'date-fns';\r\nimport React, { useEffect } from 'react';\r\nimport { Form } from 'react-router-dom';\r\nimport { pb } from '../../../services/pocketbase';\r\n\r\n\r\n\r\nexport default function BlockTimeModal({ onClose, onBlockTimeCreated, open, start: startP, end: endP }) {\r\n\r\n\r\n\r\n    const [start, setStart] = React.useState(new Date());\r\n    const [end, setEnd] = React.useState(new Date());\r\n\r\n\r\n    useEffect(() => {\r\n        if (startP) {\r\n            setStart(new Date(startP))\r\n        }\r\n        if (endP) {\r\n            setEnd(new Date(endP))\r\n        }\r\n    }, [startP, endP])\r\n\r\n\r\n    console.log(start, end)\r\n\r\n\r\n\r\n    const handleClose = () => {\r\n        onClose()\r\n    }\r\n\r\n\r\n    const handleSubmit = () => {\r\n        // create a new scheduled_event pocketbase of type block\r\n        pb.collection('schedule_items').create({\r\n            type: 'block',\r\n            start: start,\r\n            end: end,\r\n            user: pb.authStore.model.id\r\n        })\r\n            .then((res) => {\r\n                console.log(res)\r\n                handleClose()\r\n                onBlockTimeCreated(res)\r\n            })\r\n    }\r\n\r\n    return <Modal onClose={handleClose} open={open}>\r\n\r\n        <ModalDialog>\r\n            <ModalClose />\r\n\r\n            <DialogTitle >\r\n                Block Time\r\n            </DialogTitle>\r\n            <Typography variant='p'>\r\n                Block your calendar and let your team know you're busy.\r\n            </Typography>\r\n\r\n\r\n            <Stack spacing={2} >\r\n                <FormControl  >\r\n                    <FormLabel>Date</FormLabel>\r\n                    <Input\r\n\r\n                        type=\"date\"\r\n                        slotProps={{\r\n                            input: {\r\n                                min: \"2018-06-07T00:00\",\r\n                                max: \"2018-06-14T00:00\",\r\n                            },\r\n                        }}\r\n                        value={format(start, 'yyyy-MM-dd')}\r\n                        onChange={(e) => {\r\n                            const date = new Date(e.target.value)\r\n                            date.setHours(start.getHours())\r\n                            date.setMinutes(start.getMinutes())\r\n                            setStart(date)\r\n                        }}\r\n                    />\r\n                </FormControl>\r\n\r\n\r\n                <Stack direction=\"row\" spacing={2}>\r\n\r\n                    <FormControl sx={{ flex: 1 }}>\r\n                        <FormLabel>\r\n                            From\r\n                        </FormLabel>\r\n                        <Input\r\n\r\n                            type=\"time\"\r\n                            slotProps={{\r\n                                input: {\r\n                                    min: \"2018-06-07T00:00\",\r\n                                    max: \"2018-06-14T00:00\",\r\n                                },\r\n                            }}\r\n                            value={format(start, 'HH:mm')}\r\n                            onChange={(e) => {\r\n                                // parse the time and set the date\r\n                                const time = parse(e.target.value, 'HH:mm', new Date());\r\n                                const newStart = new Date(start)\r\n                                newStart.setHours(time.getHours())\r\n                                newStart.setMinutes(time.getMinutes())\r\n                                setStart(newStart)\r\n                            }}\r\n                        />\r\n                    </FormControl>\r\n\r\n\r\n                    <FormControl\r\n                        sx={{ flex: 1 }}\r\n\r\n                    >\r\n                        <FormLabel>Until</FormLabel>\r\n                        <Input\r\n\r\n                            type=\"time\"\r\n                            slotProps={{\r\n                                input: {\r\n                                    min: \"2018-06-07T00:00\",\r\n                                    max: \"2018-06-14T00:00\",\r\n                                },\r\n                            }}\r\n                            value={format(end, 'HH:mm')}\r\n                            onChange={(e) => {\r\n                                // parse the time and set the date\r\n                                const time = parse(e.target.value, 'HH:mm', new Date());\r\n                                const newEnd = new Date(end)\r\n                                newEnd.setHours(time.getHours())\r\n                                newEnd.setMinutes(time.getMinutes())\r\n                                setEnd(newEnd)\r\n                            }}\r\n                        />\r\n                    </FormControl>\r\n\r\n\r\n                </Stack>\r\n                <Box\r\n                    sx={{\r\n                        mt: 1,\r\n                        display: 'flex',\r\n                        gap: 1,\r\n                        flexDirection: { xs: 'column', sm: 'row-reverse' },\r\n                    }}\r\n                >\r\n\r\n                    <Button variant=\"solid\" color=\"primary\" onClick={\r\n                        handleSubmit\r\n                    }>\r\n                        Save\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        color=\"neutral\"\r\n                        onClick={handleClose}\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n\r\n                </Box>\r\n            </Stack>\r\n        </ModalDialog>\r\n\r\n    </Modal>\r\n\r\n}","import React, { useEffect, useMemo } from 'react';\r\nimport { pb } from '../../services/pocketbase';\r\nimport { addHours, endOfWeek, startOfDay, startOfHour, startOfWeek, subDays } from 'date-fns';\r\nimport { ListResult, RecordModel } from 'pocketbase';\r\nimport WeekView, { WeekViewEventType } from './WeekView';\r\nimport { Stack } from '@mui/material';\r\nimport { Button, Typography } from '@mui/joy';\r\nimport { Close } from '@mui/icons-material';\r\nimport BlockTimeModal from './modules/BlockTimeModal';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\n\r\nexport default function CalendarScreen() {\r\n\r\n    const navigate = useNavigate();\r\n    const [scheduledItems, setScheduledItems] = React.useState<ListResult<RecordModel>>()\r\n    const [range, setRange] = React.useState({\r\n        start: startOfWeek(new Date()).toISOString(),\r\n        end: endOfWeek(new Date()).toISOString(),\r\n    })\r\n\r\n    const [blockTimeModalProps, setBlockTimeModalProps] = React.useState<any>({\r\n        open: false,\r\n        start: new Date(),\r\n        end: new Date(),\r\n    })\r\n\r\n    const handleBlockTime = ({ start = new Date(), end = addHours(new Date(), 1) } = {}) => {\r\n        setBlockTimeModalProps({\r\n            open: true,\r\n            start,\r\n            end,\r\n        })\r\n    }\r\n\r\n    const events: WeekViewEventType[] = useMemo(() => {\r\n        if (!scheduledItems) {\r\n            return []\r\n        }\r\n        return scheduledItems.items.map((item) => {\r\n            return {\r\n                id: item.id,\r\n                title: item.title,\r\n                startTime: item.start,\r\n                endTime: item.end,\r\n                type: item.type as any,\r\n                case: item.case,\r\n            }\r\n        })\r\n\r\n    }, [scheduledItems])\r\n\r\n    const fetchScheduledItems = async () => {\r\n        // find schedule items for this user\r\n        pb.collection('schedule_items').getList(1, 50, {\r\n            filter: `user.id = \"${pb.authStore.model?.id}\"`,\r\n            expand: `case`\r\n        })\r\n            .then((items) => {\r\n                setScheduledItems(items as any)\r\n            })\r\n            .catch((error) => {\r\n                console.error(error)\r\n            })\r\n    }\r\n    useEffect(() => {\r\n        fetchScheduledItems()\r\n    }, [])\r\n\r\n\r\n    const handleSelectRange = (start: Date, end: Date) => {\r\n        handleBlockTime({\r\n            start,\r\n            end,\r\n        })\r\n    }\r\n\r\n\r\n\r\n    return <div>\r\n\r\n        <Stack direction='row' gap={1} justifyContent=\"space-between\" mb={2}>\r\n            <Typography level=\"h2\">Assigned To You</Typography>\r\n            <Button\r\n                color=\"primary\"\r\n                startDecorator={<Close />}\r\n                size=\"sm\"\r\n                onClick={() => handleBlockTime()}\r\n            >\r\n                Block Time\r\n            </Button>\r\n        </Stack>\r\n\r\n        <WeekView events={events} range={range} onSelectRange={handleSelectRange} onEventClick={\r\n            (event) => {\r\n                if (event.type === 'block') {\r\n                    return\r\n                }\r\n\r\n\r\n                console.log(event)\r\n                navigate(`/cases/details/${event.case}`)\r\n\r\n            }\r\n        } />\r\n\r\n        {blockTimeModalProps &&\r\n            <BlockTimeModal\r\n                open={blockTimeModalProps.open}\r\n                start={blockTimeModalProps.start}\r\n                end={blockTimeModalProps.end}\r\n                onClose={() => setBlockTimeModalProps(null)}\r\n                onBlockTimeCreated={\r\n                    fetchScheduledItems\r\n                }\r\n            />}\r\n    </div>\r\n}","import React, { Suspense } from \"react\";\r\nimport OrderTable from \"./views/cases/CasesTable\";\r\nimport OrderList from \"./components/OrderList\";\r\nimport menuItems from \"./nav\";\r\nimport Box from \"@mui/joy/Box\";\r\n\r\nimport Breadcrumbs from \"@mui/joy/Breadcrumbs\";\r\nimport Link from \"@mui/joy/Link\";\r\nimport Typography from \"@mui/joy/Typography\";\r\n// icons\r\nimport HomeRoundedIcon from \"@mui/icons-material/HomeRounded\";\r\nimport ChevronRightRoundedIcon from \"@mui/icons-material/ChevronRightRounded\";\r\nimport DownloadRoundedIcon from \"@mui/icons-material/DownloadRounded\";\r\nimport Button from \"@mui/joy/Button\";\r\nimport { CircularProgress } from \"@mui/joy\";\r\nimport { Navigate, Route, Routes, BrowserRouter } from \"react-router-dom\";\r\nimport Dashboard from \"./views/dashboard/Dashboard\";\r\nimport Cases from \"./views/cases/Cases\";\r\nimport AssignedAppointments from \"./views/assigned/AssignedAppointments\";\r\nimport CaseView from \"./views/cases/caseDetailView/CaseView\";\r\nimport AddCase from \"./views/addCase/AddCase\";\r\nimport DetailView from \"./views/cases/caseDetailView/DetailView\";\r\nimport CalendarScreen from \"./views/calendar/CalendarScreen\";\r\nimport ConsentForm from \"./views/cases/documents/ConsentForm\";\r\n\r\nexport default function AppContent() {\r\n  return (\r\n    <>\r\n      <Box\r\n        component=\"main\"\r\n        className=\"MainContent\"\r\n        sx={{\r\n          marginLeft: {\r\n            md: \"var(--Sidebar-width)\"\r\n          }\r\n          ,\r\n\r\n          px: {\r\n            xs: 2,\r\n            md: 6,\r\n          },\r\n          pt: {\r\n            xs: \"calc(12px + var(--Header-height))\",\r\n            sm: \"calc(12px + var(--Header-height))\",\r\n            md: 3,\r\n          },\r\n          pb: {\r\n            xs: 2,\r\n            sm: 2,\r\n            md: 3,\r\n          },\r\n          flex: 1,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          minWidth: 0,\r\n          height: \"100dvh\",\r\n          gap: 1,\r\n        }}\r\n      >\r\n        <Suspense fallback={<CircularProgress color=\"primary\" />}>\r\n          <Routes>\r\n            <Route key={\"cases\"} path={\"/cases/details/:id\"} element={<DetailView />} />\r\n            <Route key={\"cases\"} path={\"/cases/:id\"} element={<CaseView />} />\r\n\r\n            {/* <Route key={\"cases\"} path={\"/cases*\"} element={<Cases />} /> */}\r\n            <Route key={\"cases\"} path={\"/cases/*\"} element={<Cases />} />\r\n\r\n            <Route\r\n              key={\"Calendar\"}\r\n              path={\"/calendar\"}\r\n              element={<CalendarScreen />}\r\n            />\r\n            <Route key={\"dashboard\"} path={\"/dashboard\"} element={<Dashboard />} />\r\n            <Route\r\n              key={\"assigned\"}\r\n              path={\"/assigned\"}\r\n              element={<AssignedAppointments />}\r\n            />\r\n            <Route key={\"addCase\"} path={\"/addCase\"} element={<AddCase />} />\r\n          </Routes>\r\n        </Suspense>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Header from \"./components/Header\";\r\n\r\nimport SidebarNew from \"./components/SidebarNew\";\r\nimport OrderTable from \"./views/cases/CasesTable\";\r\nimport OrderList from \"./components/OrderList\";\r\nimport menuItems from \"./nav\";\r\nimport Box from \"@mui/joy/Box\";\r\n\r\nimport Breadcrumbs from \"@mui/joy/Breadcrumbs\";\r\nimport Link from \"@mui/joy/Link\";\r\nimport Typography from \"@mui/joy/Typography\";\r\n// icons\r\nimport HomeRoundedIcon from \"@mui/icons-material/HomeRounded\";\r\nimport ChevronRightRoundedIcon from \"@mui/icons-material/ChevronRightRounded\";\r\nimport DownloadRoundedIcon from \"@mui/icons-material/DownloadRounded\";\r\nimport Button from \"@mui/joy/Button\";\r\nimport AppContent from \"./AppContent\";\r\nimport { pb } from \"./services/pocketbase\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { ToastContainer } from \"react-toastify\";\r\n\r\nexport default function AppLayout() {\r\n\r\n  if (pb.authStore.isValid == false) {\r\n    return <Navigate replace to=\"/login\" />;\r\n  }\r\n  return (\r\n    <>\r\n      <Header />\r\n      <SidebarNew menuItems={menuItems} />\r\n      <AppContent />\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={2000}\r\n\r\n      />\r\n    </>\r\n  );\r\n}\r\n"],"names":["closeSidebar","document","documentElement","style","removeProperty","body","toggleSidebar","window","getComputedStyle","getPropertyValue","overflow","setProperty","Header","_jsxs","Sheet","sx","display","xs","md","alignItems","justifyContent","position","top","width","height","zIndex","p","gap","borderBottom","borderColor","boxShadow","children","_jsx","GlobalStyles","styles","theme","breakpoints","up","IconButton","onClick","variant","color","size","MenuIcon","ColorSchemeToggle","_ref","props","mode","setMode","useColorScheme","mounted","setMounted","React","id","event","Array","isArray","DarkModeRoundedIcon","LightModeIcon","disabled","Toggler","defaultExpanded","renderToggle","open","setOpen","Box","gridTemplateRows","transition","Sidebar","_ref2","menuItems","logout","navigate","useNavigate","async","pb","authStore","clear","useLogout","className","transform","flexShrink","flexDirection","borderRight","left","opacity","backgroundColor","lg","BrightnessAutoRoundedIcon","Typography","level","LogoutRoundedIcon","ml","List","map","menuItem","index","ListItem","nested","_ref3","ListItemButton","icon","ListItemContent","label","KeyboardArrowDownIcon","submenu","nestedItem","nestedIndex","role","component","RouterLink","to","link","DashboardRoundedIcon","AssignmentIndRounded","HomeRoundedIcon","CalendarMonthRounded","PersonAddIcon","VisibilityOutlinedIcon","PersonOutlineOutlinedIcon","CheckIcon","value","setValue","useState","stats","setStats","title","count","change","useEffect","currentDate","Date","startDate","setDate","getDate","setMonth","getMonth","setFullYear","getFullYear","cases","collection","getFullList","filter","toISOString","newStats","forEach","c","status","error","console","log","fetchCases","_Fragment","mt","mx","flexGrow","ToggleButtonGroup","onChange","newValue","Button","gridTemplateColumns","sm","padding","stat","Card","borderRadius","margin","maxWidth","boxSizing","fontWeight","fontSize","CasesTable","patients","page","setPage","patientsData","setPatientsData","pagePatients","setPagePatients","startIndex","endIndex","slicedPatients","slice","handleChangePage","newPage","py","flexWrap","minWidth","FormControl","flex","FormLabel","Input","placeholder","startDecorator","SearchIcon","e","target","toLowerCase","trim","filteredPatientsResult","patient","name","includes","dob","minHeight","Table","stickyHeader","hoverRow","row","Link","navigateToCase","concat","VisibilityIcon","pt","iconButtonClasses","root","KeyboardArrowLeftIcon","from","length","Math","ceil","_","Number","endDecorator","KeyboardArrowRightIcon","formatDate","dateString","date","now","toDateString","secondsAgo","floor","getTime","minutesAgo","hoursAgo","toLocaleDateString","undefined","year","month","day","hour","minute","second","Cases","setPatients","convertDate","split","sort","requestKey","record","first_name","last_name","getList","my","OrderTable","listItems","customer","initial","email","RowMenu","Dropdown","MenuButton","slots","slotProps","MoreHorizRoundedIcon","Menu","MenuItem","Divider","OrderList","listItem","ListItemDecorator","Avatar","gutterBottom","mb","Chip","Paid","CheckRoundedIcon","Refunded","AutorenewRoundedIcon","Cancelled","BlockIcon","ListDivider","_item$expand","item","durationFormatted","useMemo","start","end","duration","intervalToDuration","formatDuration","format","caseDetails","expand","case","textDecoration","Stack","direction","phone","textAlign","procedures","procedure","laterality","site","cpt_code","Vaccines","anesthesia_type","anesthesia_position","specialty","ssn","created","meta","note","AssignedAppointments","result","setResult","activityItems","setActivityItems","isSurgeon","setIsSurgeon","range","setRange","startOfWeek","endOfWeek","_pb$authStore$model","_pb$authStore$model2","_pb$authStore$model3","model","then","items","catch","scheduledItems","ScheduledItem","AdminItem","CountrySelector","Autocomplete","autoHighlight","isOptionEqualToValue","option","code","defaultValue","options","countries","renderOption","optionProps","AutocompleteOption","AspectRatio","ratio","loading","srcSet","src","alt","textColor","input","autoComplete","suggested","Caseview","caseId","useParams","data","setData","editMode","setEditMode","Surgery","setSurgery","getOne","fetchCaseData","handleChange","prevData","bgcolor","px","spacing","handleEditModeToggle","prevEditMode","ArticleIcon","EditRoundedIcon","maxHeight","DefaultPic","phone_number","LocalPhoneIcon","type","EmailRoundedIcon","Grid3x3Icon","HomeIcon","Select","sex","required","Option","BusinessIcon","max","AccessTimeFilledRoundedIcon","Textarea","minRows","FormHelperText","CardOverflow","borderTop","CardActions","alignSelf","preventDefault","update","updateData","MyProfile","setdata","procedure_details","setProcedure","cptCode","setCptCode","min","Checkbox","checked","LocalHospitalIcon","handleAddProcedure","updatedProcedures","border","marginTop","splice","handleRemoveProcedure","CloseIcon","create","err","handleSubmit","surgeryDetails","surgeryDetail","overflowY","marginLeft","case_activity_item","activityItem","_activityItem$meta","_activityItem$expand","_activityItem$meta2","Accordion","AccordionSummary","FormatListBulletedIcon","TaskAltIcon","TapAndPlayRoundedIcon","HistoryToggleOffIcon","join","assigned_to","AccordionDetails","file","attachment","fileName","Icon","endsWith","PictureAsPdfOutlinedIcon","TableChartOutlinedIcon","ImageOutlinedIcon","getIcon","formattedName","nameWithoutId","charAt","toUpperCase","substring","lastIndexOf","formatFileName","fileExtension","matches","match","getFileExtension","fileUrl","encodeURIComponent","response","fetch","blob","downloadUrl","URL","createObjectURL","createElement","href","download","appendChild","click","removeChild","revokeObjectURL","description","handleClose","files","setFiles","fetchFiles","filesData","updated","htmlFor","marginX","accept","multiple","formData","FormData","append","FileCard","ConsentForm","AddSchedule","onClose","startP","endP","setStart","setEnd","users","setUsers","setProcedures","fetchData","Modal","ModalDialog","ModalClose","DialogTitle","x","user","setHours","getHours","setMinutes","getMinutes","time","parse","newStart","newEnd","res","until","setNote","onSubmit","req","encType","DetailView","_caseDetailsNew$sched","_caseDetailsNew$sched2","blockTimeModalProps","setBlockTimeModalProps","caseDetailsNew","setCaseDetailsNew","setCaseDetails","age","gender","attachments","surgery_scheduled_id","surgery_scheduled","caseDetailsResponse","birthday","ageDifMs","ageDate","abs","getUTCFullYear","calculateAge","activity_items","schedule_items","a","b","handleOpen","EditNoteIcon","addHours","arguments","handleBlockTime","DataSaverOnIcon","navigateToCases","replace","ManageAccountsIcon","Tabs","TabList","tabFlex","pl","tabClasses","selected","Tab","indicatorInset","TabPanel","AccordionGroup","accordionDetailsClasses","content","expanded","paddingBlock","accordionSummaryClasses","button","SurgeryDetails","ActivityLogComponent","DocumentView","AddActivity","CELL_HEIGHT","Scroller","styled","div","_templateObject","_taggedTemplateLiteral","WeekViewCalendarContainer","_templateObject2","TimeColumn","_templateObject3","DayColumn","_templateObject4","DayCell","_templateObject5","HourCell","_templateObject6","Event","_templateObject7","_templateObject8","events","onSelectRange","onEventClick","hoursOfDay","i","dates","dateObj","dayEvents","eventDate","startTime","isSameDay","getEventsForDate","weekday","handleHourClick","eventIndex","secondsInDay","endTime","startSeconds","getSeconds","endSeconds","topPercent","heightPercent","toLocaleTimeString","BlockTimeModal","onBlockTimeCreated","CalendarScreen","setScheduledItems","fetchScheduledItems","Close","WeekView","handleSelectRange","AppContent","Suspense","fallback","CircularProgress","Routes","Route","path","element","CaseView","Dashboard","AddCase","AppLayout","isValid","Navigate","SidebarNew","ToastContainer","autoClose"],"sourceRoot":""}