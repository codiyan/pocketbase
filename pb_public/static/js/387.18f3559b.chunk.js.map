{"version":3,"file":"static/js/387.18f3559b.chunk.js","mappings":"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","sources":["views/pages/Login.tsx","hooks/useLogin.ts","../node_modules/@mui/icons-material/BadgeRounded.js","../node_modules/@mui/icons-material/LightModeRounded.js"],"sourcesContent":["import * as React from \"react\";\r\nimport { CssVarsProvider, useColorScheme } from \"@mui/joy/styles\";\r\nimport GlobalStyles from \"@mui/joy/GlobalStyles\";\r\nimport CssBaseline from \"@mui/joy/CssBaseline\";\r\nimport Box from \"@mui/joy/Box\";\r\nimport Button from \"@mui/joy/Button\";\r\nimport Checkbox from \"@mui/joy/Checkbox\";\r\nimport Divider from \"@mui/joy/Divider\";\r\nimport FormControl from \"@mui/joy/FormControl\";\r\nimport FormLabel, { formLabelClasses } from \"@mui/joy/FormLabel\";\r\nimport IconButton, { IconButtonProps } from \"@mui/joy/IconButton\";\r\nimport Link from \"@mui/joy/Link\";\r\nimport Input from \"@mui/joy/Input\";\r\nimport Typography from \"@mui/joy/Typography\";\r\nimport Stack from \"@mui/joy/Stack\";\r\nimport DarkModeRoundedIcon from \"@mui/icons-material/DarkModeRounded\";\r\nimport LightModeRoundedIcon from \"@mui/icons-material/LightModeRounded\";\r\nimport BadgeRoundedIcon from \"@mui/icons-material/BadgeRounded\";\r\nimport { Google, ResetTv } from \"@mui/icons-material\";\r\nimport { pb } from \"../../services/pocketbase\";\r\nimport useLogin from \"../../hooks/useLogin\";\r\nimport { Navigate } from 'react-router-dom';\r\n\r\ninterface FormElements extends HTMLFormControlsCollection {\r\n  email: HTMLInputElement;\r\n  password: HTMLInputElement;\r\n  persistent: HTMLInputElement;\r\n}\r\ninterface SignInFormElement extends HTMLFormElement {\r\n  readonly elements: FormElements;\r\n}\r\n\r\nfunction ColorSchemeToggle({ onClick, ...props }: IconButtonProps) {\r\n  const { mode, setMode } = useColorScheme();\r\n  const [mounted, setMounted] = React.useState(false);\r\n  React.useEffect(() => {\r\n    setMounted(true);\r\n  }, []);\r\n  if (!mounted) {\r\n    return <IconButton size=\"sm\" variant=\"outlined\" color=\"neutral\" disabled />;\r\n  }\r\n  return (\r\n    <IconButton\r\n      id=\"toggle-mode\"\r\n      size=\"sm\"\r\n      variant=\"outlined\"\r\n      color=\"neutral\"\r\n      aria-label=\"toggle light/dark mode\"\r\n      {...props}\r\n      onClick={(event) => {\r\n        if (mode === \"light\") {\r\n          setMode(\"dark\");\r\n        } else {\r\n          setMode(\"light\");\r\n        }\r\n        onClick?.(event);\r\n      }}\r\n    >\r\n      {mode === \"light\" ? <DarkModeRoundedIcon /> : <LightModeRoundedIcon />}\r\n    </IconButton>\r\n  );\r\n}\r\n\r\nexport default function Login() {\r\n\r\n  const { login, loading } = useLogin();\r\n\r\n  if (pb.authStore.isValid == true) {\r\n    return <Navigate replace to=\"/\" />\r\n  }\r\n\r\n  return (\r\n    <CssVarsProvider defaultMode=\"dark\" disableTransitionOnChange>\r\n      <CssBaseline />\r\n      <GlobalStyles\r\n        styles={{\r\n          \":root\": {\r\n            \"--Collapsed-breakpoint\": \"769px\", // form will stretch when viewport is below `769px`\r\n            \"--Cover-width\": \"50vw\", // must be `vw` only\r\n            \"--Form-maxWidth\": \"800px\",\r\n            \"--Transition-duration\": \"0.4s\", // set to `none` to disable transition\r\n          },\r\n        }}\r\n      />\r\n      <Box\r\n        sx={(theme) => ({\r\n          width:\r\n            \"clamp(100vw - var(--Cover-width), (var(--Collapsed-breakpoint) - 100vw) * 999, 100vw)\",\r\n          transition: \"width var(--Transition-duration)\",\r\n          transitionDelay: \"calc(var(--Transition-duration) + 0.1s)\",\r\n          position: \"relative\",\r\n          zIndex: 1,\r\n          display: \"flex\",\r\n          justifyContent: \"flex-end\",\r\n          backdropFilter: \"blur(12px)\",\r\n          backgroundColor: \"rgba(255 255 255 / 0.2)\",\r\n          [theme.getColorSchemeSelector(\"dark\")]: {\r\n            backgroundColor: \"rgba(19 19 24 / 0.4)\",\r\n          },\r\n        })}\r\n      >\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            minHeight: \"100dvh\",\r\n            width:\r\n              \"clamp(var(--Form-maxWidth), (var(--Collapsed-breakpoint) - 100vw) * 999, 100%)\",\r\n            maxWidth: \"100%\",\r\n            px: 2,\r\n          }}\r\n        >\r\n          <Box\r\n            component=\"header\"\r\n            sx={{\r\n              py: 3,\r\n              display: \"flex\",\r\n              alignItems: \"left\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <Box\r\n              sx={{\r\n                gap: 2,\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <IconButton variant=\"soft\" color=\"primary\" size=\"sm\">\r\n                <BadgeRoundedIcon />\r\n              </IconButton>\r\n              <Typography level=\"title-lg\">SurgeryX</Typography>\r\n            </Box>\r\n            <ColorSchemeToggle />\r\n          </Box>\r\n          <Box\r\n            component=\"main\"\r\n            sx={{\r\n              my: \"auto\",\r\n              py: 2,\r\n              pb: 5,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              gap: 2,\r\n              width: 400,\r\n              maxWidth: \"100%\",\r\n              mx: \"auto\",\r\n              borderRadius: \"sm\",\r\n              \"& form\": {\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                gap: 2,\r\n              },\r\n              [`& .${formLabelClasses.asterisk}`]: {\r\n                visibility: \"hidden\",\r\n              },\r\n            }}\r\n          >\r\n            <Stack gap={4} sx={{ mb: 2 }}>\r\n              <Stack gap={1}>\r\n\r\n                <Typography level=\"h3\">Sign in</Typography>\r\n                {/* <Typography level=\"body-sm\">\r\n                  New to company?{\" \"}\r\n                  <Link level=\"title-sm\">\r\n                    Sign up!\r\n                  </Link>\r\n                </Typography> */}\r\n              </Stack>\r\n\r\n              {/* <Button\r\n                variant=\"soft\"\r\n                color=\"neutral\"\r\n                fullWidth\r\n                startDecorator={<Google />}\r\n              >\r\n                Continue with Google\r\n              </Button> */}\r\n            </Stack>\r\n            {/* <Divider\r\n              sx={(theme) => ({\r\n                [theme.getColorSchemeSelector(\"light\")]: {\r\n                  color: { xs: \"#FFF\", md: \"text.tertiary\" },\r\n                  \"--Divider-lineColor\": {\r\n                    xs: \"#FFF\",\r\n                    md: \"var(--joy-palette-divider)\",\r\n                  },\r\n                },\r\n              })}\r\n            >\r\n              or\r\n            </Divider> */}\r\n            <Stack gap={4} sx={{ mt: 2 }}>\r\n              <form\r\n                onSubmit={(event: React.FormEvent<SignInFormElement>) => {\r\n                  event.preventDefault();\r\n                  const formElements = event.currentTarget.elements;\r\n                  const data = {\r\n                    email: formElements.email.value,\r\n                    password: formElements.password.value,\r\n                    persistent: formElements.persistent.checked,\r\n                  };\r\n                  login(data);\r\n                }}\r\n              >\r\n                <FormControl required>\r\n                  <FormLabel>Email</FormLabel>\r\n                  <Input type=\"email\" name=\"email\" />\r\n                </FormControl>\r\n                <FormControl required>\r\n                  <FormLabel>Password</FormLabel>\r\n                  <Input type=\"password\" name=\"password\" />\r\n                </FormControl>\r\n                <Stack gap={4} sx={{ mt: 2 }}>\r\n                  <Box\r\n                    sx={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <Checkbox size=\"sm\" label=\"Remember me\" name=\"persistent\" />\r\n                    <Link level=\"title-sm\" href=\"#replace-with-a-link\">\r\n                      Forgot your password?\r\n                    </Link>\r\n                  </Box>\r\n                  <Button type=\"submit\" fullWidth disabled={loading}>\r\n                    {loading ? \"Signing in...\" : \"Sign in\"}\r\n                  </Button>\r\n                </Stack>\r\n              </form>\r\n            </Stack>\r\n          </Box>\r\n          <Box component=\"footer\" sx={{ py: 3 }}>\r\n            <Typography level=\"body-xs\" textAlign=\"center\">\r\n              © SurgeryX {new Date().getFullYear()}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      <Box\r\n        sx={(theme) => ({\r\n          height: \"100%\",\r\n          position: \"fixed\",\r\n          right: 0,\r\n          top: 0,\r\n          bottom: 0,\r\n          left: \"clamp(0px, (100vw - var(--Collapsed-breakpoint)) * 999, 100vw - var(--Cover-width))\",\r\n          transition:\r\n            \"background-image var(--Transition-duration), left var(--Transition-duration) !important\",\r\n          transitionDelay: \"calc(var(--Transition-duration) + 0.1s)\",\r\n          backgroundColor: \"background.level1\",\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"center\",\r\n          backgroundRepeat: \"no-repeat\",\r\n          backgroundImage:\r\n            \"url(https://scopeblog.stanford.edu/wp-content/uploads/2021/10/AdobeStock_254314831-scaled-1152x578-2.jpeg)\",\r\n          [theme.getColorSchemeSelector(\"dark\")]: {\r\n            backgroundImage:\r\n              \"url(https://scopeblog.stanford.edu/wp-content/uploads/2021/10/AdobeStock_254314831-scaled-1152x578-2.jpeg)\",\r\n          },\r\n        })}\r\n      />\r\n    </CssVarsProvider>\r\n  );\r\n}\r\n","import React from \"react\"\r\nimport {useState} from \"react\"\r\nimport {pb} from \"../services/pocketbase\"\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nexport default function useLogin() {\r\n    const navigate = useNavigate();\r\n    const [loading, setLoading] = useState(false);\r\n    async function login(data: any) {\r\n    setLoading(true);\r\n    try {\r\n      const authData = await pb\r\n        .collection(\"users\")\r\n        .authWithPassword(data.email, data.password);\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n    setLoading(false);\r\n    navigate(\"/\");\r\n  }\r\n  return {login, loading}\r\n}","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 7h-5V4c0-1.1-.9-2-2-2h-2c-1.1 0-2 .9-2 2v3H4c-1.1 0-2 .9-2 2v11c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V9c0-1.1-.9-2-2-2zM9 12c.83 0 1.5.67 1.5 1.5S9.83 15 9 15s-1.5-.67-1.5-1.5S8.17 12 9 12zm3 6H6v-.43c0-.6.36-1.15.92-1.39.64-.28 1.34-.43 2.08-.43s1.44.15 2.08.43c.55.24.92.78.92 1.39V18zm1-9h-2V4h2v5zm4.25 7.5h-2.5c-.41 0-.75-.34-.75-.75s.34-.75.75-.75h2.5c.41 0 .75.34.75.75s-.34.75-.75.75zm0-3h-2.5c-.41 0-.75-.34-.75-.75s.34-.75.75-.75h2.5c.41 0 .75.34.75.75s-.34.75-.75.75z\"\n}), 'BadgeRounded');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7c-2.76 0-5 2.24-5 5s2.24 5 5 5 5-2.24 5-5-2.24-5-5-5zM2 13h2c.55 0 1-.45 1-1s-.45-1-1-1H2c-.55 0-1 .45-1 1s.45 1 1 1zm18 0h2c.55 0 1-.45 1-1s-.45-1-1-1h-2c-.55 0-1 .45-1 1s.45 1 1 1zM11 2v2c0 .55.45 1 1 1s1-.45 1-1V2c0-.55-.45-1-1-1s-1 .45-1 1zm0 18v2c0 .55.45 1 1 1s1-.45 1-1v-2c0-.55-.45-1-1-1s-1 .45-1 1zM5.99 4.58c-.39-.39-1.03-.39-1.41 0-.39.39-.39 1.03 0 1.41l1.06 1.06c.39.39 1.03.39 1.41 0s.39-1.03 0-1.41L5.99 4.58zm12.37 12.37c-.39-.39-1.03-.39-1.41 0-.39.39-.39 1.03 0 1.41l1.06 1.06c.39.39 1.03.39 1.41 0 .39-.39.39-1.03 0-1.41l-1.06-1.06zm1.06-10.96c.39-.39.39-1.03 0-1.41-.39-.39-1.03-.39-1.41 0l-1.06 1.06c-.39.39-.39 1.03 0 1.41s1.03.39 1.41 0l1.06-1.06zM7.05 18.36c.39-.39.39-1.03 0-1.41-.39-.39-1.03-.39-1.41 0l-1.06 1.06c-.39.39-.39 1.03 0 1.41s1.03.39 1.41 0l1.06-1.06z\"\n}), 'LightModeRounded');\nexports.default = _default;"],"names":["ColorSchemeToggle","_ref","onClick","props","mode","setMode","useColorScheme","mounted","setMounted","React","_jsx","IconButton","id","size","variant","color","event","children","DarkModeRoundedIcon","LightModeRoundedIcon","disabled","Login","login","loading","navigate","useNavigate","setLoading","useState","async","data","pb","collection","authWithPassword","email","password","e","alert","useLogin","authStore","isValid","Navigate","replace","to","_jsxs","CssVarsProvider","defaultMode","disableTransitionOnChange","CssBaseline","GlobalStyles","styles","Box","sx","theme","width","transition","transitionDelay","position","zIndex","display","justifyContent","backdropFilter","backgroundColor","getColorSchemeSelector","flexDirection","minHeight","maxWidth","px","component","py","alignItems","gap","BadgeRoundedIcon","Typography","level","my","mx","borderRadius","concat","formLabelClasses","asterisk","visibility","Stack","mb","mt","onSubmit","preventDefault","formElements","currentTarget","elements","value","persistent","checked","FormControl","required","FormLabel","Input","type","name","Checkbox","label","Link","href","Button","fullWidth","textAlign","Date","getFullYear","height","right","top","bottom","left","backgroundSize","backgroundPosition","backgroundRepeat","backgroundImage","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}